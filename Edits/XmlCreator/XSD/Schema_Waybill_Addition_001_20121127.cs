//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3634
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace WaybillTD_20121127_new {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("WAYBILL_ADDITION")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class WAYBILL_ADDITION : global::System.Data.DataSet {
        
        private SUBREGIONDataTable tableSUBREGION;
        
        private DESTINATION_CODEDataTable tableDESTINATION_CODE;
        
        private BOXDataTable tableBOX;
        
        private UDF_HEADERDataTable tableUDF_HEADER;
        
        private UDF_DETAILDataTable tableUDF_DETAIL;
        
        private UDF_BOXDataTable tableUDF_BOX;
        
        private global::System.Data.DataRelation relationSUBREGION_DESTINATION_CODE;
        
        private global::System.Data.DataRelation relationDESTINATION_CODE_BOX;
        
        private global::System.Data.DataRelation relationBOX_UDF_HEADER;
        
        private global::System.Data.DataRelation relationBOX_UDF_DETAIL;
        
        private global::System.Data.DataRelation relationBOX_UDF_BOX;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WAYBILL_ADDITION() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected WAYBILL_ADDITION(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SUBREGION"] != null)) {
                    base.Tables.Add(new SUBREGIONDataTable(ds.Tables["SUBREGION"]));
                }
                if ((ds.Tables["DESTINATION_CODE"] != null)) {
                    base.Tables.Add(new DESTINATION_CODEDataTable(ds.Tables["DESTINATION_CODE"]));
                }
                if ((ds.Tables["BOX"] != null)) {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null)) {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null)) {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["UDF_BOX"] != null)) {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SUBREGIONDataTable SUBREGION {
            get {
                return this.tableSUBREGION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DESTINATION_CODEDataTable DESTINATION_CODE {
            get {
                return this.tableDESTINATION_CODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOXDataTable BOX {
            get {
                return this.tableBOX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_HEADERDataTable UDF_HEADER {
            get {
                return this.tableUDF_HEADER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_DETAILDataTable UDF_DETAIL {
            get {
                return this.tableUDF_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_BOXDataTable UDF_BOX {
            get {
                return this.tableUDF_BOX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            WAYBILL_ADDITION cln = ((WAYBILL_ADDITION)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SUBREGION"] != null)) {
                    base.Tables.Add(new SUBREGIONDataTable(ds.Tables["SUBREGION"]));
                }
                if ((ds.Tables["DESTINATION_CODE"] != null)) {
                    base.Tables.Add(new DESTINATION_CODEDataTable(ds.Tables["DESTINATION_CODE"]));
                }
                if ((ds.Tables["BOX"] != null)) {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null)) {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null)) {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["UDF_BOX"] != null)) {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSUBREGION = ((SUBREGIONDataTable)(base.Tables["SUBREGION"]));
            if ((initTable == true)) {
                if ((this.tableSUBREGION != null)) {
                    this.tableSUBREGION.InitVars();
                }
            }
            this.tableDESTINATION_CODE = ((DESTINATION_CODEDataTable)(base.Tables["DESTINATION_CODE"]));
            if ((initTable == true)) {
                if ((this.tableDESTINATION_CODE != null)) {
                    this.tableDESTINATION_CODE.InitVars();
                }
            }
            this.tableBOX = ((BOXDataTable)(base.Tables["BOX"]));
            if ((initTable == true)) {
                if ((this.tableBOX != null)) {
                    this.tableBOX.InitVars();
                }
            }
            this.tableUDF_HEADER = ((UDF_HEADERDataTable)(base.Tables["UDF_HEADER"]));
            if ((initTable == true)) {
                if ((this.tableUDF_HEADER != null)) {
                    this.tableUDF_HEADER.InitVars();
                }
            }
            this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(base.Tables["UDF_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableUDF_DETAIL != null)) {
                    this.tableUDF_DETAIL.InitVars();
                }
            }
            this.tableUDF_BOX = ((UDF_BOXDataTable)(base.Tables["UDF_BOX"]));
            if ((initTable == true)) {
                if ((this.tableUDF_BOX != null)) {
                    this.tableUDF_BOX.InitVars();
                }
            }
            this.relationSUBREGION_DESTINATION_CODE = this.Relations["SUBREGION_DESTINATION_CODE"];
            this.relationDESTINATION_CODE_BOX = this.Relations["DESTINATION_CODE_BOX"];
            this.relationBOX_UDF_HEADER = this.Relations["BOX_UDF_HEADER"];
            this.relationBOX_UDF_DETAIL = this.Relations["BOX_UDF_DETAIL"];
            this.relationBOX_UDF_BOX = this.Relations["BOX_UDF_BOX"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "WAYBILL_ADDITION";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSUBREGION = new SUBREGIONDataTable();
            base.Tables.Add(this.tableSUBREGION);
            this.tableDESTINATION_CODE = new DESTINATION_CODEDataTable();
            base.Tables.Add(this.tableDESTINATION_CODE);
            this.tableBOX = new BOXDataTable();
            base.Tables.Add(this.tableBOX);
            this.tableUDF_HEADER = new UDF_HEADERDataTable();
            base.Tables.Add(this.tableUDF_HEADER);
            this.tableUDF_DETAIL = new UDF_DETAILDataTable();
            base.Tables.Add(this.tableUDF_DETAIL);
            this.tableUDF_BOX = new UDF_BOXDataTable();
            base.Tables.Add(this.tableUDF_BOX);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("SUBREGION_DESTINATION_CODE", new global::System.Data.DataColumn[] {
                        this.tableSUBREGION.SUBREGION_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDESTINATION_CODE.SUBREGION_IdColumn});
            this.tableDESTINATION_CODE.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("DESTINATION_CODE_BOX", new global::System.Data.DataColumn[] {
                        this.tableDESTINATION_CODE.DESTINATION_CODE_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOX.DESTINATION_CODE_IdColumn});
            this.tableBOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.BOX_Id_0Column});
            this.tableUDF_HEADER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.BOX_Id_0Column});
            this.tableUDF_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column});
            this.tableUDF_BOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationSUBREGION_DESTINATION_CODE = new global::System.Data.DataRelation("SUBREGION_DESTINATION_CODE", new global::System.Data.DataColumn[] {
                        this.tableSUBREGION.SUBREGION_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDESTINATION_CODE.SUBREGION_IdColumn}, false);
            this.relationSUBREGION_DESTINATION_CODE.Nested = true;
            this.Relations.Add(this.relationSUBREGION_DESTINATION_CODE);
            this.relationDESTINATION_CODE_BOX = new global::System.Data.DataRelation("DESTINATION_CODE_BOX", new global::System.Data.DataColumn[] {
                        this.tableDESTINATION_CODE.DESTINATION_CODE_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOX.DESTINATION_CODE_IdColumn}, false);
            this.relationDESTINATION_CODE_BOX.Nested = true;
            this.Relations.Add(this.relationDESTINATION_CODE_BOX);
            this.relationBOX_UDF_HEADER = new global::System.Data.DataRelation("BOX_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.BOX_Id_0Column}, false);
            this.relationBOX_UDF_HEADER.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_HEADER);
            this.relationBOX_UDF_DETAIL = new global::System.Data.DataRelation("BOX_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.BOX_Id_0Column}, false);
            this.relationBOX_UDF_DETAIL.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_DETAIL);
            this.relationBOX_UDF_BOX = new global::System.Data.DataRelation("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column}, false);
            this.relationBOX_UDF_BOX.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_BOX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSUBREGION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDESTINATION_CODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_HEADER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_BOX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SUBREGIONRowChangeEventHandler(object sender, SUBREGIONRowChangeEvent e);
        
        public delegate void DESTINATION_CODERowChangeEventHandler(object sender, DESTINATION_CODERowChangeEvent e);
        
        public delegate void BOXRowChangeEventHandler(object sender, BOXRowChangeEvent e);
        
        public delegate void UDF_HEADERRowChangeEventHandler(object sender, UDF_HEADERRowChangeEvent e);
        
        public delegate void UDF_DETAILRowChangeEventHandler(object sender, UDF_DETAILRowChangeEvent e);
        
        public delegate void UDF_BOXRowChangeEventHandler(object sender, UDF_BOXRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SUBREGIONDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWAYBILL_NUMBER;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_NUMBER;
            
            private global::System.Data.DataColumn columnINTL_CARRIER;
            
            private global::System.Data.DataColumn columnACTUAL_SHIPDATE;
            
            private global::System.Data.DataColumn columnCURRENT_DATE;
            
            private global::System.Data.DataColumn columnSUB_REGION;
            
            private global::System.Data.DataColumn columnPREF_GATEWAY;
            
            private global::System.Data.DataColumn columnHAWB_ACT_WEIGHT;
            
            private global::System.Data.DataColumn columnHAWB_PALLET_QTY;
            
            private global::System.Data.DataColumn columnHAWB_BOX_QTY;
            
            private global::System.Data.DataColumn columnSHIP_FROM_ID;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME_2;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME_3;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STREET;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STREET_2;
            
            private global::System.Data.DataColumn columnSHIP_FROM_CITY;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STATE;
            
            private global::System.Data.DataColumn columnSHIP_FROM_ZIP;
            
            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_CODE;
            
            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_NAME;
            
            private global::System.Data.DataColumn columnSHIP_FROM_CONTACT;
            
            private global::System.Data.DataColumn columnSHIP_FROM_TELEPHONE;
            
            private global::System.Data.DataColumn columnSHIP_MODE;
            
            private global::System.Data.DataColumn columnINCOTERM;
            
            private global::System.Data.DataColumn columnCONTAINER_ID;
            
            private global::System.Data.DataColumn columnSEAL_NUMBER;
            
            private global::System.Data.DataColumn columnTRUCK_NUMBER;
            
            private global::System.Data.DataColumn columnSUBREGION_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONDataTable() {
                this.TableName = "SUBREGION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBREGIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SUBREGIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WAYBILL_NUMBERColumn {
                get {
                    return this.columnWAYBILL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_NUMBERColumn {
                get {
                    return this.columnMASTER_WAYBILL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTL_CARRIERColumn {
                get {
                    return this.columnINTL_CARRIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTUAL_SHIPDATEColumn {
                get {
                    return this.columnACTUAL_SHIPDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURRENT_DATEColumn {
                get {
                    return this.columnCURRENT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUB_REGIONColumn {
                get {
                    return this.columnSUB_REGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREF_GATEWAYColumn {
                get {
                    return this.columnPREF_GATEWAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_ACT_WEIGHTColumn {
                get {
                    return this.columnHAWB_ACT_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_PALLET_QTYColumn {
                get {
                    return this.columnHAWB_PALLET_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_BOX_QTYColumn {
                get {
                    return this.columnHAWB_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_IDColumn {
                get {
                    return this.columnSHIP_FROM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAMEColumn {
                get {
                    return this.columnSHIP_FROM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_2Column {
                get {
                    return this.columnSHIP_FROM_NAME_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_3Column {
                get {
                    return this.columnSHIP_FROM_NAME_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREETColumn {
                get {
                    return this.columnSHIP_FROM_STREET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREET_2Column {
                get {
                    return this.columnSHIP_FROM_STREET_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CITYColumn {
                get {
                    return this.columnSHIP_FROM_CITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STATEColumn {
                get {
                    return this.columnSHIP_FROM_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_ZIPColumn {
                get {
                    return this.columnSHIP_FROM_ZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_CODEColumn {
                get {
                    return this.columnSHIP_FROM_COUNTRY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_NAMEColumn {
                get {
                    return this.columnSHIP_FROM_COUNTRY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CONTACTColumn {
                get {
                    return this.columnSHIP_FROM_CONTACT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_TELEPHONEColumn {
                get {
                    return this.columnSHIP_FROM_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_MODEColumn {
                get {
                    return this.columnSHIP_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INCOTERMColumn {
                get {
                    return this.columnINCOTERM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_IDColumn {
                get {
                    return this.columnCONTAINER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEAL_NUMBERColumn {
                get {
                    return this.columnSEAL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRUCK_NUMBERColumn {
                get {
                    return this.columnTRUCK_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBREGION_IdColumn {
                get {
                    return this.columnSUBREGION_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRow this[int index] {
                get {
                    return ((SUBREGIONRow)(this.Rows[index]));
                }
            }
            
            public event SUBREGIONRowChangeEventHandler SUBREGIONRowChanging;
            
            public event SUBREGIONRowChangeEventHandler SUBREGIONRowChanged;
            
            public event SUBREGIONRowChangeEventHandler SUBREGIONRowDeleting;
            
            public event SUBREGIONRowChangeEventHandler SUBREGIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSUBREGIONRow(SUBREGIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRow AddSUBREGIONRow(
                        string WAYBILL_NUMBER, 
                        string MASTER_WAYBILL_NUMBER, 
                        string INTL_CARRIER, 
                        string ACTUAL_SHIPDATE, 
                        string CURRENT_DATE, 
                        string SUB_REGION, 
                        string PREF_GATEWAY, 
                        double HAWB_ACT_WEIGHT, 
                        double HAWB_PALLET_QTY, 
                        double HAWB_BOX_QTY, 
                        string SHIP_FROM_ID, 
                        string SHIP_FROM_NAME, 
                        string SHIP_FROM_NAME_2, 
                        string SHIP_FROM_NAME_3, 
                        string SHIP_FROM_STREET, 
                        string SHIP_FROM_STREET_2, 
                        string SHIP_FROM_CITY, 
                        string SHIP_FROM_STATE, 
                        string SHIP_FROM_ZIP, 
                        string SHIP_FROM_COUNTRY_CODE, 
                        string SHIP_FROM_COUNTRY_NAME, 
                        string SHIP_FROM_CONTACT, 
                        string SHIP_FROM_TELEPHONE, 
                        string SHIP_MODE, 
                        string INCOTERM, 
                        string CONTAINER_ID, 
                        string SEAL_NUMBER, 
                        string TRUCK_NUMBER) {
                SUBREGIONRow rowSUBREGIONRow = ((SUBREGIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WAYBILL_NUMBER,
                        MASTER_WAYBILL_NUMBER,
                        INTL_CARRIER,
                        ACTUAL_SHIPDATE,
                        CURRENT_DATE,
                        SUB_REGION,
                        PREF_GATEWAY,
                        HAWB_ACT_WEIGHT,
                        HAWB_PALLET_QTY,
                        HAWB_BOX_QTY,
                        SHIP_FROM_ID,
                        SHIP_FROM_NAME,
                        SHIP_FROM_NAME_2,
                        SHIP_FROM_NAME_3,
                        SHIP_FROM_STREET,
                        SHIP_FROM_STREET_2,
                        SHIP_FROM_CITY,
                        SHIP_FROM_STATE,
                        SHIP_FROM_ZIP,
                        SHIP_FROM_COUNTRY_CODE,
                        SHIP_FROM_COUNTRY_NAME,
                        SHIP_FROM_CONTACT,
                        SHIP_FROM_TELEPHONE,
                        SHIP_MODE,
                        INCOTERM,
                        CONTAINER_ID,
                        SEAL_NUMBER,
                        TRUCK_NUMBER,
                        null};
                rowSUBREGIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSUBREGIONRow);
                return rowSUBREGIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SUBREGIONDataTable cln = ((SUBREGIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SUBREGIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWAYBILL_NUMBER = base.Columns["WAYBILL_NUMBER"];
                this.columnMASTER_WAYBILL_NUMBER = base.Columns["MASTER_WAYBILL_NUMBER"];
                this.columnINTL_CARRIER = base.Columns["INTL_CARRIER"];
                this.columnACTUAL_SHIPDATE = base.Columns["ACTUAL_SHIPDATE"];
                this.columnCURRENT_DATE = base.Columns["CURRENT_DATE"];
                this.columnSUB_REGION = base.Columns["SUB_REGION"];
                this.columnPREF_GATEWAY = base.Columns["PREF_GATEWAY"];
                this.columnHAWB_ACT_WEIGHT = base.Columns["HAWB_ACT_WEIGHT"];
                this.columnHAWB_PALLET_QTY = base.Columns["HAWB_PALLET_QTY"];
                this.columnHAWB_BOX_QTY = base.Columns["HAWB_BOX_QTY"];
                this.columnSHIP_FROM_ID = base.Columns["SHIP_FROM_ID"];
                this.columnSHIP_FROM_NAME = base.Columns["SHIP_FROM_NAME"];
                this.columnSHIP_FROM_NAME_2 = base.Columns["SHIP_FROM_NAME_2"];
                this.columnSHIP_FROM_NAME_3 = base.Columns["SHIP_FROM_NAME_3"];
                this.columnSHIP_FROM_STREET = base.Columns["SHIP_FROM_STREET"];
                this.columnSHIP_FROM_STREET_2 = base.Columns["SHIP_FROM_STREET_2"];
                this.columnSHIP_FROM_CITY = base.Columns["SHIP_FROM_CITY"];
                this.columnSHIP_FROM_STATE = base.Columns["SHIP_FROM_STATE"];
                this.columnSHIP_FROM_ZIP = base.Columns["SHIP_FROM_ZIP"];
                this.columnSHIP_FROM_COUNTRY_CODE = base.Columns["SHIP_FROM_COUNTRY_CODE"];
                this.columnSHIP_FROM_COUNTRY_NAME = base.Columns["SHIP_FROM_COUNTRY_NAME"];
                this.columnSHIP_FROM_CONTACT = base.Columns["SHIP_FROM_CONTACT"];
                this.columnSHIP_FROM_TELEPHONE = base.Columns["SHIP_FROM_TELEPHONE"];
                this.columnSHIP_MODE = base.Columns["SHIP_MODE"];
                this.columnINCOTERM = base.Columns["INCOTERM"];
                this.columnCONTAINER_ID = base.Columns["CONTAINER_ID"];
                this.columnSEAL_NUMBER = base.Columns["SEAL_NUMBER"];
                this.columnTRUCK_NUMBER = base.Columns["TRUCK_NUMBER"];
                this.columnSUBREGION_Id = base.Columns["SUBREGION_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWAYBILL_NUMBER = new global::System.Data.DataColumn("WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAYBILL_NUMBER);
                this.columnMASTER_WAYBILL_NUMBER = new global::System.Data.DataColumn("MASTER_WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_NUMBER);
                this.columnINTL_CARRIER = new global::System.Data.DataColumn("INTL_CARRIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTL_CARRIER);
                this.columnACTUAL_SHIPDATE = new global::System.Data.DataColumn("ACTUAL_SHIPDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTUAL_SHIPDATE);
                this.columnCURRENT_DATE = new global::System.Data.DataColumn("CURRENT_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENT_DATE);
                this.columnSUB_REGION = new global::System.Data.DataColumn("SUB_REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_REGION);
                this.columnPREF_GATEWAY = new global::System.Data.DataColumn("PREF_GATEWAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREF_GATEWAY);
                this.columnHAWB_ACT_WEIGHT = new global::System.Data.DataColumn("HAWB_ACT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_ACT_WEIGHT);
                this.columnHAWB_PALLET_QTY = new global::System.Data.DataColumn("HAWB_PALLET_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_PALLET_QTY);
                this.columnHAWB_BOX_QTY = new global::System.Data.DataColumn("HAWB_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_BOX_QTY);
                this.columnSHIP_FROM_ID = new global::System.Data.DataColumn("SHIP_FROM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ID);
                this.columnSHIP_FROM_NAME = new global::System.Data.DataColumn("SHIP_FROM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME);
                this.columnSHIP_FROM_NAME_2 = new global::System.Data.DataColumn("SHIP_FROM_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_2);
                this.columnSHIP_FROM_NAME_3 = new global::System.Data.DataColumn("SHIP_FROM_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_3);
                this.columnSHIP_FROM_STREET = new global::System.Data.DataColumn("SHIP_FROM_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET);
                this.columnSHIP_FROM_STREET_2 = new global::System.Data.DataColumn("SHIP_FROM_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET_2);
                this.columnSHIP_FROM_CITY = new global::System.Data.DataColumn("SHIP_FROM_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CITY);
                this.columnSHIP_FROM_STATE = new global::System.Data.DataColumn("SHIP_FROM_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STATE);
                this.columnSHIP_FROM_ZIP = new global::System.Data.DataColumn("SHIP_FROM_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ZIP);
                this.columnSHIP_FROM_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_CODE);
                this.columnSHIP_FROM_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_NAME);
                this.columnSHIP_FROM_CONTACT = new global::System.Data.DataColumn("SHIP_FROM_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CONTACT);
                this.columnSHIP_FROM_TELEPHONE = new global::System.Data.DataColumn("SHIP_FROM_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_TELEPHONE);
                this.columnSHIP_MODE = new global::System.Data.DataColumn("SHIP_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_MODE);
                this.columnINCOTERM = new global::System.Data.DataColumn("INCOTERM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCOTERM);
                this.columnCONTAINER_ID = new global::System.Data.DataColumn("CONTAINER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_ID);
                this.columnSEAL_NUMBER = new global::System.Data.DataColumn("SEAL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEAL_NUMBER);
                this.columnTRUCK_NUMBER = new global::System.Data.DataColumn("TRUCK_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRUCK_NUMBER);
                this.columnSUBREGION_Id = new global::System.Data.DataColumn("SUBREGION_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnSUBREGION_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSUBREGION_Id}, true));
                this.columnWAYBILL_NUMBER.AllowDBNull = false;
                this.columnMASTER_WAYBILL_NUMBER.AllowDBNull = false;
                this.columnINTL_CARRIER.AllowDBNull = false;
                this.columnACTUAL_SHIPDATE.AllowDBNull = false;
                this.columnCURRENT_DATE.AllowDBNull = false;
                this.columnSUB_REGION.AllowDBNull = false;
                this.columnPREF_GATEWAY.AllowDBNull = false;
                this.columnHAWB_ACT_WEIGHT.AllowDBNull = false;
                this.columnHAWB_PALLET_QTY.AllowDBNull = false;
                this.columnHAWB_BOX_QTY.AllowDBNull = false;
                this.columnSHIP_FROM_ID.AllowDBNull = false;
                this.columnSHIP_FROM_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_2.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_3.AllowDBNull = false;
                this.columnSHIP_FROM_STREET.AllowDBNull = false;
                this.columnSHIP_FROM_STREET_2.AllowDBNull = false;
                this.columnSHIP_FROM_CITY.AllowDBNull = false;
                this.columnSHIP_FROM_STATE.AllowDBNull = false;
                this.columnSHIP_FROM_ZIP.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_CONTACT.AllowDBNull = false;
                this.columnSHIP_FROM_TELEPHONE.AllowDBNull = false;
                this.columnSHIP_MODE.AllowDBNull = false;
                this.columnINCOTERM.AllowDBNull = false;
                this.columnCONTAINER_ID.AllowDBNull = false;
                this.columnSEAL_NUMBER.AllowDBNull = false;
                this.columnTRUCK_NUMBER.AllowDBNull = false;
                this.columnSUBREGION_Id.AutoIncrement = true;
                this.columnSUBREGION_Id.AllowDBNull = false;
                this.columnSUBREGION_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRow NewSUBREGIONRow() {
                return ((SUBREGIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SUBREGIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SUBREGIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SUBREGIONRowChanged != null)) {
                    this.SUBREGIONRowChanged(this, new SUBREGIONRowChangeEvent(((SUBREGIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SUBREGIONRowChanging != null)) {
                    this.SUBREGIONRowChanging(this, new SUBREGIONRowChangeEvent(((SUBREGIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SUBREGIONRowDeleted != null)) {
                    this.SUBREGIONRowDeleted(this, new SUBREGIONRowChangeEvent(((SUBREGIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SUBREGIONRowDeleting != null)) {
                    this.SUBREGIONRowDeleting(this, new SUBREGIONRowChangeEvent(((SUBREGIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSUBREGIONRow(SUBREGIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SUBREGIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DESTINATION_CODEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDEST_CODE;
            
            private global::System.Data.DataColumn columnDEST_CODE_BOX_QTY;
            
            private global::System.Data.DataColumn columnDEST_CODE_EXTD_BOX_WGT;
            
            private global::System.Data.DataColumn columnDESTINATION_CODE_Id;
            
            private global::System.Data.DataColumn columnSUBREGION_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODEDataTable() {
                this.TableName = "DESTINATION_CODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DESTINATION_CODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DESTINATION_CODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEST_CODEColumn {
                get {
                    return this.columnDEST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEST_CODE_BOX_QTYColumn {
                get {
                    return this.columnDEST_CODE_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEST_CODE_EXTD_BOX_WGTColumn {
                get {
                    return this.columnDEST_CODE_EXTD_BOX_WGT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESTINATION_CODE_IdColumn {
                get {
                    return this.columnDESTINATION_CODE_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUBREGION_IdColumn {
                get {
                    return this.columnSUBREGION_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow this[int index] {
                get {
                    return ((DESTINATION_CODERow)(this.Rows[index]));
                }
            }
            
            public event DESTINATION_CODERowChangeEventHandler DESTINATION_CODERowChanging;
            
            public event DESTINATION_CODERowChangeEventHandler DESTINATION_CODERowChanged;
            
            public event DESTINATION_CODERowChangeEventHandler DESTINATION_CODERowDeleting;
            
            public event DESTINATION_CODERowChangeEventHandler DESTINATION_CODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDESTINATION_CODERow(DESTINATION_CODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow AddDESTINATION_CODERow(string DEST_CODE, double DEST_CODE_BOX_QTY, double DEST_CODE_EXTD_BOX_WGT, SUBREGIONRow parentSUBREGIONRowBySUBREGION_DESTINATION_CODE) {
                DESTINATION_CODERow rowDESTINATION_CODERow = ((DESTINATION_CODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEST_CODE,
                        DEST_CODE_BOX_QTY,
                        DEST_CODE_EXTD_BOX_WGT,
                        null,
                        null};
                if ((parentSUBREGIONRowBySUBREGION_DESTINATION_CODE != null)) {
                    columnValuesArray[4] = parentSUBREGIONRowBySUBREGION_DESTINATION_CODE[28];
                }
                rowDESTINATION_CODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDESTINATION_CODERow);
                return rowDESTINATION_CODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DESTINATION_CODEDataTable cln = ((DESTINATION_CODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DESTINATION_CODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDEST_CODE = base.Columns["DEST_CODE"];
                this.columnDEST_CODE_BOX_QTY = base.Columns["DEST_CODE_BOX_QTY"];
                this.columnDEST_CODE_EXTD_BOX_WGT = base.Columns["DEST_CODE_EXTD_BOX_WGT"];
                this.columnDESTINATION_CODE_Id = base.Columns["DESTINATION_CODE_Id"];
                this.columnSUBREGION_Id = base.Columns["SUBREGION_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDEST_CODE = new global::System.Data.DataColumn("DEST_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST_CODE);
                this.columnDEST_CODE_BOX_QTY = new global::System.Data.DataColumn("DEST_CODE_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST_CODE_BOX_QTY);
                this.columnDEST_CODE_EXTD_BOX_WGT = new global::System.Data.DataColumn("DEST_CODE_EXTD_BOX_WGT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST_CODE_EXTD_BOX_WGT);
                this.columnDESTINATION_CODE_Id = new global::System.Data.DataColumn("DESTINATION_CODE_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnDESTINATION_CODE_Id);
                this.columnSUBREGION_Id = new global::System.Data.DataColumn("SUBREGION_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnSUBREGION_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDESTINATION_CODE_Id}, true));
                this.columnDEST_CODE.AllowDBNull = false;
                this.columnDEST_CODE_BOX_QTY.AllowDBNull = false;
                this.columnDEST_CODE_EXTD_BOX_WGT.AllowDBNull = false;
                this.columnDESTINATION_CODE_Id.AutoIncrement = true;
                this.columnDESTINATION_CODE_Id.AllowDBNull = false;
                this.columnDESTINATION_CODE_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow NewDESTINATION_CODERow() {
                return ((DESTINATION_CODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DESTINATION_CODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DESTINATION_CODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DESTINATION_CODERowChanged != null)) {
                    this.DESTINATION_CODERowChanged(this, new DESTINATION_CODERowChangeEvent(((DESTINATION_CODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DESTINATION_CODERowChanging != null)) {
                    this.DESTINATION_CODERowChanging(this, new DESTINATION_CODERowChangeEvent(((DESTINATION_CODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DESTINATION_CODERowDeleted != null)) {
                    this.DESTINATION_CODERowDeleted(this, new DESTINATION_CODERowChangeEvent(((DESTINATION_CODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DESTINATION_CODERowDeleting != null)) {
                    this.DESTINATION_CODERowDeleting(this, new DESTINATION_CODERowChangeEvent(((DESTINATION_CODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDESTINATION_CODERow(DESTINATION_CODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DESTINATION_CODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOX_ID;
            
            private global::System.Data.DataColumn columnBOX_WEIGHT;
            
            private global::System.Data.DataColumn columnBOX_WEIGHT_UOM;
            
            private global::System.Data.DataColumn columnPACK_ID;
            
            private global::System.Data.DataColumn columnHP_SO;
            
            private global::System.Data.DataColumn columnDUTY_CODE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            private global::System.Data.DataColumn columnDESTINATION_CODE_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXDataTable() {
                this.TableName = "BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_IDColumn {
                get {
                    return this.columnBOX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHTColumn {
                get {
                    return this.columnBOX_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHT_UOMColumn {
                get {
                    return this.columnBOX_WEIGHT_UOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_IDColumn {
                get {
                    return this.columnPACK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_SOColumn {
                get {
                    return this.columnHP_SO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUTY_CODEColumn {
                get {
                    return this.columnDUTY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DESTINATION_CODE_IdColumn {
                get {
                    return this.columnDESTINATION_CODE_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow this[int index] {
                get {
                    return ((BOXRow)(this.Rows[index]));
                }
            }
            
            public event BOXRowChangeEventHandler BOXRowChanging;
            
            public event BOXRowChangeEventHandler BOXRowChanged;
            
            public event BOXRowChangeEventHandler BOXRowDeleting;
            
            public event BOXRowChangeEventHandler BOXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOXRow(BOXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow AddBOXRow(string BOX_ID, double BOX_WEIGHT, string BOX_WEIGHT_UOM, string PACK_ID, string HP_SO, string DUTY_CODE, DESTINATION_CODERow parentDESTINATION_CODERowByDESTINATION_CODE_BOX) {
                BOXRow rowBOXRow = ((BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOX_ID,
                        BOX_WEIGHT,
                        BOX_WEIGHT_UOM,
                        PACK_ID,
                        HP_SO,
                        DUTY_CODE,
                        null,
                        null};
                if ((parentDESTINATION_CODERowByDESTINATION_CODE_BOX != null)) {
                    columnValuesArray[7] = parentDESTINATION_CODERowByDESTINATION_CODE_BOX[3];
                }
                rowBOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOXRow);
                return rowBOXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BOXDataTable cln = ((BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BOXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOX_ID = base.Columns["BOX_ID"];
                this.columnBOX_WEIGHT = base.Columns["BOX_WEIGHT"];
                this.columnBOX_WEIGHT_UOM = base.Columns["BOX_WEIGHT_UOM"];
                this.columnPACK_ID = base.Columns["PACK_ID"];
                this.columnHP_SO = base.Columns["HP_SO"];
                this.columnDUTY_CODE = base.Columns["DUTY_CODE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
                this.columnDESTINATION_CODE_Id = base.Columns["DESTINATION_CODE_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOX_ID = new global::System.Data.DataColumn("BOX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_ID);
                this.columnBOX_WEIGHT = new global::System.Data.DataColumn("BOX_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT);
                this.columnBOX_WEIGHT_UOM = new global::System.Data.DataColumn("BOX_WEIGHT_UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT_UOM);
                this.columnPACK_ID = new global::System.Data.DataColumn("PACK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID);
                this.columnHP_SO = new global::System.Data.DataColumn("HP_SO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_SO);
                this.columnDUTY_CODE = new global::System.Data.DataColumn("DUTY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUTY_CODE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnDESTINATION_CODE_Id = new global::System.Data.DataColumn("DESTINATION_CODE_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnDESTINATION_CODE_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOX_Id_0}, true));
                this.columnBOX_ID.AllowDBNull = false;
                this.columnBOX_WEIGHT.AllowDBNull = false;
                this.columnBOX_WEIGHT_UOM.AllowDBNull = false;
                this.columnPACK_ID.AllowDBNull = false;
                this.columnHP_SO.AllowDBNull = false;
                this.columnDUTY_CODE.AllowDBNull = false;
                this.columnBOX_Id_0.AutoIncrement = true;
                this.columnBOX_Id_0.AllowDBNull = false;
                this.columnBOX_Id_0.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow NewBOXRow() {
                return ((BOXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BOXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BOXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BOXRowChanged != null)) {
                    this.BOXRowChanged(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BOXRowChanging != null)) {
                    this.BOXRowChanging(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BOXRowDeleted != null)) {
                    this.BOXRowDeleted(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BOXRowDeleting != null)) {
                    this.BOXRowDeleting(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOXRow(BOXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_HEADERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERDataTable() {
                this.TableName = "UDF_HEADER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_HEADERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow this[int index] {
                get {
                    return ((UDF_HEADERRow)(this.Rows[index]));
                }
            }
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanging;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanged;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleting;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_HEADERRow(UDF_HEADERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow AddUDF_HEADERRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_HEADER) {
                UDF_HEADERRow rowUDF_HEADERRow = ((UDF_HEADERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_HEADER != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_HEADER[6];
                }
                rowUDF_HEADERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_HEADERRow);
                return rowUDF_HEADERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_HEADERDataTable cln = ((UDF_HEADERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_HEADERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow NewUDF_HEADERRow() {
                return ((UDF_HEADERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_HEADERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_HEADERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_HEADERRowChanged != null)) {
                    this.UDF_HEADERRowChanged(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_HEADERRowChanging != null)) {
                    this.UDF_HEADERRowChanging(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_HEADERRowDeleted != null)) {
                    this.UDF_HEADERRowDeleted(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_HEADERRowDeleting != null)) {
                    this.UDF_HEADERRowDeleting(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_HEADERRow(UDF_HEADERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_HEADERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILDataTable() {
                this.TableName = "UDF_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow this[int index] {
                get {
                    return ((UDF_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanging;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanged;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleting;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_DETAILRow(UDF_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow AddUDF_DETAILRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_DETAIL) {
                UDF_DETAILRow rowUDF_DETAILRow = ((UDF_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_DETAIL != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_DETAIL[6];
                }
                rowUDF_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_DETAILRow);
                return rowUDF_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_DETAILDataTable cln = ((UDF_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow NewUDF_DETAILRow() {
                return ((UDF_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_DETAILRowChanged != null)) {
                    this.UDF_DETAILRowChanged(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_DETAILRowChanging != null)) {
                    this.UDF_DETAILRowChanging(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_DETAILRowDeleted != null)) {
                    this.UDF_DETAILRowDeleted(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_DETAILRowDeleting != null)) {
                    this.UDF_DETAILRowDeleting(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_DETAILRow(UDF_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXDataTable() {
                this.TableName = "UDF_BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow this[int index] {
                get {
                    return ((UDF_BOXRow)(this.Rows[index]));
                }
            }
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanging;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanged;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleting;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_BOXRow(UDF_BOXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow AddUDF_BOXRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_BOX) {
                UDF_BOXRow rowUDF_BOXRow = ((UDF_BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_BOX != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_BOX[6];
                }
                rowUDF_BOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_BOXRow);
                return rowUDF_BOXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_BOXDataTable cln = ((UDF_BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_BOXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow NewUDF_BOXRow() {
                return ((UDF_BOXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_BOXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_BOXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_BOXRowChanged != null)) {
                    this.UDF_BOXRowChanged(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_BOXRowChanging != null)) {
                    this.UDF_BOXRowChanging(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_BOXRowDeleted != null)) {
                    this.UDF_BOXRowDeleted(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_BOXRowDeleting != null)) {
                    this.UDF_BOXRowDeleting(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_BOXRow(UDF_BOXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WAYBILL_ADDITION ds = new WAYBILL_ADDITION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SUBREGIONRow : global::System.Data.DataRow {
            
            private SUBREGIONDataTable tableSUBREGION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SUBREGIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSUBREGION = ((SUBREGIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAYBILL_NUMBER {
                get {
                    return ((string)(this[this.tableSUBREGION.WAYBILL_NUMBERColumn]));
                }
                set {
                    this[this.tableSUBREGION.WAYBILL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MASTER_WAYBILL_NUMBER {
                get {
                    return ((string)(this[this.tableSUBREGION.MASTER_WAYBILL_NUMBERColumn]));
                }
                set {
                    this[this.tableSUBREGION.MASTER_WAYBILL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTL_CARRIER {
                get {
                    return ((string)(this[this.tableSUBREGION.INTL_CARRIERColumn]));
                }
                set {
                    this[this.tableSUBREGION.INTL_CARRIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTUAL_SHIPDATE {
                get {
                    return ((string)(this[this.tableSUBREGION.ACTUAL_SHIPDATEColumn]));
                }
                set {
                    this[this.tableSUBREGION.ACTUAL_SHIPDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENT_DATE {
                get {
                    return ((string)(this[this.tableSUBREGION.CURRENT_DATEColumn]));
                }
                set {
                    this[this.tableSUBREGION.CURRENT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_REGION {
                get {
                    return ((string)(this[this.tableSUBREGION.SUB_REGIONColumn]));
                }
                set {
                    this[this.tableSUBREGION.SUB_REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREF_GATEWAY {
                get {
                    return ((string)(this[this.tableSUBREGION.PREF_GATEWAYColumn]));
                }
                set {
                    this[this.tableSUBREGION.PREF_GATEWAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_ACT_WEIGHT {
                get {
                    return ((double)(this[this.tableSUBREGION.HAWB_ACT_WEIGHTColumn]));
                }
                set {
                    this[this.tableSUBREGION.HAWB_ACT_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_PALLET_QTY {
                get {
                    return ((double)(this[this.tableSUBREGION.HAWB_PALLET_QTYColumn]));
                }
                set {
                    this[this.tableSUBREGION.HAWB_PALLET_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_BOX_QTY {
                get {
                    return ((double)(this[this.tableSUBREGION.HAWB_BOX_QTYColumn]));
                }
                set {
                    this[this.tableSUBREGION.HAWB_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ID {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_IDColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_NAMEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_2 {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_NAME_2Column]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_NAME_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_3 {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_NAME_3Column]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_NAME_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_STREETColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_STREETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET_2 {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_STREET_2Column]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_STREET_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CITY {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_CITYColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STATE {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_STATEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ZIP {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_ZIPColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_CODE {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_COUNTRY_CODEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_COUNTRY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_NAME {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_COUNTRY_NAMEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_COUNTRY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CONTACT {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_CONTACTColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_CONTACTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_TELEPHONE {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_FROM_TELEPHONEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_FROM_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_MODE {
                get {
                    return ((string)(this[this.tableSUBREGION.SHIP_MODEColumn]));
                }
                set {
                    this[this.tableSUBREGION.SHIP_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INCOTERM {
                get {
                    return ((string)(this[this.tableSUBREGION.INCOTERMColumn]));
                }
                set {
                    this[this.tableSUBREGION.INCOTERMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTAINER_ID {
                get {
                    return ((string)(this[this.tableSUBREGION.CONTAINER_IDColumn]));
                }
                set {
                    this[this.tableSUBREGION.CONTAINER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEAL_NUMBER {
                get {
                    return ((string)(this[this.tableSUBREGION.SEAL_NUMBERColumn]));
                }
                set {
                    this[this.tableSUBREGION.SEAL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRUCK_NUMBER {
                get {
                    return ((string)(this[this.tableSUBREGION.TRUCK_NUMBERColumn]));
                }
                set {
                    this[this.tableSUBREGION.TRUCK_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SUBREGION_Id {
                get {
                    return ((int)(this[this.tableSUBREGION.SUBREGION_IdColumn]));
                }
                set {
                    this[this.tableSUBREGION.SUBREGION_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow[] GetDESTINATION_CODERows() {
                if ((this.Table.ChildRelations["SUBREGION_DESTINATION_CODE"] == null)) {
                    return new DESTINATION_CODERow[0];
                }
                else {
                    return ((DESTINATION_CODERow[])(base.GetChildRows(this.Table.ChildRelations["SUBREGION_DESTINATION_CODE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DESTINATION_CODERow : global::System.Data.DataRow {
            
            private DESTINATION_CODEDataTable tableDESTINATION_CODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DESTINATION_CODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDESTINATION_CODE = ((DESTINATION_CODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEST_CODE {
                get {
                    return ((string)(this[this.tableDESTINATION_CODE.DEST_CODEColumn]));
                }
                set {
                    this[this.tableDESTINATION_CODE.DEST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DEST_CODE_BOX_QTY {
                get {
                    return ((double)(this[this.tableDESTINATION_CODE.DEST_CODE_BOX_QTYColumn]));
                }
                set {
                    this[this.tableDESTINATION_CODE.DEST_CODE_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DEST_CODE_EXTD_BOX_WGT {
                get {
                    return ((double)(this[this.tableDESTINATION_CODE.DEST_CODE_EXTD_BOX_WGTColumn]));
                }
                set {
                    this[this.tableDESTINATION_CODE.DEST_CODE_EXTD_BOX_WGTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESTINATION_CODE_Id {
                get {
                    return ((int)(this[this.tableDESTINATION_CODE.DESTINATION_CODE_IdColumn]));
                }
                set {
                    this[this.tableDESTINATION_CODE.DESTINATION_CODE_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SUBREGION_Id {
                get {
                    try {
                        return ((int)(this[this.tableDESTINATION_CODE.SUBREGION_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DESTINATION_CODE\' 中資料行 \'SUBREGION_Id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDESTINATION_CODE.SUBREGION_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRow SUBREGIONRow {
                get {
                    return ((SUBREGIONRow)(this.GetParentRow(this.Table.ParentRelations["SUBREGION_DESTINATION_CODE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SUBREGION_DESTINATION_CODE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUBREGION_IdNull() {
                return this.IsNull(this.tableDESTINATION_CODE.SUBREGION_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUBREGION_IdNull() {
                this[this.tableDESTINATION_CODE.SUBREGION_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow[] GetBOXRows() {
                if ((this.Table.ChildRelations["DESTINATION_CODE_BOX"] == null)) {
                    return new BOXRow[0];
                }
                else {
                    return ((BOXRow[])(base.GetChildRows(this.Table.ChildRelations["DESTINATION_CODE_BOX"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOXRow : global::System.Data.DataRow {
            
            private BOXDataTable tableBOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOX = ((BOXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_ID {
                get {
                    return ((string)(this[this.tableBOX.BOX_IDColumn]));
                }
                set {
                    this[this.tableBOX.BOX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BOX_WEIGHT {
                get {
                    return ((double)(this[this.tableBOX.BOX_WEIGHTColumn]));
                }
                set {
                    this[this.tableBOX.BOX_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_WEIGHT_UOM {
                get {
                    return ((string)(this[this.tableBOX.BOX_WEIGHT_UOMColumn]));
                }
                set {
                    this[this.tableBOX.BOX_WEIGHT_UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_ID {
                get {
                    return ((string)(this[this.tableBOX.PACK_IDColumn]));
                }
                set {
                    this[this.tableBOX.PACK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_SO {
                get {
                    return ((string)(this[this.tableBOX.HP_SOColumn]));
                }
                set {
                    this[this.tableBOX.HP_SOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUTY_CODE {
                get {
                    return ((string)(this[this.tableBOX.DUTY_CODEColumn]));
                }
                set {
                    this[this.tableBOX.DUTY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    return ((int)(this[this.tableBOX.BOX_Id_0Column]));
                }
                set {
                    this[this.tableBOX.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DESTINATION_CODE_Id {
                get {
                    try {
                        return ((int)(this[this.tableBOX.DESTINATION_CODE_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BOX\' 中資料行 \'DESTINATION_CODE_Id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBOX.DESTINATION_CODE_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow DESTINATION_CODERow {
                get {
                    return ((DESTINATION_CODERow)(this.GetParentRow(this.Table.ParentRelations["DESTINATION_CODE_BOX"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DESTINATION_CODE_BOX"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDESTINATION_CODE_IdNull() {
                return this.IsNull(this.tableBOX.DESTINATION_CODE_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDESTINATION_CODE_IdNull() {
                this[this.tableBOX.DESTINATION_CODE_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow[] GetUDF_HEADERRows() {
                if ((this.Table.ChildRelations["BOX_UDF_HEADER"] == null)) {
                    return new UDF_HEADERRow[0];
                }
                else {
                    return ((UDF_HEADERRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_HEADER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow[] GetUDF_DETAILRows() {
                if ((this.Table.ChildRelations["BOX_UDF_DETAIL"] == null)) {
                    return new UDF_DETAILRow[0];
                }
                else {
                    return ((UDF_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_DETAIL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow[] GetUDF_BOXRows() {
                if ((this.Table.ChildRelations["BOX_UDF_BOX"] == null)) {
                    return new UDF_BOXRow[0];
                }
                else {
                    return ((UDF_BOXRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_BOX"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_HEADERRow : global::System.Data.DataRow {
            
            private UDF_HEADERDataTable tableUDF_HEADER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_HEADER = ((UDF_HEADERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_HEADER.KEYColumn]));
                }
                set {
                    this[this.tableUDF_HEADER.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_HEADER.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_HEADER.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_HEADER.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_HEADER\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_HEADER.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_HEADER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_HEADER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_HEADER.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_HEADER.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_DETAILRow : global::System.Data.DataRow {
            
            private UDF_DETAILDataTable tableUDF_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_DETAIL.KEYColumn]));
                }
                set {
                    this[this.tableUDF_DETAIL.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_DETAIL.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_DETAIL.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_DETAIL.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_DETAIL\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_DETAIL.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_DETAIL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_DETAIL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_DETAIL.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_DETAIL.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_BOXRow : global::System.Data.DataRow {
            
            private UDF_BOXDataTable tableUDF_BOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_BOX = ((UDF_BOXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_BOX.KEYColumn]));
                }
                set {
                    this[this.tableUDF_BOX.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_BOX.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_BOX.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_BOX.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_BOX\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_BOX.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_BOX"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_BOX"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_BOX.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_BOX.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SUBREGIONRowChangeEvent : global::System.EventArgs {
            
            private SUBREGIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRowChangeEvent(SUBREGIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SUBREGIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DESTINATION_CODERowChangeEvent : global::System.EventArgs {
            
            private DESTINATION_CODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERowChangeEvent(DESTINATION_CODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DESTINATION_CODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOXRowChangeEvent : global::System.EventArgs {
            
            private BOXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRowChangeEvent(BOXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_HEADERRowChangeEvent : global::System.EventArgs {
            
            private UDF_HEADERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRowChangeEvent(UDF_HEADERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_DETAILRowChangeEvent : global::System.EventArgs {
            
            private UDF_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRowChangeEvent(UDF_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_BOXRowChangeEvent : global::System.EventArgs {
            
            private UDF_BOXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRowChangeEvent(UDF_BOXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
