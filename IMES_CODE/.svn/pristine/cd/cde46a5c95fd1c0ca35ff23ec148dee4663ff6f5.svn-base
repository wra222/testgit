<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="eng_lblDataEntry" xml:space="preserve">
    <value>Data Entry:</value>
  </data>
  <data name="eng_lblPdLine" xml:space="preserve">
    <value>PdLine:</value>
  </data>
  <data name="eng_msgNoSelectPdLine" xml:space="preserve">
    <value>Please select PdLine!</value>
  </data>
  <data name="cn_lblDataEntry" xml:space="preserve">
    <value>Data Entry:</value>
  </data>
  <data name="cn_lblPdLine" xml:space="preserve">
    <value>线别:</value>
  </data>
  <data name="cn_msgNoSelectPdLine" xml:space="preserve">
    <value>请选择PdLine!</value>
  </data>
  <data name="cn_lblModel" xml:space="preserve">
    <value>Model:</value>
  </data>
  <data name="cn_lblTableTitle" xml:space="preserve">
    <value>不良列表：</value>
  </data>
  <data name="eng_lblModel" xml:space="preserve">
    <value>Model:</value>
  </data>
  <data name="eng_lblTableTitle" xml:space="preserve">
    <value>Defect List:</value>
  </data>
  <data name="cn_lblFamily" xml:space="preserve">
    <value>Family:</value>
  </data>
  <data name="cn_lblMBSno" xml:space="preserve">
    <value>MB序号:</value>
  </data>
  <data name="cn_titleCause" xml:space="preserve">
    <value>不良原因</value>
  </data>
  <data name="cn_titleCDate" xml:space="preserve">
    <value>创建时间</value>
  </data>
  <data name="cn_titleDefect" xml:space="preserve">
    <value>不良</value>
  </data>
  <data name="cn_titleUDate" xml:space="preserve">
    <value>修改时间</value>
  </data>
  <data name="eng_lblFamily" xml:space="preserve">
    <value>Family:</value>
  </data>
  <data name="eng_lblMBSno" xml:space="preserve">
    <value>MBSno:</value>
  </data>
  <data name="eng_titleCause" xml:space="preserve">
    <value>Cause</value>
  </data>
  <data name="eng_titleCDate" xml:space="preserve">
    <value>Create Date</value>
  </data>
  <data name="eng_titleDefect" xml:space="preserve">
    <value>Defect</value>
  </data>
  <data name="eng_titleUDate" xml:space="preserve">
    <value>Update Date</value>
  </data>
  <data name="cn_msgBadMBSno" xml:space="preserve">
    <value>请输入正确的MB序号！</value>
  </data>
  <data name="eng_msgBadMBSno" xml:space="preserve">
    <value>Please input a correct MBSno!</value>
  </data>
  <data name="cn_btnAdd" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="cn_btnEdit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="cn_btnFinish" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="cn_lblRepStn" xml:space="preserve">
    <value>Repair Station:</value>
  </data>
  <data name="cn_lblTestStn" xml:space="preserve">
    <value>Test Station:</value>
  </data>
  <data name="cn_msgNoSelectData" xml:space="preserve">
    <value>请选择要编辑的记录！</value>
  </data>
  <data name="cn_msgNoSelectRepairStation" xml:space="preserve">
    <value>请选择Repair Station！</value>
  </data>
  <data name="eng_btnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="eng_btnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="eng_btnFinish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="eng_lblRepStn" xml:space="preserve">
    <value>Repair Station:</value>
  </data>
  <data name="eng_lblTestStn" xml:space="preserve">
    <value>Test Station:</value>
  </data>
  <data name="eng_msgNoSelectData" xml:space="preserve">
    <value>Please select a record to edit!</value>
  </data>
  <data name="eng_msgNoSelectRepairStation" xml:space="preserve">
    <value>Please select Repair Station!</value>
  </data>
  <data name="cn_msgNoMBInput" xml:space="preserve">
    <value>请先获取MB不良列表！</value>
  </data>
  <data name="eng_msgNoMBInput" xml:space="preserve">
    <value>Please get defect list for MBSno first!</value>
  </data>
  <data name="cn_msgCannotSave" xml:space="preserve">
    <value>必须维修完毕才能保存！！</value>
  </data>
  <data name="eng_msgCannotSave" xml:space="preserve">
    <value>All defects must be repaired before save!</value>
  </data>
  <data name="cn_msgNotFinish" xml:space="preserve">
    <value>已有MBSno正在处理，请保存Repair或刷入“7777”清空后再刷入新的MBSno！</value>
  </data>
  <data name="eng_msgNotFinish" xml:space="preserve">
    <value>Since an MBSno is being processed, a new MBSno input is not allowed until the repair is finished or input "7777" to clear it.</value>
  </data>
  <data name="cn_msgSaveSuccess" xml:space="preserve">
    <value>保存成功！</value>
  </data>
  <data name="eng_msgSaveSuccess" xml:space="preserve">
    <value>Success!</value>
  </data>
</root>