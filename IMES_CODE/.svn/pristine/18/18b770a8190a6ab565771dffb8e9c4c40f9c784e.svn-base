<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cn_colCollection" xml:space="preserve">
    <value>Collection Data</value>
  </data>
  <data name="cn_colDefectCode" xml:space="preserve">
    <value>不良Code</value>
  </data>
  <data name="cn_colDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="cn_colPartNo" xml:space="preserve">
    <value>PartNo/Item Name</value>
  </data>
  <data name="cn_colPartType" xml:space="preserve">
    <value>Part Type</value>
  </data>
  <data name="cn_colPQty" xml:space="preserve">
    <value>PQty</value>
  </data>
  <data name="cn_colQty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="cn_lblCustSN" xml:space="preserve">
    <value>Cust SN:</value>
  </data>
  <data name="cn_lblModel" xml:space="preserve">
    <value>Model:</value>
  </data>
  <data name="cn_lblNGQty" xml:space="preserve">
    <value>NG Qty:</value>
  </data>
  <data name="cn_lblOKQty" xml:space="preserve">
    <value>OK Qty:</value>
  </data>
  <data name="cn_lblPAQC" xml:space="preserve">
    <value>PAQC</value>
  </data>
  <data name="cn_lblPDLine" xml:space="preserve">
    <value>线别:</value>
  </data>
  <data name="cn_lblProductID" xml:space="preserve">
    <value>ProdId:</value>
  </data>
  <data name="cn_lblCollectionData" xml:space="preserve">
    <value>Collection Data</value>
  </data>
  <data name="cn_lblStation" xml:space="preserve">
    <value>Station:</value>
  </data>
  <data name="cn_msgDuplicateData" xml:space="preserve">
    <value>该Defect已经存在!!</value>
  </data>
  <data name="cn_msgInputValidDefect" xml:space="preserve">
    <value>请输入合法的Defect!!</value>
  </data>
  <data name="eng_colCollection" xml:space="preserve">
    <value>Collection Data</value>
  </data>
  <data name="eng_colDefectCode" xml:space="preserve">
    <value>Defect Code</value>
  </data>
  <data name="eng_colDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="eng_colPartNo" xml:space="preserve">
    <value>PartNo/Item Name</value>
  </data>
  <data name="eng_colPartType" xml:space="preserve">
    <value>Part Type</value>
  </data>
  <data name="eng_colPQty" xml:space="preserve">
    <value>PQty</value>
  </data>
  <data name="eng_colQty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="eng_lblCustSN" xml:space="preserve">
    <value>Cust SN:</value>
  </data>
  <data name="eng_lblModel" xml:space="preserve">
    <value>Model:</value>
  </data>
  <data name="eng_lblNGQty" xml:space="preserve">
    <value>NG Qty:</value>
  </data>
  <data name="eng_lblOKQty" xml:space="preserve">
    <value>OK Qty:</value>
  </data>
  <data name="eng_lblPAQC" xml:space="preserve">
    <value>PAQC</value>
  </data>
  <data name="eng_lblPDLine" xml:space="preserve">
    <value>PDLine:</value>
  </data>
  <data name="eng_lblProductID" xml:space="preserve">
    <value>ProdId:</value>
  </data>
  <data name="eng_lblCollectionData" xml:space="preserve">
    <value>Collection Data</value>
  </data>
  <data name="eng_lblStation" xml:space="preserve">
    <value>Station:</value>
  </data>
  <data name="eng_msgDuplicateData" xml:space="preserve">
    <value>Duplicate Data!!</value>
  </data>
  <data name="eng_msgInputValidDefect" xml:space="preserve">
    <value>Please input the valid Defect!!</value>
  </data>
  <data name="cn_msgOceanShipping" xml:space="preserve">
    <value>此机器为海运方式出货,请检查是否有装乾燥剂</value>
  </data>
  <data name="eng_msgOceanShipping" xml:space="preserve">
    <value>This machine must be ocean shipping, please check if a desiccant is present!</value>
  </data>
  <data name="cn_msgCoolableCustSNDoesnotMatchPizzaLabel" xml:space="preserve">
    <value>客户序号不匹配！</value>
  </data>
  <data name="cn_msgPizzaLabelCanNotBeFound" xml:space="preserve">
    <value>不存在的Customer S/N [on Pizza Label]！</value>
  </data>
  <data name="eng_msgCoolableCustSNDoesnotMatchPizzaLabel" xml:space="preserve">
    <value>Customer SN does not match what it should be!</value>
  </data>
  <data name="eng_msgPizzaLabelCanNotBeFound" xml:space="preserve">
    <value>The Customer S/N on Pizza Label can not be found!</value>
  </data>
  <data name="cn_msgInputCooLabelSuccess" xml:space="preserve">
    <value>输入 SN coo Label 成功！</value>
  </data>
  <data name="eng_msgInputCooLabelSuccess" xml:space="preserve">
    <value>input SN coo label SUCCESS!</value>
  </data>
  <data name="cn_lblProductInfo" xml:space="preserve">
    <value>Product Information</value>
  </data>
  <data name="eng_lblProductInfo" xml:space="preserve">
    <value>Product Information</value>
  </data>
  <data name="cn_msgQualityCheck" xml:space="preserve">
    <value>该机器须进行PAQC Check!请勿封箱!</value>
  </data>
  <data name="eng_msgQualityCheck" xml:space="preserve">
    <value>This machine need to Check for PAQC !Please do not carton sealing</value>
  </data>
  <data name="cn_msgInputWarrantyCard" xml:space="preserve">
    <value>请刷入Warranty Card 上的Customer S/N!</value>
  </data>
  <data name="cn_msgWarrantySNNotMatch" xml:space="preserve">
    <value>Product 与Warranty Card不匹配！请检查后重新刷入Warranty Card 上的Customer S/N!</value>
  </data>
  <data name="eng_msgInputWarrantyCard" xml:space="preserve">
    <value>Please input Warranty Card Customer S/N!</value>
  </data>
  <data name="eng_msgWarrantySNNotMatch" xml:space="preserve">
    <value>Product does not match Warranty Card! Please check and input Warranty Card Customer S/N again!</value>
  </data>
  <data name="cn_msgModelWeightError" xml:space="preserve">
    <value>机器没有标准重量,请维护标准重量,请勿封箱!</value>
  </data>
  <data name="eng_msgModelWeightError" xml:space="preserve">
    <value>机器没有标准重量,请维护标准重量,请勿封箱!</value>
  </data>
</root>