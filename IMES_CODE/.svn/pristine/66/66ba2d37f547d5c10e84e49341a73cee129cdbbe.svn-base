<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2014 rel. 2 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:map="http://www.w3.org/2005/xpath-functions/map" xmlns:math="http://www.w3.org/2005/xpath-functions/math" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link map math sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:param name="CUST_ORD_REF_max" select="'30'"/>
	<xsl:param name="CUST_PO_max" select="'30'"/>
	<xsl:param name="DEST_CODE_max" select="'12'"/>
	<xsl:param name="DUTY_CODE_max" select="'12'"/>
	<xsl:param name="HP_Cust_PN_max" select="'30'"/>
	<xsl:param name="HP_PN_max" select="'16'"/>
	<xsl:param name="HP_SO_max" select="'30'"/>
	<xsl:param name="INTL_CARRIER_max" select="'30'"/>
	<xsl:param name="ODM_BARCODE1_max" select="'15'"/>
	<xsl:param name="ODM_TEXT1_max" select="'60'"/>
	<xsl:param name="ODM_TEXT2_max" select="'12'"/>
	<xsl:param name="ODM_TEXT3_max" select="'21'"/>
	<xsl:param name="REG_CARRIER_max" select="'12'"/>
	<xsl:param name="RETURN_TO_CITY_max" select="'40'"/>
	<xsl:param name="RETURN_TO_NAME_2" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_max" select="'40'"/>
	<xsl:param name="RETURN_TO_STATE_max" select="'30'"/>
	<xsl:param name="RETURN_TO_STREET_2" select="'30'"/>
	<xsl:param name="RETURN_TO_STREET_max" select="'40'"/>
	<xsl:param name="RETURN_TO_ZIP_max" select="'30'"/>
	<xsl:param name="SHIP_FROM_CITY_max" select="'12'"/>
	<xsl:param name="SHIP_FROM_COUNTRY_NAME_max" select="'15'"/>
	<xsl:param name="SHIP_FROM_NAME_2_max" select="'40'"/>
	<xsl:param name="SHIP_FROM_NAME_3_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_NAME_max" select="'30'"/>
	<xsl:param name="SHIP_FROM_STATE_max" select="'8'"/>
	<xsl:param name="SHIP_FROM_STREET_2_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_STREET_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_TO_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_TO_CONTACT_max" select="'35'"/>
	<xsl:param name="SHIP_TO_COUNTRY_NAME_max" select="'24'"/>
	<xsl:param name="SHIP_TO_ID_max" select="'18'"/>
	<xsl:param name="SHIP_TO_NAME_2_max" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_3_max" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_max" select="'35'"/>
	<xsl:param name="SHIP_TO_STATE_max" select="'35'"/>
	<xsl:param name="SHIP_TO_STREET_2_max" select="'35'"/>
	<xsl:param name="SHIP_TO_STREET_max" select="'35'"/>
	<xsl:param name="SHIP_TO_TELEPHONE_max" select="'18'"/>
	<xsl:param name="SHIP_TO_ZIP_max" select="'15'"/>
	<xsl:param name="STCC_max" select="'15'"/>
	<xsl:param name="SUB_REGION_max" select="'12'"/>
	<xsl:param name="WAREHOUSE_CODE_max" select="'30'"/>
	<xsl:param name="WAYBILL_NUMBER_max" select="'30'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="2mm" margin-right="2mm" page-height="55mm" page-width="127mm" margin-top="0mm" margin-bottom="0mm">
				<fo:region-body margin-top="3mm" margin-bottom="0mm" column-count="1" column-gap="0"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="2mm" margin-right="2mm" page-height="55mm" page-width="127mm" margin-top="0mm" margin-bottom="0mm">
				<fo:region-body margin-top="3mm" margin-bottom="0mm" column-count="1" column-gap="0"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2014 rel. 2 sp1 (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:flow flow-name="xsl-region-body">
					<fo:block alignment-baseline="before-edge">
						<xsl:for-each select="$XML">
							<xsl:for-each select="BOXES">
								<xsl:for-each select="BOX">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="none" border-collapse="collapse" margin="0" padding="0" table-layout="fixed" width="100%">
										<fo:table-column column-width="10%"/>
										<fo:table-column column-width="30%"/>
										<fo:table-column column-width="35%"/>
										<fo:table-column column-width="25%"/>
										<xsl:variable name="altova:CurrContextGrid_1" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row width="100%">
													<fo:table-cell border="none" border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="5pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>SHIP FROM:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="none" border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="4.5pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_3 , 1 , $SHIP_FROM_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_STREET  , 1 , $SHIP_FROM_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-rows-spanned="2" border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="6pt" margin="0" padding="0" padding-left="1pt" white-space-collapse="false" linefeed-treatment="preserve" wrap-option="wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Sales Order #: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( HP_SO , 1 , $HP_SO_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Customer SKU:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( HP_Cust_PN , 1 , $HP_Cust_PN_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Deliver To</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( SHIP_TO_CONTACT , 1 , $SHIP_TO_CONTACT_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>WHSE:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAREHOUSE_CODE , 1 , $WAREHOUSE_CODE_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Return to:</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="substring( RETURN_TO_NAME  , 1 , $RETURN_TO_NAME_max )"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="substring(  RETURN_TO_STREET , 1 , $RETURN_TO_STREET_max )"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="substring( RETURN_TO_CITY , 1 , $RETURN_TO_CITY_max)"/>
																</fo:inline>
																<xsl:if test="string-length(RETURN_TO_STATE) &gt;0">
																	<fo:inline font-weight="bold">
																		<xsl:value-of select="concat(&quot;, &quot;, substring( RETURN_TO_STATE , 1, $RETURN_TO_STATE_max))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="concat(  &quot; &quot;, substring( RETURN_TO_ZIP , 1 , $RETURN_TO_ZIP_max))"/>
																</fo:inline>
																<fo:block/>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell number-rows-spanned="2" border="none" border-left-style="none" font-family="Arial" font-size="7pt" font-weight="normal" line-height="6pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="right">
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Carrier: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( INTL_CARRIER , 1 , $INTL_CARRIER_max )"/>
																</fo:inline>
																<xsl:if test="string-length(REG_CARRIER) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat(&quot; / &quot;, substring( REG_CARRIER , 1, $REG_CARRIER_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>P/N:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( HP_PN , 1 , $HP_PN_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Telephone: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( SHIP_TO_TELEPHONE , 1 , $SHIP_TO_TELEPHONE_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:block>
																	<fo:leader leader-pattern="space"/>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>AWB: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_max )"/>
																</fo:inline>
																<fo:block/>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row width="100%">
													<fo:table-cell number-columns-spanned="2" number-rows-spanned="2" border="none" border-bottom="1pt" border-bottom-color="black" border-bottom-style="solid" border-collapse="collapse" border-right="1pt" border-right-color="black" border-right-style="solid" border-top="1pt" border-top-color="black" border-top-style="solid" font-family="Arial" font-size="6pt" font-weight="bold" line-height="6pt" margin="0" margin-right="2pt" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>SHIP TO: </xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_TO_ID  , 1 , $SHIP_TO_ID_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_TO_NAME_2  , 1 , $SHIP_TO_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_TO_STREET , 1 , $SHIP_TO_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_max ))"/>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row width="100%">
													<fo:table-cell number-columns-spanned="2" border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="6pt" margin="0" padding="0" padding-left="2pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-family="Free 3 of 9 Extended" font-size="30pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID">
																	<xsl:variable name="value-of-template_2">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_2),'&#x200B;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="30pt">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="30pt">
																				<xsl:copy-of select="$value-of-template_2"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="30pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:text>PACK ID: </xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="PACK_ID"/>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="none" border-collapse="collapse" border-top-style="none" margin="0" padding="0" table-layout="fixed" width="100%">
										<fo:table-column column-width="60%"/>
										<fo:table-column column-width="40%"/>
										<xsl:variable name="altova:CurrContextGrid_3" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell number-columns-spanned="2" border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="5.5pt" margin="0" padding="0" padding-top="1pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="CUST_PO">
																	<xsl:variable name="value-of-template_4">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_4),'&#x200B;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template_4"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template_4"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-weight="bold">
																	<xsl:text>PO #: </xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="substring( CUST_PO , 1 , $CUST_PO_max )"/>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="5pt" font-weight="normal" line-height="3pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template_5">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template_5"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template_5"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="8pt" font-weight="normal" line-height="7pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="right">
																<fo:inline font-weight="bold">
																	<xsl:text>Reference #: </xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:value-of select="substring(  CUST_ORD_REF , 1 , $CUST_ORD_REF_max )"/>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row width="100%">
													<fo:table-cell border="none" font-family="Arial" font-size="6pt" line-height="7pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>B</xsl:text>
																</fo:inline>
																<fo:inline font-weight="bold">
																	<xsl:text>OX ID: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template_6">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																			<fo:block font-weight="bold">
																				<xsl:copy-of select="$value-of-template_6"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-weight="bold">
																				<xsl:copy-of select="$value-of-template_6"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="none" font-family="Arial" font-size="6pt" line-height="5pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="right">
																<fo:inline font-weight="bold">
																	<xsl:text>Box Qty: 1 [Box/Total: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_SEQUENCE">
																	<xsl:variable name="value-of-template_7">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_7),'&#x200B;')">
																			<fo:block font-weight="bold">
																				<xsl:copy-of select="$value-of-template_7"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-weight="bold">
																				<xsl:copy-of select="$value-of-template_7"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-weight="bold">
																	<xsl:text> of </xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_BOX_QTY">
																	<xsl:variable name="value-of-template_8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																			<fo:block font-weight="bold">
																				<xsl:copy-of select="$value-of-template_8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-weight="bold">
																				<xsl:copy-of select="$value-of-template_8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-weight="bold">
																	<xsl:text>]</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table border="none" border-collapse="collapse" margin="0" padding="0" table-layout="fixed" width="100%">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="35%"/>
										<xsl:variable name="altova:CurrContextGrid_9" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell border="none" border-collapse="collapse" border-top-style="none" font-family="Arial" font-size="6pt" line-height="6pt" margin="0" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<xsl:for-each select="UDF_HEADER">
																	<xsl:if test="./KEY = &apos;ODM_TEXT1&apos; and string-length(./VALUE)&gt;0">
																		<fo:inline font-family="Arial" font-size="6pt" font-weight="bold">
																			<xsl:value-of select="substring( VALUE , 1 , $ODM_TEXT1_max )"/>
																		</fo:inline>
																	</xsl:if>
																</xsl:for-each>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="none" border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="6pt" margin="0" padding="0" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="right">
																<fo:inline font-weight="bold">
																	<xsl:text>NABOX130311</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
									<xsl:if test="position() != last()">
										<fo:block break-after="page">
											<fo:leader leader-pattern="space"/>
										</fo:block>
									</xsl:if>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
