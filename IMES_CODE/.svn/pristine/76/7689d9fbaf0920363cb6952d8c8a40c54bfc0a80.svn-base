//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3603
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace PackListTD
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet : global::System.Data.DataSet
    {

        private PACK_IDDataTable tablePACK_ID;

        private EXPORT_NOTES_HEADDataTable tableEXPORT_NOTES_HEAD;

        private SHIPPING_INSTR_HEADDataTable tableSHIPPING_INSTR_HEAD;

        private PICKING_INSTR_HEADDataTable tablePICKING_INSTR_HEAD;

        private DELIVERY_INSTR_HEADDataTable tableDELIVERY_INSTR_HEAD;

        private SPECIAL_INSTR_HEADDataTable tableSPECIAL_INSTR_HEAD;

        private CUSTOMER_INSTR_HEADDataTable tableCUSTOMER_INSTR_HEAD;

        private LABEL_INSTR_HEADDataTable tableLABEL_INSTR_HEAD;

        private CARRIER_INST_HEADDataTable tableCARRIER_INST_HEAD;

        private INVOICE_UDF_HEADDataTable tableINVOICE_UDF_HEAD;

        private UDF_HEADDataTable tableUDF_HEAD;

        private UDF_HEADERDataTable tableUDF_HEADER;

        private HANDLING_INSTR_HEADDataTable tableHANDLING_INSTR_HEAD;

        private PACK_ID_LINE_ITEMDataTable tablePACK_ID_LINE_ITEM;

        private EXPORT_NOTES_DETAILDataTable tableEXPORT_NOTES_DETAIL;

        private SHIPPING_INSTR_DETAILDataTable tableSHIPPING_INSTR_DETAIL;

        private PICKING_INSTR_DETAILDataTable tablePICKING_INSTR_DETAIL;

        private DELIVERY_INSTR_DETAILDataTable tableDELIVERY_INSTR_DETAIL;

        private SPECIAL_INSTR_DETAILDataTable tableSPECIAL_INSTR_DETAIL;

        private CUSTOMER_INSTR_DETAILDataTable tableCUSTOMER_INSTR_DETAIL;

        private HANDLING_INSTR_DETAILDataTable tableHANDLING_INSTR_DETAIL;

        private UID_INSTR_DETAILDataTable tableUID_INSTR_DETAIL;

        private CONFIG_INSTR_DETAILDataTable tableCONFIG_INSTR_DETAIL;

        private MAXKIT_DETAILDataTable tableMAXKIT_DETAIL;

        private UDF_DETDataTable tableUDF_DET;

        private UDF_DETAILDataTable tableUDF_DETAIL;

        private HP_PN_COMPONENTSDataTable tableHP_PN_COMPONENTS;

        private BOXDataTable tableBOX;

        private SERIAL_NUMDataTable tableSERIAL_NUM;

        private UDF_BOXDataTable tableUDF_BOX;

        private global::System.Data.DataRelation relationPACK_ID_EXPORT_NOTES_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_SHIPPING_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_PICKING_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_DELIVERY_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_SPECIAL_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_CUSTOMER_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_LABEL_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_CARRIER_INST_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_INVOICE_UDF_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_UDF_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_UDF_HEADER;

        private global::System.Data.DataRelation relationPACK_ID_HANDLING_INSTR_HEAD;

        private global::System.Data.DataRelation relationPACK_ID_PACK_ID_LINE_ITEM;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_UID_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_MAXKIT_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_UDF_DET;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_UDF_DETAIL;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_HP_PN_COMPONENTS;

        private global::System.Data.DataRelation relationPACK_ID_LINE_ITEM_BOX;

        private global::System.Data.DataRelation relationBOX_SERIAL_NUM;

        private global::System.Data.DataRelation relationBOX_UDF_BOX;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NewDataSet()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NewDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
            :
                base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PACK_ID"] != null))
                {
                    base.Tables.Add(new PACK_IDDataTable(ds.Tables["PACK_ID"]));
                }
                if ((ds.Tables["EXPORT_NOTES_HEAD"] != null))
                {
                    base.Tables.Add(new EXPORT_NOTES_HEADDataTable(ds.Tables["EXPORT_NOTES_HEAD"]));
                }
                if ((ds.Tables["SHIPPING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new SHIPPING_INSTR_HEADDataTable(ds.Tables["SHIPPING_INSTR_HEAD"]));
                }
                if ((ds.Tables["PICKING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new PICKING_INSTR_HEADDataTable(ds.Tables["PICKING_INSTR_HEAD"]));
                }
                if ((ds.Tables["DELIVERY_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new DELIVERY_INSTR_HEADDataTable(ds.Tables["DELIVERY_INSTR_HEAD"]));
                }
                if ((ds.Tables["SPECIAL_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new SPECIAL_INSTR_HEADDataTable(ds.Tables["SPECIAL_INSTR_HEAD"]));
                }
                if ((ds.Tables["CUSTOMER_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new CUSTOMER_INSTR_HEADDataTable(ds.Tables["CUSTOMER_INSTR_HEAD"]));
                }
                if ((ds.Tables["LABEL_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new LABEL_INSTR_HEADDataTable(ds.Tables["LABEL_INSTR_HEAD"]));
                }
                if ((ds.Tables["CARRIER_INST_HEAD"] != null))
                {
                    base.Tables.Add(new CARRIER_INST_HEADDataTable(ds.Tables["CARRIER_INST_HEAD"]));
                }
                if ((ds.Tables["INVOICE_UDF_HEAD"] != null))
                {
                    base.Tables.Add(new INVOICE_UDF_HEADDataTable(ds.Tables["INVOICE_UDF_HEAD"]));
                }
                if ((ds.Tables["UDF_HEAD"] != null))
                {
                    base.Tables.Add(new UDF_HEADDataTable(ds.Tables["UDF_HEAD"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null))
                {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["HANDLING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new HANDLING_INSTR_HEADDataTable(ds.Tables["HANDLING_INSTR_HEAD"]));
                }
                if ((ds.Tables["PACK_ID_LINE_ITEM"] != null))
                {
                    base.Tables.Add(new PACK_ID_LINE_ITEMDataTable(ds.Tables["PACK_ID_LINE_ITEM"]));
                }
                if ((ds.Tables["EXPORT_NOTES_DETAIL"] != null))
                {
                    base.Tables.Add(new EXPORT_NOTES_DETAILDataTable(ds.Tables["EXPORT_NOTES_DETAIL"]));
                }
                if ((ds.Tables["SHIPPING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new SHIPPING_INSTR_DETAILDataTable(ds.Tables["SHIPPING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["PICKING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new PICKING_INSTR_DETAILDataTable(ds.Tables["PICKING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["DELIVERY_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new DELIVERY_INSTR_DETAILDataTable(ds.Tables["DELIVERY_INSTR_DETAIL"]));
                }
                if ((ds.Tables["SPECIAL_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new SPECIAL_INSTR_DETAILDataTable(ds.Tables["SPECIAL_INSTR_DETAIL"]));
                }
                if ((ds.Tables["CUSTOMER_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new CUSTOMER_INSTR_DETAILDataTable(ds.Tables["CUSTOMER_INSTR_DETAIL"]));
                }
                if ((ds.Tables["HANDLING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new HANDLING_INSTR_DETAILDataTable(ds.Tables["HANDLING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["UID_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new UID_INSTR_DETAILDataTable(ds.Tables["UID_INSTR_DETAIL"]));
                }
                if ((ds.Tables["CONFIG_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new CONFIG_INSTR_DETAILDataTable(ds.Tables["CONFIG_INSTR_DETAIL"]));
                }
                if ((ds.Tables["MAXKIT_DETAIL"] != null))
                {
                    base.Tables.Add(new MAXKIT_DETAILDataTable(ds.Tables["MAXKIT_DETAIL"]));
                }
                if ((ds.Tables["UDF_DET"] != null))
                {
                    base.Tables.Add(new UDF_DETDataTable(ds.Tables["UDF_DET"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null))
                {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["HP_PN_COMPONENTS"] != null))
                {
                    base.Tables.Add(new HP_PN_COMPONENTSDataTable(ds.Tables["HP_PN_COMPONENTS"]));
                }
                if ((ds.Tables["BOX"] != null))
                {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["SERIAL_NUM"] != null))
                {
                    base.Tables.Add(new SERIAL_NUMDataTable(ds.Tables["SERIAL_NUM"]));
                }
                if ((ds.Tables["UDF_BOX"] != null))
                {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PACK_IDDataTable PACK_ID
        {
            get
            {
                return this.tablePACK_ID;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXPORT_NOTES_HEADDataTable EXPORT_NOTES_HEAD
        {
            get
            {
                return this.tableEXPORT_NOTES_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHIPPING_INSTR_HEADDataTable SHIPPING_INSTR_HEAD
        {
            get
            {
                return this.tableSHIPPING_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PICKING_INSTR_HEADDataTable PICKING_INSTR_HEAD
        {
            get
            {
                return this.tablePICKING_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DELIVERY_INSTR_HEADDataTable DELIVERY_INSTR_HEAD
        {
            get
            {
                return this.tableDELIVERY_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPECIAL_INSTR_HEADDataTable SPECIAL_INSTR_HEAD
        {
            get
            {
                return this.tableSPECIAL_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMER_INSTR_HEADDataTable CUSTOMER_INSTR_HEAD
        {
            get
            {
                return this.tableCUSTOMER_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LABEL_INSTR_HEADDataTable LABEL_INSTR_HEAD
        {
            get
            {
                return this.tableLABEL_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CARRIER_INST_HEADDataTable CARRIER_INST_HEAD
        {
            get
            {
                return this.tableCARRIER_INST_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INVOICE_UDF_HEADDataTable INVOICE_UDF_HEAD
        {
            get
            {
                return this.tableINVOICE_UDF_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_HEADDataTable UDF_HEAD
        {
            get
            {
                return this.tableUDF_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_HEADERDataTable UDF_HEADER
        {
            get
            {
                return this.tableUDF_HEADER;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HANDLING_INSTR_HEADDataTable HANDLING_INSTR_HEAD
        {
            get
            {
                return this.tableHANDLING_INSTR_HEAD;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PACK_ID_LINE_ITEMDataTable PACK_ID_LINE_ITEM
        {
            get
            {
                return this.tablePACK_ID_LINE_ITEM;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXPORT_NOTES_DETAILDataTable EXPORT_NOTES_DETAIL
        {
            get
            {
                return this.tableEXPORT_NOTES_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHIPPING_INSTR_DETAILDataTable SHIPPING_INSTR_DETAIL
        {
            get
            {
                return this.tableSHIPPING_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PICKING_INSTR_DETAILDataTable PICKING_INSTR_DETAIL
        {
            get
            {
                return this.tablePICKING_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DELIVERY_INSTR_DETAILDataTable DELIVERY_INSTR_DETAIL
        {
            get
            {
                return this.tableDELIVERY_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPECIAL_INSTR_DETAILDataTable SPECIAL_INSTR_DETAIL
        {
            get
            {
                return this.tableSPECIAL_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMER_INSTR_DETAILDataTable CUSTOMER_INSTR_DETAIL
        {
            get
            {
                return this.tableCUSTOMER_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HANDLING_INSTR_DETAILDataTable HANDLING_INSTR_DETAIL
        {
            get
            {
                return this.tableHANDLING_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UID_INSTR_DETAILDataTable UID_INSTR_DETAIL
        {
            get
            {
                return this.tableUID_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CONFIG_INSTR_DETAILDataTable CONFIG_INSTR_DETAIL
        {
            get
            {
                return this.tableCONFIG_INSTR_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MAXKIT_DETAILDataTable MAXKIT_DETAIL
        {
            get
            {
                return this.tableMAXKIT_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_DETDataTable UDF_DET
        {
            get
            {
                return this.tableUDF_DET;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_DETAILDataTable UDF_DETAIL
        {
            get
            {
                return this.tableUDF_DETAIL;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HP_PN_COMPONENTSDataTable HP_PN_COMPONENTS
        {
            get
            {
                return this.tableHP_PN_COMPONENTS;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOXDataTable BOX
        {
            get
            {
                return this.tableBOX;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SERIAL_NUMDataTable SERIAL_NUM
        {
            get
            {
                return this.tableSERIAL_NUM;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_BOXDataTable UDF_BOX
        {
            get
            {
                return this.tableUDF_BOX;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone()
        {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PACK_ID"] != null))
                {
                    base.Tables.Add(new PACK_IDDataTable(ds.Tables["PACK_ID"]));
                }
                if ((ds.Tables["EXPORT_NOTES_HEAD"] != null))
                {
                    base.Tables.Add(new EXPORT_NOTES_HEADDataTable(ds.Tables["EXPORT_NOTES_HEAD"]));
                }
                if ((ds.Tables["SHIPPING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new SHIPPING_INSTR_HEADDataTable(ds.Tables["SHIPPING_INSTR_HEAD"]));
                }
                if ((ds.Tables["PICKING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new PICKING_INSTR_HEADDataTable(ds.Tables["PICKING_INSTR_HEAD"]));
                }
                if ((ds.Tables["DELIVERY_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new DELIVERY_INSTR_HEADDataTable(ds.Tables["DELIVERY_INSTR_HEAD"]));
                }
                if ((ds.Tables["SPECIAL_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new SPECIAL_INSTR_HEADDataTable(ds.Tables["SPECIAL_INSTR_HEAD"]));
                }
                if ((ds.Tables["CUSTOMER_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new CUSTOMER_INSTR_HEADDataTable(ds.Tables["CUSTOMER_INSTR_HEAD"]));
                }
                if ((ds.Tables["LABEL_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new LABEL_INSTR_HEADDataTable(ds.Tables["LABEL_INSTR_HEAD"]));
                }
                if ((ds.Tables["CARRIER_INST_HEAD"] != null))
                {
                    base.Tables.Add(new CARRIER_INST_HEADDataTable(ds.Tables["CARRIER_INST_HEAD"]));
                }
                if ((ds.Tables["INVOICE_UDF_HEAD"] != null))
                {
                    base.Tables.Add(new INVOICE_UDF_HEADDataTable(ds.Tables["INVOICE_UDF_HEAD"]));
                }
                if ((ds.Tables["UDF_HEAD"] != null))
                {
                    base.Tables.Add(new UDF_HEADDataTable(ds.Tables["UDF_HEAD"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null))
                {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["HANDLING_INSTR_HEAD"] != null))
                {
                    base.Tables.Add(new HANDLING_INSTR_HEADDataTable(ds.Tables["HANDLING_INSTR_HEAD"]));
                }
                if ((ds.Tables["PACK_ID_LINE_ITEM"] != null))
                {
                    base.Tables.Add(new PACK_ID_LINE_ITEMDataTable(ds.Tables["PACK_ID_LINE_ITEM"]));
                }
                if ((ds.Tables["EXPORT_NOTES_DETAIL"] != null))
                {
                    base.Tables.Add(new EXPORT_NOTES_DETAILDataTable(ds.Tables["EXPORT_NOTES_DETAIL"]));
                }
                if ((ds.Tables["SHIPPING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new SHIPPING_INSTR_DETAILDataTable(ds.Tables["SHIPPING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["PICKING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new PICKING_INSTR_DETAILDataTable(ds.Tables["PICKING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["DELIVERY_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new DELIVERY_INSTR_DETAILDataTable(ds.Tables["DELIVERY_INSTR_DETAIL"]));
                }
                if ((ds.Tables["SPECIAL_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new SPECIAL_INSTR_DETAILDataTable(ds.Tables["SPECIAL_INSTR_DETAIL"]));
                }
                if ((ds.Tables["CUSTOMER_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new CUSTOMER_INSTR_DETAILDataTable(ds.Tables["CUSTOMER_INSTR_DETAIL"]));
                }
                if ((ds.Tables["HANDLING_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new HANDLING_INSTR_DETAILDataTable(ds.Tables["HANDLING_INSTR_DETAIL"]));
                }
                if ((ds.Tables["UID_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new UID_INSTR_DETAILDataTable(ds.Tables["UID_INSTR_DETAIL"]));
                }
                if ((ds.Tables["CONFIG_INSTR_DETAIL"] != null))
                {
                    base.Tables.Add(new CONFIG_INSTR_DETAILDataTable(ds.Tables["CONFIG_INSTR_DETAIL"]));
                }
                if ((ds.Tables["MAXKIT_DETAIL"] != null))
                {
                    base.Tables.Add(new MAXKIT_DETAILDataTable(ds.Tables["MAXKIT_DETAIL"]));
                }
                if ((ds.Tables["UDF_DET"] != null))
                {
                    base.Tables.Add(new UDF_DETDataTable(ds.Tables["UDF_DET"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null))
                {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["HP_PN_COMPONENTS"] != null))
                {
                    base.Tables.Add(new HP_PN_COMPONENTSDataTable(ds.Tables["HP_PN_COMPONENTS"]));
                }
                if ((ds.Tables["BOX"] != null))
                {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["SERIAL_NUM"] != null))
                {
                    base.Tables.Add(new SERIAL_NUMDataTable(ds.Tables["SERIAL_NUM"]));
                }
                if ((ds.Tables["UDF_BOX"] != null))
                {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable)
        {
            this.tablePACK_ID = ((PACK_IDDataTable)(base.Tables["PACK_ID"]));
            if ((initTable == true))
            {
                if ((this.tablePACK_ID != null))
                {
                    this.tablePACK_ID.InitVars();
                }
            }
            this.tableEXPORT_NOTES_HEAD = ((EXPORT_NOTES_HEADDataTable)(base.Tables["EXPORT_NOTES_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableEXPORT_NOTES_HEAD != null))
                {
                    this.tableEXPORT_NOTES_HEAD.InitVars();
                }
            }
            this.tableSHIPPING_INSTR_HEAD = ((SHIPPING_INSTR_HEADDataTable)(base.Tables["SHIPPING_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableSHIPPING_INSTR_HEAD != null))
                {
                    this.tableSHIPPING_INSTR_HEAD.InitVars();
                }
            }
            this.tablePICKING_INSTR_HEAD = ((PICKING_INSTR_HEADDataTable)(base.Tables["PICKING_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tablePICKING_INSTR_HEAD != null))
                {
                    this.tablePICKING_INSTR_HEAD.InitVars();
                }
            }
            this.tableDELIVERY_INSTR_HEAD = ((DELIVERY_INSTR_HEADDataTable)(base.Tables["DELIVERY_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableDELIVERY_INSTR_HEAD != null))
                {
                    this.tableDELIVERY_INSTR_HEAD.InitVars();
                }
            }
            this.tableSPECIAL_INSTR_HEAD = ((SPECIAL_INSTR_HEADDataTable)(base.Tables["SPECIAL_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableSPECIAL_INSTR_HEAD != null))
                {
                    this.tableSPECIAL_INSTR_HEAD.InitVars();
                }
            }
            this.tableCUSTOMER_INSTR_HEAD = ((CUSTOMER_INSTR_HEADDataTable)(base.Tables["CUSTOMER_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableCUSTOMER_INSTR_HEAD != null))
                {
                    this.tableCUSTOMER_INSTR_HEAD.InitVars();
                }
            }
            this.tableLABEL_INSTR_HEAD = ((LABEL_INSTR_HEADDataTable)(base.Tables["LABEL_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableLABEL_INSTR_HEAD != null))
                {
                    this.tableLABEL_INSTR_HEAD.InitVars();
                }
            }
            this.tableCARRIER_INST_HEAD = ((CARRIER_INST_HEADDataTable)(base.Tables["CARRIER_INST_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableCARRIER_INST_HEAD != null))
                {
                    this.tableCARRIER_INST_HEAD.InitVars();
                }
            }
            this.tableINVOICE_UDF_HEAD = ((INVOICE_UDF_HEADDataTable)(base.Tables["INVOICE_UDF_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableINVOICE_UDF_HEAD != null))
                {
                    this.tableINVOICE_UDF_HEAD.InitVars();
                }
            }
            this.tableUDF_HEAD = ((UDF_HEADDataTable)(base.Tables["UDF_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableUDF_HEAD != null))
                {
                    this.tableUDF_HEAD.InitVars();
                }
            }
            this.tableUDF_HEADER = ((UDF_HEADERDataTable)(base.Tables["UDF_HEADER"]));
            if ((initTable == true))
            {
                if ((this.tableUDF_HEADER != null))
                {
                    this.tableUDF_HEADER.InitVars();
                }
            }
            this.tableHANDLING_INSTR_HEAD = ((HANDLING_INSTR_HEADDataTable)(base.Tables["HANDLING_INSTR_HEAD"]));
            if ((initTable == true))
            {
                if ((this.tableHANDLING_INSTR_HEAD != null))
                {
                    this.tableHANDLING_INSTR_HEAD.InitVars();
                }
            }
            this.tablePACK_ID_LINE_ITEM = ((PACK_ID_LINE_ITEMDataTable)(base.Tables["PACK_ID_LINE_ITEM"]));
            if ((initTable == true))
            {
                if ((this.tablePACK_ID_LINE_ITEM != null))
                {
                    this.tablePACK_ID_LINE_ITEM.InitVars();
                }
            }
            this.tableEXPORT_NOTES_DETAIL = ((EXPORT_NOTES_DETAILDataTable)(base.Tables["EXPORT_NOTES_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableEXPORT_NOTES_DETAIL != null))
                {
                    this.tableEXPORT_NOTES_DETAIL.InitVars();
                }
            }
            this.tableSHIPPING_INSTR_DETAIL = ((SHIPPING_INSTR_DETAILDataTable)(base.Tables["SHIPPING_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableSHIPPING_INSTR_DETAIL != null))
                {
                    this.tableSHIPPING_INSTR_DETAIL.InitVars();
                }
            }
            this.tablePICKING_INSTR_DETAIL = ((PICKING_INSTR_DETAILDataTable)(base.Tables["PICKING_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tablePICKING_INSTR_DETAIL != null))
                {
                    this.tablePICKING_INSTR_DETAIL.InitVars();
                }
            }
            this.tableDELIVERY_INSTR_DETAIL = ((DELIVERY_INSTR_DETAILDataTable)(base.Tables["DELIVERY_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableDELIVERY_INSTR_DETAIL != null))
                {
                    this.tableDELIVERY_INSTR_DETAIL.InitVars();
                }
            }
            this.tableSPECIAL_INSTR_DETAIL = ((SPECIAL_INSTR_DETAILDataTable)(base.Tables["SPECIAL_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableSPECIAL_INSTR_DETAIL != null))
                {
                    this.tableSPECIAL_INSTR_DETAIL.InitVars();
                }
            }
            this.tableCUSTOMER_INSTR_DETAIL = ((CUSTOMER_INSTR_DETAILDataTable)(base.Tables["CUSTOMER_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableCUSTOMER_INSTR_DETAIL != null))
                {
                    this.tableCUSTOMER_INSTR_DETAIL.InitVars();
                }
            }
            this.tableHANDLING_INSTR_DETAIL = ((HANDLING_INSTR_DETAILDataTable)(base.Tables["HANDLING_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableHANDLING_INSTR_DETAIL != null))
                {
                    this.tableHANDLING_INSTR_DETAIL.InitVars();
                }
            }
            this.tableUID_INSTR_DETAIL = ((UID_INSTR_DETAILDataTable)(base.Tables["UID_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableUID_INSTR_DETAIL != null))
                {
                    this.tableUID_INSTR_DETAIL.InitVars();
                }
            }
            this.tableCONFIG_INSTR_DETAIL = ((CONFIG_INSTR_DETAILDataTable)(base.Tables["CONFIG_INSTR_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableCONFIG_INSTR_DETAIL != null))
                {
                    this.tableCONFIG_INSTR_DETAIL.InitVars();
                }
            }
            this.tableMAXKIT_DETAIL = ((MAXKIT_DETAILDataTable)(base.Tables["MAXKIT_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableMAXKIT_DETAIL != null))
                {
                    this.tableMAXKIT_DETAIL.InitVars();
                }
            }
            this.tableUDF_DET = ((UDF_DETDataTable)(base.Tables["UDF_DET"]));
            if ((initTable == true))
            {
                if ((this.tableUDF_DET != null))
                {
                    this.tableUDF_DET.InitVars();
                }
            }
            this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(base.Tables["UDF_DETAIL"]));
            if ((initTable == true))
            {
                if ((this.tableUDF_DETAIL != null))
                {
                    this.tableUDF_DETAIL.InitVars();
                }
            }
            this.tableHP_PN_COMPONENTS = ((HP_PN_COMPONENTSDataTable)(base.Tables["HP_PN_COMPONENTS"]));
            if ((initTable == true))
            {
                if ((this.tableHP_PN_COMPONENTS != null))
                {
                    this.tableHP_PN_COMPONENTS.InitVars();
                }
            }
            this.tableBOX = ((BOXDataTable)(base.Tables["BOX"]));
            if ((initTable == true))
            {
                if ((this.tableBOX != null))
                {
                    this.tableBOX.InitVars();
                }
            }
            this.tableSERIAL_NUM = ((SERIAL_NUMDataTable)(base.Tables["SERIAL_NUM"]));
            if ((initTable == true))
            {
                if ((this.tableSERIAL_NUM != null))
                {
                    this.tableSERIAL_NUM.InitVars();
                }
            }
            this.tableUDF_BOX = ((UDF_BOXDataTable)(base.Tables["UDF_BOX"]));
            if ((initTable == true))
            {
                if ((this.tableUDF_BOX != null))
                {
                    this.tableUDF_BOX.InitVars();
                }
            }
            this.relationPACK_ID_EXPORT_NOTES_HEAD = this.Relations["PACK_ID_EXPORT_NOTES_HEAD"];
            this.relationPACK_ID_SHIPPING_INSTR_HEAD = this.Relations["PACK_ID_SHIPPING_INSTR_HEAD"];
            this.relationPACK_ID_PICKING_INSTR_HEAD = this.Relations["PACK_ID_PICKING_INSTR_HEAD"];
            this.relationPACK_ID_DELIVERY_INSTR_HEAD = this.Relations["PACK_ID_DELIVERY_INSTR_HEAD"];
            this.relationPACK_ID_SPECIAL_INSTR_HEAD = this.Relations["PACK_ID_SPECIAL_INSTR_HEAD"];
            this.relationPACK_ID_CUSTOMER_INSTR_HEAD = this.Relations["PACK_ID_CUSTOMER_INSTR_HEAD"];
            this.relationPACK_ID_LABEL_INSTR_HEAD = this.Relations["PACK_ID_LABEL_INSTR_HEAD"];
            this.relationPACK_ID_CARRIER_INST_HEAD = this.Relations["PACK_ID_CARRIER_INST_HEAD"];
            this.relationPACK_ID_INVOICE_UDF_HEAD = this.Relations["PACK_ID_INVOICE_UDF_HEAD"];
            this.relationPACK_ID_UDF_HEAD = this.Relations["PACK_ID_UDF_HEAD"];
            this.relationPACK_ID_UDF_HEADER = this.Relations["PACK_ID_UDF_HEADER"];
            this.relationPACK_ID_HANDLING_INSTR_HEAD = this.Relations["PACK_ID_HANDLING_INSTR_HEAD"];
            this.relationPACK_ID_PACK_ID_LINE_ITEM = this.Relations["PACK_ID_PACK_ID_LINE_ITEM"];
            this.relationPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL = this.Relations["PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_UID_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_UID_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL = this.Relations["PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_MAXKIT_DETAIL = this.Relations["PACK_ID_LINE_ITEM_MAXKIT_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_UDF_DET = this.Relations["PACK_ID_LINE_ITEM_UDF_DET"];
            this.relationPACK_ID_LINE_ITEM_UDF_DETAIL = this.Relations["PACK_ID_LINE_ITEM_UDF_DETAIL"];
            this.relationPACK_ID_LINE_ITEM_HP_PN_COMPONENTS = this.Relations["PACK_ID_LINE_ITEM_HP_PN_COMPONENTS"];
            this.relationPACK_ID_LINE_ITEM_BOX = this.Relations["PACK_ID_LINE_ITEM_BOX"];
            this.relationBOX_SERIAL_NUM = this.Relations["BOX_SERIAL_NUM"];
            this.relationBOX_UDF_BOX = this.Relations["BOX_UDF_BOX"];
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePACK_ID = new PACK_IDDataTable();
            base.Tables.Add(this.tablePACK_ID);
            this.tableEXPORT_NOTES_HEAD = new EXPORT_NOTES_HEADDataTable();
            base.Tables.Add(this.tableEXPORT_NOTES_HEAD);
            this.tableSHIPPING_INSTR_HEAD = new SHIPPING_INSTR_HEADDataTable();
            base.Tables.Add(this.tableSHIPPING_INSTR_HEAD);
            this.tablePICKING_INSTR_HEAD = new PICKING_INSTR_HEADDataTable();
            base.Tables.Add(this.tablePICKING_INSTR_HEAD);
            this.tableDELIVERY_INSTR_HEAD = new DELIVERY_INSTR_HEADDataTable();
            base.Tables.Add(this.tableDELIVERY_INSTR_HEAD);
            this.tableSPECIAL_INSTR_HEAD = new SPECIAL_INSTR_HEADDataTable();
            base.Tables.Add(this.tableSPECIAL_INSTR_HEAD);
            this.tableCUSTOMER_INSTR_HEAD = new CUSTOMER_INSTR_HEADDataTable();
            base.Tables.Add(this.tableCUSTOMER_INSTR_HEAD);
            this.tableLABEL_INSTR_HEAD = new LABEL_INSTR_HEADDataTable();
            base.Tables.Add(this.tableLABEL_INSTR_HEAD);
            this.tableCARRIER_INST_HEAD = new CARRIER_INST_HEADDataTable();
            base.Tables.Add(this.tableCARRIER_INST_HEAD);
            this.tableINVOICE_UDF_HEAD = new INVOICE_UDF_HEADDataTable();
            base.Tables.Add(this.tableINVOICE_UDF_HEAD);
            this.tableUDF_HEAD = new UDF_HEADDataTable();
            base.Tables.Add(this.tableUDF_HEAD);
            this.tableUDF_HEADER = new UDF_HEADERDataTable();
            base.Tables.Add(this.tableUDF_HEADER);
            this.tableHANDLING_INSTR_HEAD = new HANDLING_INSTR_HEADDataTable();
            base.Tables.Add(this.tableHANDLING_INSTR_HEAD);
            this.tablePACK_ID_LINE_ITEM = new PACK_ID_LINE_ITEMDataTable();
            base.Tables.Add(this.tablePACK_ID_LINE_ITEM);
            this.tableEXPORT_NOTES_DETAIL = new EXPORT_NOTES_DETAILDataTable();
            base.Tables.Add(this.tableEXPORT_NOTES_DETAIL);
            this.tableSHIPPING_INSTR_DETAIL = new SHIPPING_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableSHIPPING_INSTR_DETAIL);
            this.tablePICKING_INSTR_DETAIL = new PICKING_INSTR_DETAILDataTable();
            base.Tables.Add(this.tablePICKING_INSTR_DETAIL);
            this.tableDELIVERY_INSTR_DETAIL = new DELIVERY_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableDELIVERY_INSTR_DETAIL);
            this.tableSPECIAL_INSTR_DETAIL = new SPECIAL_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableSPECIAL_INSTR_DETAIL);
            this.tableCUSTOMER_INSTR_DETAIL = new CUSTOMER_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableCUSTOMER_INSTR_DETAIL);
            this.tableHANDLING_INSTR_DETAIL = new HANDLING_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableHANDLING_INSTR_DETAIL);
            this.tableUID_INSTR_DETAIL = new UID_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableUID_INSTR_DETAIL);
            this.tableCONFIG_INSTR_DETAIL = new CONFIG_INSTR_DETAILDataTable();
            base.Tables.Add(this.tableCONFIG_INSTR_DETAIL);
            this.tableMAXKIT_DETAIL = new MAXKIT_DETAILDataTable();
            base.Tables.Add(this.tableMAXKIT_DETAIL);
            this.tableUDF_DET = new UDF_DETDataTable();
            base.Tables.Add(this.tableUDF_DET);
            this.tableUDF_DETAIL = new UDF_DETAILDataTable();
            base.Tables.Add(this.tableUDF_DETAIL);
            this.tableHP_PN_COMPONENTS = new HP_PN_COMPONENTSDataTable();
            base.Tables.Add(this.tableHP_PN_COMPONENTS);
            this.tableBOX = new BOXDataTable();
            base.Tables.Add(this.tableBOX);
            this.tableSERIAL_NUM = new SERIAL_NUMDataTable();
            base.Tables.Add(this.tableSERIAL_NUM);
            this.tableUDF_BOX = new UDF_BOXDataTable();
            base.Tables.Add(this.tableUDF_BOX);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_EXPORT_NOTES_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn});
            this.tableEXPORT_NOTES_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_SHIPPING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableSHIPPING_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_PICKING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn});
            this.tablePICKING_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_DELIVERY_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableDELIVERY_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_SPECIAL_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableSPECIAL_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_CUSTOMER_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableCUSTOMER_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LABEL_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableLABEL_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_CARRIER_INST_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn});
            this.tableCARRIER_INST_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_INVOICE_UDF_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn});
            this.tableINVOICE_UDF_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_UDF_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEAD.PACK_ID_IdColumn});
            this.tableUDF_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.PACK_ID_IdColumn});
            this.tableUDF_HEADER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_HANDLING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn});
            this.tableHANDLING_INSTR_HEAD.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_PACK_ID_LINE_ITEM", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn});
            this.tablePACK_ID_LINE_ITEM.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableEXPORT_NOTES_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableSHIPPING_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tablePICKING_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableDELIVERY_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableSPECIAL_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableCUSTOMER_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableHANDLING_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_UID_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableUID_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableCONFIG_INSTR_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_MAXKIT_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableMAXKIT_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_UDF_DET", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn});
            this.tableUDF_DET.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn});
            this.tableUDF_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_HP_PN_COMPONENTS", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn});
            this.tableHP_PN_COMPONENTS.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PACK_ID_LINE_ITEM_BOX", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOX.PACK_ID_LINE_ITEM_IdColumn});
            this.tableBOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_SERIAL_NUM", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableSERIAL_NUM.BOX_Id_0Column});
            this.tableSERIAL_NUM.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column});
            this.tableUDF_BOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationPACK_ID_EXPORT_NOTES_HEAD = new global::System.Data.DataRelation("PACK_ID_EXPORT_NOTES_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_EXPORT_NOTES_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_EXPORT_NOTES_HEAD);
            this.relationPACK_ID_SHIPPING_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_SHIPPING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_SHIPPING_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_SHIPPING_INSTR_HEAD);
            this.relationPACK_ID_PICKING_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_PICKING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_PICKING_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_PICKING_INSTR_HEAD);
            this.relationPACK_ID_DELIVERY_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_DELIVERY_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_DELIVERY_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_DELIVERY_INSTR_HEAD);
            this.relationPACK_ID_SPECIAL_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_SPECIAL_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_SPECIAL_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_SPECIAL_INSTR_HEAD);
            this.relationPACK_ID_CUSTOMER_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_CUSTOMER_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_CUSTOMER_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_CUSTOMER_INSTR_HEAD);
            this.relationPACK_ID_LABEL_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_LABEL_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_LABEL_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LABEL_INSTR_HEAD);
            this.relationPACK_ID_CARRIER_INST_HEAD = new global::System.Data.DataRelation("PACK_ID_CARRIER_INST_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_CARRIER_INST_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_CARRIER_INST_HEAD);
            this.relationPACK_ID_INVOICE_UDF_HEAD = new global::System.Data.DataRelation("PACK_ID_INVOICE_UDF_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_INVOICE_UDF_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_INVOICE_UDF_HEAD);
            this.relationPACK_ID_UDF_HEAD = new global::System.Data.DataRelation("PACK_ID_UDF_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_UDF_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_UDF_HEAD);
            this.relationPACK_ID_UDF_HEADER = new global::System.Data.DataRelation("PACK_ID_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_UDF_HEADER.Nested = true;
            this.Relations.Add(this.relationPACK_ID_UDF_HEADER);
            this.relationPACK_ID_HANDLING_INSTR_HEAD = new global::System.Data.DataRelation("PACK_ID_HANDLING_INSTR_HEAD", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_HANDLING_INSTR_HEAD.Nested = true;
            this.Relations.Add(this.relationPACK_ID_HANDLING_INSTR_HEAD);
            this.relationPACK_ID_PACK_ID_LINE_ITEM = new global::System.Data.DataRelation("PACK_ID_PACK_ID_LINE_ITEM", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID.PACK_ID_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn}, false);
            this.relationPACK_ID_PACK_ID_LINE_ITEM.Nested = true;
            this.Relations.Add(this.relationPACK_ID_PACK_ID_LINE_ITEM);
            this.relationPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL);
            this.relationPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_UID_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_UID_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_UID_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_UID_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL);
            this.relationPACK_ID_LINE_ITEM_MAXKIT_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_MAXKIT_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_MAXKIT_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_MAXKIT_DETAIL);
            this.relationPACK_ID_LINE_ITEM_UDF_DET = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_UDF_DET", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_UDF_DET.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_UDF_DET);
            this.relationPACK_ID_LINE_ITEM_UDF_DETAIL = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_UDF_DETAIL.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_UDF_DETAIL);
            this.relationPACK_ID_LINE_ITEM_HP_PN_COMPONENTS = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_HP_PN_COMPONENTS", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_HP_PN_COMPONENTS.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_HP_PN_COMPONENTS);
            this.relationPACK_ID_LINE_ITEM_BOX = new global::System.Data.DataRelation("PACK_ID_LINE_ITEM_BOX", new global::System.Data.DataColumn[] {
                        this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableBOX.PACK_ID_LINE_ITEM_IdColumn}, false);
            this.relationPACK_ID_LINE_ITEM_BOX.Nested = true;
            this.Relations.Add(this.relationPACK_ID_LINE_ITEM_BOX);
            this.relationBOX_SERIAL_NUM = new global::System.Data.DataRelation("BOX_SERIAL_NUM", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableSERIAL_NUM.BOX_Id_0Column}, false);
            this.relationBOX_SERIAL_NUM.Nested = true;
            this.Relations.Add(this.relationBOX_SERIAL_NUM);
            this.relationBOX_UDF_BOX = new global::System.Data.DataRelation("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column}, false);
            this.relationBOX_UDF_BOX.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_BOX);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePACK_ID()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXPORT_NOTES_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSHIPPING_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePICKING_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDELIVERY_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSPECIAL_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCUSTOMER_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLABEL_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCARRIER_INST_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeINVOICE_UDF_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_HEADER()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHANDLING_INSTR_HEAD()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePACK_ID_LINE_ITEM()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXPORT_NOTES_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSHIPPING_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePICKING_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDELIVERY_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSPECIAL_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCUSTOMER_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHANDLING_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUID_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCONFIG_INSTR_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMAXKIT_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_DET()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_DETAIL()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHP_PN_COMPONENTS()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOX()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSERIAL_NUM()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_BOX()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            NewDataSet ds = new NewDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        public delegate void PACK_IDRowChangeEventHandler(object sender, PACK_IDRowChangeEvent e);

        public delegate void EXPORT_NOTES_HEADRowChangeEventHandler(object sender, EXPORT_NOTES_HEADRowChangeEvent e);

        public delegate void SHIPPING_INSTR_HEADRowChangeEventHandler(object sender, SHIPPING_INSTR_HEADRowChangeEvent e);

        public delegate void PICKING_INSTR_HEADRowChangeEventHandler(object sender, PICKING_INSTR_HEADRowChangeEvent e);

        public delegate void DELIVERY_INSTR_HEADRowChangeEventHandler(object sender, DELIVERY_INSTR_HEADRowChangeEvent e);

        public delegate void SPECIAL_INSTR_HEADRowChangeEventHandler(object sender, SPECIAL_INSTR_HEADRowChangeEvent e);

        public delegate void CUSTOMER_INSTR_HEADRowChangeEventHandler(object sender, CUSTOMER_INSTR_HEADRowChangeEvent e);

        public delegate void LABEL_INSTR_HEADRowChangeEventHandler(object sender, LABEL_INSTR_HEADRowChangeEvent e);

        public delegate void CARRIER_INST_HEADRowChangeEventHandler(object sender, CARRIER_INST_HEADRowChangeEvent e);

        public delegate void INVOICE_UDF_HEADRowChangeEventHandler(object sender, INVOICE_UDF_HEADRowChangeEvent e);

        public delegate void UDF_HEADRowChangeEventHandler(object sender, UDF_HEADRowChangeEvent e);

        public delegate void UDF_HEADERRowChangeEventHandler(object sender, UDF_HEADERRowChangeEvent e);

        public delegate void HANDLING_INSTR_HEADRowChangeEventHandler(object sender, HANDLING_INSTR_HEADRowChangeEvent e);

        public delegate void PACK_ID_LINE_ITEMRowChangeEventHandler(object sender, PACK_ID_LINE_ITEMRowChangeEvent e);

        public delegate void EXPORT_NOTES_DETAILRowChangeEventHandler(object sender, EXPORT_NOTES_DETAILRowChangeEvent e);

        public delegate void SHIPPING_INSTR_DETAILRowChangeEventHandler(object sender, SHIPPING_INSTR_DETAILRowChangeEvent e);

        public delegate void PICKING_INSTR_DETAILRowChangeEventHandler(object sender, PICKING_INSTR_DETAILRowChangeEvent e);

        public delegate void DELIVERY_INSTR_DETAILRowChangeEventHandler(object sender, DELIVERY_INSTR_DETAILRowChangeEvent e);

        public delegate void SPECIAL_INSTR_DETAILRowChangeEventHandler(object sender, SPECIAL_INSTR_DETAILRowChangeEvent e);

        public delegate void CUSTOMER_INSTR_DETAILRowChangeEventHandler(object sender, CUSTOMER_INSTR_DETAILRowChangeEvent e);

        public delegate void HANDLING_INSTR_DETAILRowChangeEventHandler(object sender, HANDLING_INSTR_DETAILRowChangeEvent e);

        public delegate void UID_INSTR_DETAILRowChangeEventHandler(object sender, UID_INSTR_DETAILRowChangeEvent e);

        public delegate void CONFIG_INSTR_DETAILRowChangeEventHandler(object sender, CONFIG_INSTR_DETAILRowChangeEvent e);

        public delegate void MAXKIT_DETAILRowChangeEventHandler(object sender, MAXKIT_DETAILRowChangeEvent e);

        public delegate void UDF_DETRowChangeEventHandler(object sender, UDF_DETRowChangeEvent e);

        public delegate void UDF_DETAILRowChangeEventHandler(object sender, UDF_DETAILRowChangeEvent e);

        public delegate void HP_PN_COMPONENTSRowChangeEventHandler(object sender, HP_PN_COMPONENTSRowChangeEvent e);

        public delegate void BOXRowChangeEventHandler(object sender, BOXRowChangeEvent e);

        public delegate void SERIAL_NUMRowChangeEventHandler(object sender, SERIAL_NUMRowChangeEvent e);

        public delegate void UDF_BOXRowChangeEventHandler(object sender, UDF_BOXRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PACK_IDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnWAYBILL_NUMBER;

            private global::System.Data.DataColumn columnMASTER_WAYBILL_NUMBER;

            private global::System.Data.DataColumn columnPACK_ID;

            private global::System.Data.DataColumn columnPACK_ID_CONS;

            private global::System.Data.DataColumn columnSHIP_REF;

            private global::System.Data.DataColumn columnACTUAL_SHIPDATE;

            private global::System.Data.DataColumn columnCURRENT_DATE;

            private global::System.Data.DataColumn columnORDER_DATE_HP_PO;

            private global::System.Data.DataColumn columnINTL_CARRIER;

            private global::System.Data.DataColumn columnREG_CARRIER;

            private global::System.Data.DataColumn columnPREF_GATEWAY;

            private global::System.Data.DataColumn columnSHIP_MODE;

            private global::System.Data.DataColumn columnDUTY_CODE;

            private global::System.Data.DataColumn columnTRANS_SERV_LEVEL;

            private global::System.Data.DataColumn columnSHIP_FROM_ID;

            private global::System.Data.DataColumn columnSHIP_FROM_NAME;

            private global::System.Data.DataColumn columnSHIP_FROM_NAME_2;

            private global::System.Data.DataColumn columnSHIP_FROM_NAME_3;

            private global::System.Data.DataColumn columnSHIP_FROM_STREET;

            private global::System.Data.DataColumn columnSHIP_FROM_STREET_2;

            private global::System.Data.DataColumn columnSHIP_FROM_CITY;

            private global::System.Data.DataColumn columnSHIP_FROM_STATE;

            private global::System.Data.DataColumn columnSHIP_FROM_ZIP;

            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_CODE;

            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_NAME;

            private global::System.Data.DataColumn columnSHIP_FROM_CONTACT;

            private global::System.Data.DataColumn columnSHIP_FROM_TELEPHONE;

            private global::System.Data.DataColumn columnRESELLER_NAME;

            private global::System.Data.DataColumn columnSHIP_TO_ID;

            private global::System.Data.DataColumn columnSHIP_TO_NAME;

            private global::System.Data.DataColumn columnSHIP_TO_NAME_2;

            private global::System.Data.DataColumn columnSHIP_TO_NAME_3;

            private global::System.Data.DataColumn columnSHIP_TO_STREET;

            private global::System.Data.DataColumn columnSHIP_TO_STREET_2;

            private global::System.Data.DataColumn columnSHIP_TO_CITY;

            private global::System.Data.DataColumn columnSHIP_TO_STATE;

            private global::System.Data.DataColumn columnSHIP_TO_ZIP;

            private global::System.Data.DataColumn columnSHIP_TO_COUNTRY_CODE;

            private global::System.Data.DataColumn columnSHIP_TO_COUNTRY_NAME;

            private global::System.Data.DataColumn columnSHIP_TO_CONTACT;

            private global::System.Data.DataColumn columnSHIP_TO_TELEPHONE;

            private global::System.Data.DataColumn columnSOLD_TO_CONTACT;

            private global::System.Data.DataColumn columnSHIP_VIA_ID;

            private global::System.Data.DataColumn columnSHIP_VIA_NAME;

            private global::System.Data.DataColumn columnSHIP_VIA_NAME_2;

            private global::System.Data.DataColumn columnSHIP_VIA_NAME_3;

            private global::System.Data.DataColumn columnSHIP_VIA_STREET;

            private global::System.Data.DataColumn columnSHIP_VIA_STREET_2;

            private global::System.Data.DataColumn columnSHIP_VIA_CITY;

            private global::System.Data.DataColumn columnSHIP_VIA_STATE;

            private global::System.Data.DataColumn columnSHIP_VIA_ZIP;

            private global::System.Data.DataColumn columnSHIP_VIA_COUNTRY_CODE;

            private global::System.Data.DataColumn columnSHIP_VIA_COUNTRY_NAME;

            private global::System.Data.DataColumn columnSHIP_VIA_CONTACT;

            private global::System.Data.DataColumn columnSHIP_VIA_TELEPHONE;

            private global::System.Data.DataColumn columnRETURN_TO_ID;

            private global::System.Data.DataColumn columnRETURN_TO_NAME;

            private global::System.Data.DataColumn columnRETURN_TO_NAME_2;

            private global::System.Data.DataColumn columnRETURN_TO_NAME_3;

            private global::System.Data.DataColumn columnRETURN_TO_STREET;

            private global::System.Data.DataColumn columnRETURN_TO_STREET_2;

            private global::System.Data.DataColumn columnRETURN_TO_CITY;

            private global::System.Data.DataColumn columnRETURN_TO_STATE;

            private global::System.Data.DataColumn columnRETURN_TO_ZIP;

            private global::System.Data.DataColumn columnRETURN_TO_COUNTRY_CODE;

            private global::System.Data.DataColumn columnRETURN_TO_COUNTRY_NAME;

            private global::System.Data.DataColumn columnRETURN_TO_CONTACT;

            private global::System.Data.DataColumn columnRETURN_TO_TELEPHONE;

            private global::System.Data.DataColumn columnHP_SO;

            private global::System.Data.DataColumn columnSHIP_COMPLETE_ID;

            private global::System.Data.DataColumn columnCUST_PO;

            private global::System.Data.DataColumn columnCUST_ORD_REF;

            private global::System.Data.DataColumn columnHAWB_UNIT_QTY;

            private global::System.Data.DataColumn columnPACK_ID_BOX_QTY;

            private global::System.Data.DataColumn columnPACK_ID_UNIT_QTY;

            private global::System.Data.DataColumn columnHAWB_BOX_QTY;

            private global::System.Data.DataColumn columnPACK_ID_PALLET_QTY;

            private global::System.Data.DataColumn columnHAWB_PALLET_QTY;

            private global::System.Data.DataColumn columnPACKID_ACT_WEIGHT;

            private global::System.Data.DataColumn columnHAWB_ACT_WEIGHT;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDDataTable()
            {
                this.TableName = "PACK_ID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACK_IDDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PACK_IDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WAYBILL_NUMBERColumn
            {
                get
                {
                    return this.columnWAYBILL_NUMBER;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_NUMBERColumn
            {
                get
                {
                    return this.columnMASTER_WAYBILL_NUMBER;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_IDColumn
            {
                get
                {
                    return this.columnPACK_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_CONSColumn
            {
                get
                {
                    return this.columnPACK_ID_CONS;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_REFColumn
            {
                get
                {
                    return this.columnSHIP_REF;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTUAL_SHIPDATEColumn
            {
                get
                {
                    return this.columnACTUAL_SHIPDATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURRENT_DATEColumn
            {
                get
                {
                    return this.columnCURRENT_DATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_DATE_HP_POColumn
            {
                get
                {
                    return this.columnORDER_DATE_HP_PO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTL_CARRIERColumn
            {
                get
                {
                    return this.columnINTL_CARRIER;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REG_CARRIERColumn
            {
                get
                {
                    return this.columnREG_CARRIER;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREF_GATEWAYColumn
            {
                get
                {
                    return this.columnPREF_GATEWAY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_MODEColumn
            {
                get
                {
                    return this.columnSHIP_MODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUTY_CODEColumn
            {
                get
                {
                    return this.columnDUTY_CODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_SERV_LEVELColumn
            {
                get
                {
                    return this.columnTRANS_SERV_LEVEL;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_IDColumn
            {
                get
                {
                    return this.columnSHIP_FROM_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_FROM_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_2Column
            {
                get
                {
                    return this.columnSHIP_FROM_NAME_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_3Column
            {
                get
                {
                    return this.columnSHIP_FROM_NAME_3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREETColumn
            {
                get
                {
                    return this.columnSHIP_FROM_STREET;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREET_2Column
            {
                get
                {
                    return this.columnSHIP_FROM_STREET_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CITYColumn
            {
                get
                {
                    return this.columnSHIP_FROM_CITY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STATEColumn
            {
                get
                {
                    return this.columnSHIP_FROM_STATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_ZIPColumn
            {
                get
                {
                    return this.columnSHIP_FROM_ZIP;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_CODEColumn
            {
                get
                {
                    return this.columnSHIP_FROM_COUNTRY_CODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_FROM_COUNTRY_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CONTACTColumn
            {
                get
                {
                    return this.columnSHIP_FROM_CONTACT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_TELEPHONEColumn
            {
                get
                {
                    return this.columnSHIP_FROM_TELEPHONE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESELLER_NAMEColumn
            {
                get
                {
                    return this.columnRESELLER_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_IDColumn
            {
                get
                {
                    return this.columnSHIP_TO_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_TO_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAME_2Column
            {
                get
                {
                    return this.columnSHIP_TO_NAME_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAME_3Column
            {
                get
                {
                    return this.columnSHIP_TO_NAME_3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STREETColumn
            {
                get
                {
                    return this.columnSHIP_TO_STREET;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STREET_2Column
            {
                get
                {
                    return this.columnSHIP_TO_STREET_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_CITYColumn
            {
                get
                {
                    return this.columnSHIP_TO_CITY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STATEColumn
            {
                get
                {
                    return this.columnSHIP_TO_STATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_ZIPColumn
            {
                get
                {
                    return this.columnSHIP_TO_ZIP;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_COUNTRY_CODEColumn
            {
                get
                {
                    return this.columnSHIP_TO_COUNTRY_CODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_COUNTRY_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_TO_COUNTRY_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_CONTACTColumn
            {
                get
                {
                    return this.columnSHIP_TO_CONTACT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_TELEPHONEColumn
            {
                get
                {
                    return this.columnSHIP_TO_TELEPHONE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLD_TO_CONTACTColumn
            {
                get
                {
                    return this.columnSOLD_TO_CONTACT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_IDColumn
            {
                get
                {
                    return this.columnSHIP_VIA_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_VIA_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_NAME_2Column
            {
                get
                {
                    return this.columnSHIP_VIA_NAME_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_NAME_3Column
            {
                get
                {
                    return this.columnSHIP_VIA_NAME_3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_STREETColumn
            {
                get
                {
                    return this.columnSHIP_VIA_STREET;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_STREET_2Column
            {
                get
                {
                    return this.columnSHIP_VIA_STREET_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_CITYColumn
            {
                get
                {
                    return this.columnSHIP_VIA_CITY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_STATEColumn
            {
                get
                {
                    return this.columnSHIP_VIA_STATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_ZIPColumn
            {
                get
                {
                    return this.columnSHIP_VIA_ZIP;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_COUNTRY_CODEColumn
            {
                get
                {
                    return this.columnSHIP_VIA_COUNTRY_CODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_COUNTRY_NAMEColumn
            {
                get
                {
                    return this.columnSHIP_VIA_COUNTRY_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_CONTACTColumn
            {
                get
                {
                    return this.columnSHIP_VIA_CONTACT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_VIA_TELEPHONEColumn
            {
                get
                {
                    return this.columnSHIP_VIA_TELEPHONE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_IDColumn
            {
                get
                {
                    return this.columnRETURN_TO_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_NAMEColumn
            {
                get
                {
                    return this.columnRETURN_TO_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_NAME_2Column
            {
                get
                {
                    return this.columnRETURN_TO_NAME_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_NAME_3Column
            {
                get
                {
                    return this.columnRETURN_TO_NAME_3;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_STREETColumn
            {
                get
                {
                    return this.columnRETURN_TO_STREET;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_STREET_2Column
            {
                get
                {
                    return this.columnRETURN_TO_STREET_2;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_CITYColumn
            {
                get
                {
                    return this.columnRETURN_TO_CITY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_STATEColumn
            {
                get
                {
                    return this.columnRETURN_TO_STATE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_ZIPColumn
            {
                get
                {
                    return this.columnRETURN_TO_ZIP;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_COUNTRY_CODEColumn
            {
                get
                {
                    return this.columnRETURN_TO_COUNTRY_CODE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_COUNTRY_NAMEColumn
            {
                get
                {
                    return this.columnRETURN_TO_COUNTRY_NAME;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_CONTACTColumn
            {
                get
                {
                    return this.columnRETURN_TO_CONTACT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RETURN_TO_TELEPHONEColumn
            {
                get
                {
                    return this.columnRETURN_TO_TELEPHONE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_SOColumn
            {
                get
                {
                    return this.columnHP_SO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_COMPLETE_IDColumn
            {
                get
                {
                    return this.columnSHIP_COMPLETE_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUST_POColumn
            {
                get
                {
                    return this.columnCUST_PO;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUST_ORD_REFColumn
            {
                get
                {
                    return this.columnCUST_ORD_REF;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_UNIT_QTYColumn
            {
                get
                {
                    return this.columnHAWB_UNIT_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_BOX_QTYColumn
            {
                get
                {
                    return this.columnPACK_ID_BOX_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_UNIT_QTYColumn
            {
                get
                {
                    return this.columnPACK_ID_UNIT_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_BOX_QTYColumn
            {
                get
                {
                    return this.columnHAWB_BOX_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_PALLET_QTYColumn
            {
                get
                {
                    return this.columnPACK_ID_PALLET_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_PALLET_QTYColumn
            {
                get
                {
                    return this.columnHAWB_PALLET_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACKID_ACT_WEIGHTColumn
            {
                get
                {
                    return this.columnPACKID_ACT_WEIGHT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_ACT_WEIGHTColumn
            {
                get
                {
                    return this.columnHAWB_ACT_WEIGHT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow this[int index]
            {
                get
                {
                    return ((PACK_IDRow)(this.Rows[index]));
                }
            }

            public event PACK_IDRowChangeEventHandler PACK_IDRowChanging;

            public event PACK_IDRowChangeEventHandler PACK_IDRowChanged;

            public event PACK_IDRowChangeEventHandler PACK_IDRowDeleting;

            public event PACK_IDRowChangeEventHandler PACK_IDRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPACK_IDRow(PACK_IDRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow AddPACK_IDRow(
                        string WAYBILL_NUMBER,
                        string MASTER_WAYBILL_NUMBER,
                        string PACK_ID,
                        string PACK_ID_CONS,
                        string SHIP_REF,
                        string ACTUAL_SHIPDATE,
                        string CURRENT_DATE,
                        System.DateTime ORDER_DATE_HP_PO,
                        string INTL_CARRIER,
                        string REG_CARRIER,
                        string PREF_GATEWAY,
                        string SHIP_MODE,
                        string DUTY_CODE,
                        string TRANS_SERV_LEVEL,
                        string SHIP_FROM_ID,
                        string SHIP_FROM_NAME,
                        string SHIP_FROM_NAME_2,
                        string SHIP_FROM_NAME_3,
                        string SHIP_FROM_STREET,
                        string SHIP_FROM_STREET_2,
                        string SHIP_FROM_CITY,
                        string SHIP_FROM_STATE,
                        string SHIP_FROM_ZIP,
                        string SHIP_FROM_COUNTRY_CODE,
                        string SHIP_FROM_COUNTRY_NAME,
                        string SHIP_FROM_CONTACT,
                        string SHIP_FROM_TELEPHONE,
                        string RESELLER_NAME,
                        string SHIP_TO_ID,
                        string SHIP_TO_NAME,
                        string SHIP_TO_NAME_2,
                        string SHIP_TO_NAME_3,
                        string SHIP_TO_STREET,
                        string SHIP_TO_STREET_2,
                        string SHIP_TO_CITY,
                        string SHIP_TO_STATE,
                        string SHIP_TO_ZIP,
                        string SHIP_TO_COUNTRY_CODE,
                        string SHIP_TO_COUNTRY_NAME,
                        string SHIP_TO_CONTACT,
                        string SHIP_TO_TELEPHONE,
                        string SOLD_TO_CONTACT,
                        string SHIP_VIA_ID,
                        string SHIP_VIA_NAME,
                        string SHIP_VIA_NAME_2,
                        string SHIP_VIA_NAME_3,
                        string SHIP_VIA_STREET,
                        string SHIP_VIA_STREET_2,
                        string SHIP_VIA_CITY,
                        string SHIP_VIA_STATE,
                        string SHIP_VIA_ZIP,
                        string SHIP_VIA_COUNTRY_CODE,
                        string SHIP_VIA_COUNTRY_NAME,
                        string SHIP_VIA_CONTACT,
                        string SHIP_VIA_TELEPHONE,
                        string RETURN_TO_ID,
                        string RETURN_TO_NAME,
                        string RETURN_TO_NAME_2,
                        string RETURN_TO_NAME_3,
                        string RETURN_TO_STREET,
                        string RETURN_TO_STREET_2,
                        string RETURN_TO_CITY,
                        string RETURN_TO_STATE,
                        string RETURN_TO_ZIP,
                        string RETURN_TO_COUNTRY_CODE,
                        string RETURN_TO_COUNTRY_NAME,
                        string RETURN_TO_CONTACT,
                        string RETURN_TO_TELEPHONE,
                        string HP_SO,
                        string SHIP_COMPLETE_ID,
                        string CUST_PO,
                        string CUST_ORD_REF,
                        double HAWB_UNIT_QTY,
                        double PACK_ID_BOX_QTY,
                        double PACK_ID_UNIT_QTY,
                        double HAWB_BOX_QTY,
                        double PACK_ID_PALLET_QTY,
                        double HAWB_PALLET_QTY,
                        double PACKID_ACT_WEIGHT,
                        double HAWB_ACT_WEIGHT)
            {
                PACK_IDRow rowPACK_IDRow = ((PACK_IDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WAYBILL_NUMBER,
                        MASTER_WAYBILL_NUMBER,
                        PACK_ID,
                        PACK_ID_CONS,
                        SHIP_REF,
                        ACTUAL_SHIPDATE,
                        CURRENT_DATE,
                        ORDER_DATE_HP_PO,
                        INTL_CARRIER,
                        REG_CARRIER,
                        PREF_GATEWAY,
                        SHIP_MODE,
                        DUTY_CODE,
                        TRANS_SERV_LEVEL,
                        SHIP_FROM_ID,
                        SHIP_FROM_NAME,
                        SHIP_FROM_NAME_2,
                        SHIP_FROM_NAME_3,
                        SHIP_FROM_STREET,
                        SHIP_FROM_STREET_2,
                        SHIP_FROM_CITY,
                        SHIP_FROM_STATE,
                        SHIP_FROM_ZIP,
                        SHIP_FROM_COUNTRY_CODE,
                        SHIP_FROM_COUNTRY_NAME,
                        SHIP_FROM_CONTACT,
                        SHIP_FROM_TELEPHONE,
                        RESELLER_NAME,
                        SHIP_TO_ID,
                        SHIP_TO_NAME,
                        SHIP_TO_NAME_2,
                        SHIP_TO_NAME_3,
                        SHIP_TO_STREET,
                        SHIP_TO_STREET_2,
                        SHIP_TO_CITY,
                        SHIP_TO_STATE,
                        SHIP_TO_ZIP,
                        SHIP_TO_COUNTRY_CODE,
                        SHIP_TO_COUNTRY_NAME,
                        SHIP_TO_CONTACT,
                        SHIP_TO_TELEPHONE,
                        SOLD_TO_CONTACT,
                        SHIP_VIA_ID,
                        SHIP_VIA_NAME,
                        SHIP_VIA_NAME_2,
                        SHIP_VIA_NAME_3,
                        SHIP_VIA_STREET,
                        SHIP_VIA_STREET_2,
                        SHIP_VIA_CITY,
                        SHIP_VIA_STATE,
                        SHIP_VIA_ZIP,
                        SHIP_VIA_COUNTRY_CODE,
                        SHIP_VIA_COUNTRY_NAME,
                        SHIP_VIA_CONTACT,
                        SHIP_VIA_TELEPHONE,
                        RETURN_TO_ID,
                        RETURN_TO_NAME,
                        RETURN_TO_NAME_2,
                        RETURN_TO_NAME_3,
                        RETURN_TO_STREET,
                        RETURN_TO_STREET_2,
                        RETURN_TO_CITY,
                        RETURN_TO_STATE,
                        RETURN_TO_ZIP,
                        RETURN_TO_COUNTRY_CODE,
                        RETURN_TO_COUNTRY_NAME,
                        RETURN_TO_CONTACT,
                        RETURN_TO_TELEPHONE,
                        HP_SO,
                        SHIP_COMPLETE_ID,
                        CUST_PO,
                        CUST_ORD_REF,
                        HAWB_UNIT_QTY,
                        PACK_ID_BOX_QTY,
                        PACK_ID_UNIT_QTY,
                        HAWB_BOX_QTY,
                        PACK_ID_PALLET_QTY,
                        HAWB_PALLET_QTY,
                        PACKID_ACT_WEIGHT,
                        HAWB_ACT_WEIGHT,
                        null};
                rowPACK_IDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPACK_IDRow);
                return rowPACK_IDRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                PACK_IDDataTable cln = ((PACK_IDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new PACK_IDDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnWAYBILL_NUMBER = base.Columns["WAYBILL_NUMBER"];
                this.columnMASTER_WAYBILL_NUMBER = base.Columns["MASTER_WAYBILL_NUMBER"];
                this.columnPACK_ID = base.Columns["PACK_ID"];
                this.columnPACK_ID_CONS = base.Columns["PACK_ID_CONS"];
                this.columnSHIP_REF = base.Columns["SHIP_REF"];
                this.columnACTUAL_SHIPDATE = base.Columns["ACTUAL_SHIPDATE"];
                this.columnCURRENT_DATE = base.Columns["CURRENT_DATE"];
                this.columnORDER_DATE_HP_PO = base.Columns["ORDER_DATE_HP_PO"];
                this.columnINTL_CARRIER = base.Columns["INTL_CARRIER"];
                this.columnREG_CARRIER = base.Columns["REG_CARRIER"];
                this.columnPREF_GATEWAY = base.Columns["PREF_GATEWAY"];
                this.columnSHIP_MODE = base.Columns["SHIP_MODE"];
                this.columnDUTY_CODE = base.Columns["DUTY_CODE"];
                this.columnTRANS_SERV_LEVEL = base.Columns["TRANS_SERV_LEVEL"];
                this.columnSHIP_FROM_ID = base.Columns["SHIP_FROM_ID"];
                this.columnSHIP_FROM_NAME = base.Columns["SHIP_FROM_NAME"];
                this.columnSHIP_FROM_NAME_2 = base.Columns["SHIP_FROM_NAME_2"];
                this.columnSHIP_FROM_NAME_3 = base.Columns["SHIP_FROM_NAME_3"];
                this.columnSHIP_FROM_STREET = base.Columns["SHIP_FROM_STREET"];
                this.columnSHIP_FROM_STREET_2 = base.Columns["SHIP_FROM_STREET_2"];
                this.columnSHIP_FROM_CITY = base.Columns["SHIP_FROM_CITY"];
                this.columnSHIP_FROM_STATE = base.Columns["SHIP_FROM_STATE"];
                this.columnSHIP_FROM_ZIP = base.Columns["SHIP_FROM_ZIP"];
                this.columnSHIP_FROM_COUNTRY_CODE = base.Columns["SHIP_FROM_COUNTRY_CODE"];
                this.columnSHIP_FROM_COUNTRY_NAME = base.Columns["SHIP_FROM_COUNTRY_NAME"];
                this.columnSHIP_FROM_CONTACT = base.Columns["SHIP_FROM_CONTACT"];
                this.columnSHIP_FROM_TELEPHONE = base.Columns["SHIP_FROM_TELEPHONE"];
                this.columnRESELLER_NAME = base.Columns["RESELLER_NAME"];
                this.columnSHIP_TO_ID = base.Columns["SHIP_TO_ID"];
                this.columnSHIP_TO_NAME = base.Columns["SHIP_TO_NAME"];
                this.columnSHIP_TO_NAME_2 = base.Columns["SHIP_TO_NAME_2"];
                this.columnSHIP_TO_NAME_3 = base.Columns["SHIP_TO_NAME_3"];
                this.columnSHIP_TO_STREET = base.Columns["SHIP_TO_STREET"];
                this.columnSHIP_TO_STREET_2 = base.Columns["SHIP_TO_STREET_2"];
                this.columnSHIP_TO_CITY = base.Columns["SHIP_TO_CITY"];
                this.columnSHIP_TO_STATE = base.Columns["SHIP_TO_STATE"];
                this.columnSHIP_TO_ZIP = base.Columns["SHIP_TO_ZIP"];
                this.columnSHIP_TO_COUNTRY_CODE = base.Columns["SHIP_TO_COUNTRY_CODE"];
                this.columnSHIP_TO_COUNTRY_NAME = base.Columns["SHIP_TO_COUNTRY_NAME"];
                this.columnSHIP_TO_CONTACT = base.Columns["SHIP_TO_CONTACT"];
                this.columnSHIP_TO_TELEPHONE = base.Columns["SHIP_TO_TELEPHONE"];
                this.columnSOLD_TO_CONTACT = base.Columns["SOLD_TO_CONTACT"];
                this.columnSHIP_VIA_ID = base.Columns["SHIP_VIA_ID"];
                this.columnSHIP_VIA_NAME = base.Columns["SHIP_VIA_NAME"];
                this.columnSHIP_VIA_NAME_2 = base.Columns["SHIP_VIA_NAME_2"];
                this.columnSHIP_VIA_NAME_3 = base.Columns["SHIP_VIA_NAME_3"];
                this.columnSHIP_VIA_STREET = base.Columns["SHIP_VIA_STREET"];
                this.columnSHIP_VIA_STREET_2 = base.Columns["SHIP_VIA_STREET_2"];
                this.columnSHIP_VIA_CITY = base.Columns["SHIP_VIA_CITY"];
                this.columnSHIP_VIA_STATE = base.Columns["SHIP_VIA_STATE"];
                this.columnSHIP_VIA_ZIP = base.Columns["SHIP_VIA_ZIP"];
                this.columnSHIP_VIA_COUNTRY_CODE = base.Columns["SHIP_VIA_COUNTRY_CODE"];
                this.columnSHIP_VIA_COUNTRY_NAME = base.Columns["SHIP_VIA_COUNTRY_NAME"];
                this.columnSHIP_VIA_CONTACT = base.Columns["SHIP_VIA_CONTACT"];
                this.columnSHIP_VIA_TELEPHONE = base.Columns["SHIP_VIA_TELEPHONE"];
                this.columnRETURN_TO_ID = base.Columns["RETURN_TO_ID"];
                this.columnRETURN_TO_NAME = base.Columns["RETURN_TO_NAME"];
                this.columnRETURN_TO_NAME_2 = base.Columns["RETURN_TO_NAME_2"];
                this.columnRETURN_TO_NAME_3 = base.Columns["RETURN_TO_NAME_3"];
                this.columnRETURN_TO_STREET = base.Columns["RETURN_TO_STREET"];
                this.columnRETURN_TO_STREET_2 = base.Columns["RETURN_TO_STREET_2"];
                this.columnRETURN_TO_CITY = base.Columns["RETURN_TO_CITY"];
                this.columnRETURN_TO_STATE = base.Columns["RETURN_TO_STATE"];
                this.columnRETURN_TO_ZIP = base.Columns["RETURN_TO_ZIP"];
                this.columnRETURN_TO_COUNTRY_CODE = base.Columns["RETURN_TO_COUNTRY_CODE"];
                this.columnRETURN_TO_COUNTRY_NAME = base.Columns["RETURN_TO_COUNTRY_NAME"];
                this.columnRETURN_TO_CONTACT = base.Columns["RETURN_TO_CONTACT"];
                this.columnRETURN_TO_TELEPHONE = base.Columns["RETURN_TO_TELEPHONE"];
                this.columnHP_SO = base.Columns["HP_SO"];
                this.columnSHIP_COMPLETE_ID = base.Columns["SHIP_COMPLETE_ID"];
                this.columnCUST_PO = base.Columns["CUST_PO"];
                this.columnCUST_ORD_REF = base.Columns["CUST_ORD_REF"];
                this.columnHAWB_UNIT_QTY = base.Columns["HAWB_UNIT_QTY"];
                this.columnPACK_ID_BOX_QTY = base.Columns["PACK_ID_BOX_QTY"];
                this.columnPACK_ID_UNIT_QTY = base.Columns["PACK_ID_UNIT_QTY"];
                this.columnHAWB_BOX_QTY = base.Columns["HAWB_BOX_QTY"];
                this.columnPACK_ID_PALLET_QTY = base.Columns["PACK_ID_PALLET_QTY"];
                this.columnHAWB_PALLET_QTY = base.Columns["HAWB_PALLET_QTY"];
                this.columnPACKID_ACT_WEIGHT = base.Columns["PACKID_ACT_WEIGHT"];
                this.columnHAWB_ACT_WEIGHT = base.Columns["HAWB_ACT_WEIGHT"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnWAYBILL_NUMBER = new global::System.Data.DataColumn("WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAYBILL_NUMBER);
                this.columnMASTER_WAYBILL_NUMBER = new global::System.Data.DataColumn("MASTER_WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_NUMBER);
                this.columnPACK_ID = new global::System.Data.DataColumn("PACK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID);
                this.columnPACK_ID_CONS = new global::System.Data.DataColumn("PACK_ID_CONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_CONS);
                this.columnSHIP_REF = new global::System.Data.DataColumn("SHIP_REF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_REF);
                this.columnACTUAL_SHIPDATE = new global::System.Data.DataColumn("ACTUAL_SHIPDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTUAL_SHIPDATE);
                this.columnCURRENT_DATE = new global::System.Data.DataColumn("CURRENT_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENT_DATE);
                this.columnORDER_DATE_HP_PO = new global::System.Data.DataColumn("ORDER_DATE_HP_PO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_DATE_HP_PO);
                this.columnINTL_CARRIER = new global::System.Data.DataColumn("INTL_CARRIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTL_CARRIER);
                this.columnREG_CARRIER = new global::System.Data.DataColumn("REG_CARRIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_CARRIER);
                this.columnPREF_GATEWAY = new global::System.Data.DataColumn("PREF_GATEWAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREF_GATEWAY);
                this.columnSHIP_MODE = new global::System.Data.DataColumn("SHIP_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_MODE);
                this.columnDUTY_CODE = new global::System.Data.DataColumn("DUTY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUTY_CODE);
                this.columnTRANS_SERV_LEVEL = new global::System.Data.DataColumn("TRANS_SERV_LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_SERV_LEVEL);
                this.columnSHIP_FROM_ID = new global::System.Data.DataColumn("SHIP_FROM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ID);
                this.columnSHIP_FROM_NAME = new global::System.Data.DataColumn("SHIP_FROM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME);
                this.columnSHIP_FROM_NAME_2 = new global::System.Data.DataColumn("SHIP_FROM_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_2);
                this.columnSHIP_FROM_NAME_3 = new global::System.Data.DataColumn("SHIP_FROM_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_3);
                this.columnSHIP_FROM_STREET = new global::System.Data.DataColumn("SHIP_FROM_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET);
                this.columnSHIP_FROM_STREET_2 = new global::System.Data.DataColumn("SHIP_FROM_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET_2);
                this.columnSHIP_FROM_CITY = new global::System.Data.DataColumn("SHIP_FROM_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CITY);
                this.columnSHIP_FROM_STATE = new global::System.Data.DataColumn("SHIP_FROM_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STATE);
                this.columnSHIP_FROM_ZIP = new global::System.Data.DataColumn("SHIP_FROM_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ZIP);
                this.columnSHIP_FROM_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_CODE);
                this.columnSHIP_FROM_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_NAME);
                this.columnSHIP_FROM_CONTACT = new global::System.Data.DataColumn("SHIP_FROM_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CONTACT);
                this.columnSHIP_FROM_TELEPHONE = new global::System.Data.DataColumn("SHIP_FROM_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_TELEPHONE);
                this.columnRESELLER_NAME = new global::System.Data.DataColumn("RESELLER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESELLER_NAME);
                this.columnSHIP_TO_ID = new global::System.Data.DataColumn("SHIP_TO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_ID);
                this.columnSHIP_TO_NAME = new global::System.Data.DataColumn("SHIP_TO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME);
                this.columnSHIP_TO_NAME_2 = new global::System.Data.DataColumn("SHIP_TO_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME_2);
                this.columnSHIP_TO_NAME_3 = new global::System.Data.DataColumn("SHIP_TO_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME_3);
                this.columnSHIP_TO_STREET = new global::System.Data.DataColumn("SHIP_TO_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STREET);
                this.columnSHIP_TO_STREET_2 = new global::System.Data.DataColumn("SHIP_TO_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STREET_2);
                this.columnSHIP_TO_CITY = new global::System.Data.DataColumn("SHIP_TO_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_CITY);
                this.columnSHIP_TO_STATE = new global::System.Data.DataColumn("SHIP_TO_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STATE);
                this.columnSHIP_TO_ZIP = new global::System.Data.DataColumn("SHIP_TO_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_ZIP);
                this.columnSHIP_TO_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_TO_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_COUNTRY_CODE);
                this.columnSHIP_TO_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_TO_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_COUNTRY_NAME);
                this.columnSHIP_TO_CONTACT = new global::System.Data.DataColumn("SHIP_TO_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_CONTACT);
                this.columnSHIP_TO_TELEPHONE = new global::System.Data.DataColumn("SHIP_TO_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_TELEPHONE);
                this.columnSOLD_TO_CONTACT = new global::System.Data.DataColumn("SOLD_TO_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLD_TO_CONTACT);
                this.columnSHIP_VIA_ID = new global::System.Data.DataColumn("SHIP_VIA_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_ID);
                this.columnSHIP_VIA_NAME = new global::System.Data.DataColumn("SHIP_VIA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_NAME);
                this.columnSHIP_VIA_NAME_2 = new global::System.Data.DataColumn("SHIP_VIA_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_NAME_2);
                this.columnSHIP_VIA_NAME_3 = new global::System.Data.DataColumn("SHIP_VIA_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_NAME_3);
                this.columnSHIP_VIA_STREET = new global::System.Data.DataColumn("SHIP_VIA_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_STREET);
                this.columnSHIP_VIA_STREET_2 = new global::System.Data.DataColumn("SHIP_VIA_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_STREET_2);
                this.columnSHIP_VIA_CITY = new global::System.Data.DataColumn("SHIP_VIA_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_CITY);
                this.columnSHIP_VIA_STATE = new global::System.Data.DataColumn("SHIP_VIA_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_STATE);
                this.columnSHIP_VIA_ZIP = new global::System.Data.DataColumn("SHIP_VIA_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_ZIP);
                this.columnSHIP_VIA_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_VIA_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_COUNTRY_CODE);
                this.columnSHIP_VIA_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_VIA_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_COUNTRY_NAME);
                this.columnSHIP_VIA_CONTACT = new global::System.Data.DataColumn("SHIP_VIA_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_CONTACT);
                this.columnSHIP_VIA_TELEPHONE = new global::System.Data.DataColumn("SHIP_VIA_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_VIA_TELEPHONE);
                this.columnRETURN_TO_ID = new global::System.Data.DataColumn("RETURN_TO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_ID);
                this.columnRETURN_TO_NAME = new global::System.Data.DataColumn("RETURN_TO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_NAME);
                this.columnRETURN_TO_NAME_2 = new global::System.Data.DataColumn("RETURN_TO_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_NAME_2);
                this.columnRETURN_TO_NAME_3 = new global::System.Data.DataColumn("RETURN_TO_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_NAME_3);
                this.columnRETURN_TO_STREET = new global::System.Data.DataColumn("RETURN_TO_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_STREET);
                this.columnRETURN_TO_STREET_2 = new global::System.Data.DataColumn("RETURN_TO_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_STREET_2);
                this.columnRETURN_TO_CITY = new global::System.Data.DataColumn("RETURN_TO_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_CITY);
                this.columnRETURN_TO_STATE = new global::System.Data.DataColumn("RETURN_TO_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_STATE);
                this.columnRETURN_TO_ZIP = new global::System.Data.DataColumn("RETURN_TO_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_ZIP);
                this.columnRETURN_TO_COUNTRY_CODE = new global::System.Data.DataColumn("RETURN_TO_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_COUNTRY_CODE);
                this.columnRETURN_TO_COUNTRY_NAME = new global::System.Data.DataColumn("RETURN_TO_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_COUNTRY_NAME);
                this.columnRETURN_TO_CONTACT = new global::System.Data.DataColumn("RETURN_TO_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_CONTACT);
                this.columnRETURN_TO_TELEPHONE = new global::System.Data.DataColumn("RETURN_TO_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_TO_TELEPHONE);
                this.columnHP_SO = new global::System.Data.DataColumn("HP_SO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_SO);
                this.columnSHIP_COMPLETE_ID = new global::System.Data.DataColumn("SHIP_COMPLETE_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_COMPLETE_ID);
                this.columnCUST_PO = new global::System.Data.DataColumn("CUST_PO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST_PO);
                this.columnCUST_ORD_REF = new global::System.Data.DataColumn("CUST_ORD_REF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUST_ORD_REF);
                this.columnHAWB_UNIT_QTY = new global::System.Data.DataColumn("HAWB_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_UNIT_QTY);
                this.columnPACK_ID_BOX_QTY = new global::System.Data.DataColumn("PACK_ID_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_BOX_QTY);
                this.columnPACK_ID_UNIT_QTY = new global::System.Data.DataColumn("PACK_ID_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_UNIT_QTY);
                this.columnHAWB_BOX_QTY = new global::System.Data.DataColumn("HAWB_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_BOX_QTY);
                this.columnPACK_ID_PALLET_QTY = new global::System.Data.DataColumn("PACK_ID_PALLET_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_PALLET_QTY);
                this.columnHAWB_PALLET_QTY = new global::System.Data.DataColumn("HAWB_PALLET_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_PALLET_QTY);
                this.columnPACKID_ACT_WEIGHT = new global::System.Data.DataColumn("PACKID_ACT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACKID_ACT_WEIGHT);
                this.columnHAWB_ACT_WEIGHT = new global::System.Data.DataColumn("HAWB_ACT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_ACT_WEIGHT);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPACK_ID_Id}, true));
                this.columnWAYBILL_NUMBER.AllowDBNull = false;
                this.columnMASTER_WAYBILL_NUMBER.AllowDBNull = false;
                this.columnPACK_ID.AllowDBNull = false;
                this.columnPACK_ID_CONS.AllowDBNull = false;
                this.columnSHIP_REF.AllowDBNull = false;
                this.columnACTUAL_SHIPDATE.AllowDBNull = false;
                this.columnCURRENT_DATE.AllowDBNull = false;
                this.columnORDER_DATE_HP_PO.AllowDBNull = false;
                this.columnINTL_CARRIER.AllowDBNull = false;
                this.columnREG_CARRIER.AllowDBNull = false;
                this.columnPREF_GATEWAY.AllowDBNull = false;
                this.columnSHIP_MODE.AllowDBNull = false;
                this.columnDUTY_CODE.AllowDBNull = false;
                this.columnTRANS_SERV_LEVEL.AllowDBNull = false;
                this.columnSHIP_FROM_ID.AllowDBNull = false;
                this.columnSHIP_FROM_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_2.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_3.AllowDBNull = false;
                this.columnSHIP_FROM_STREET.AllowDBNull = false;
                this.columnSHIP_FROM_STREET_2.AllowDBNull = false;
                this.columnSHIP_FROM_CITY.AllowDBNull = false;
                this.columnSHIP_FROM_STATE.AllowDBNull = false;
                this.columnSHIP_FROM_ZIP.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_CONTACT.AllowDBNull = false;
                this.columnSHIP_FROM_TELEPHONE.AllowDBNull = false;
                this.columnRESELLER_NAME.AllowDBNull = false;
                this.columnSHIP_TO_ID.AllowDBNull = false;
                this.columnSHIP_TO_NAME.AllowDBNull = false;
                this.columnSHIP_TO_NAME_2.AllowDBNull = false;
                this.columnSHIP_TO_NAME_3.AllowDBNull = false;
                this.columnSHIP_TO_STREET.AllowDBNull = false;
                this.columnSHIP_TO_STREET_2.AllowDBNull = false;
                this.columnSHIP_TO_CITY.AllowDBNull = false;
                this.columnSHIP_TO_STATE.AllowDBNull = false;
                this.columnSHIP_TO_ZIP.AllowDBNull = false;
                this.columnSHIP_TO_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_TO_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_TO_CONTACT.AllowDBNull = false;
                this.columnSHIP_TO_TELEPHONE.AllowDBNull = false;
                this.columnSOLD_TO_CONTACT.AllowDBNull = false;
                this.columnSHIP_VIA_ID.AllowDBNull = false;
                this.columnSHIP_VIA_NAME.AllowDBNull = false;
                this.columnSHIP_VIA_NAME_2.AllowDBNull = false;
                this.columnSHIP_VIA_NAME_3.AllowDBNull = false;
                this.columnSHIP_VIA_STREET.AllowDBNull = false;
                this.columnSHIP_VIA_STREET_2.AllowDBNull = false;
                this.columnSHIP_VIA_CITY.AllowDBNull = false;
                this.columnSHIP_VIA_STATE.AllowDBNull = false;
                this.columnSHIP_VIA_ZIP.AllowDBNull = false;
                this.columnSHIP_VIA_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_VIA_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_VIA_CONTACT.AllowDBNull = false;
                this.columnSHIP_VIA_TELEPHONE.AllowDBNull = false;
                this.columnRETURN_TO_ID.AllowDBNull = false;
                this.columnRETURN_TO_NAME.AllowDBNull = false;
                this.columnRETURN_TO_NAME_2.AllowDBNull = false;
                this.columnRETURN_TO_NAME_3.AllowDBNull = false;
                this.columnRETURN_TO_STREET.AllowDBNull = false;
                this.columnRETURN_TO_STREET_2.AllowDBNull = false;
                this.columnRETURN_TO_CITY.AllowDBNull = false;
                this.columnRETURN_TO_STATE.AllowDBNull = false;
                this.columnRETURN_TO_ZIP.AllowDBNull = false;
                this.columnRETURN_TO_COUNTRY_CODE.AllowDBNull = false;
                this.columnRETURN_TO_COUNTRY_NAME.AllowDBNull = false;
                this.columnRETURN_TO_CONTACT.AllowDBNull = false;
                this.columnRETURN_TO_TELEPHONE.AllowDBNull = false;
                this.columnHP_SO.AllowDBNull = false;
                this.columnSHIP_COMPLETE_ID.AllowDBNull = false;
                this.columnCUST_PO.AllowDBNull = false;
                this.columnCUST_ORD_REF.AllowDBNull = false;
                this.columnHAWB_UNIT_QTY.AllowDBNull = false;
                this.columnPACK_ID_BOX_QTY.AllowDBNull = false;
                this.columnPACK_ID_UNIT_QTY.AllowDBNull = false;
                this.columnHAWB_BOX_QTY.AllowDBNull = false;
                this.columnPACK_ID_PALLET_QTY.AllowDBNull = false;
                this.columnHAWB_PALLET_QTY.AllowDBNull = false;
                this.columnPACKID_ACT_WEIGHT.AllowDBNull = false;
                this.columnHAWB_ACT_WEIGHT.AllowDBNull = false;
                this.columnPACK_ID_Id.AutoIncrement = true;
                this.columnPACK_ID_Id.AllowDBNull = false;
                this.columnPACK_ID_Id.Unique = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow NewPACK_IDRow()
            {
                return ((PACK_IDRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new PACK_IDRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(PACK_IDRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.PACK_IDRowChanged != null))
                {
                    this.PACK_IDRowChanged(this, new PACK_IDRowChangeEvent(((PACK_IDRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.PACK_IDRowChanging != null))
                {
                    this.PACK_IDRowChanging(this, new PACK_IDRowChangeEvent(((PACK_IDRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.PACK_IDRowDeleted != null))
                {
                    this.PACK_IDRowDeleted(this, new PACK_IDRowChangeEvent(((PACK_IDRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.PACK_IDRowDeleting != null))
                {
                    this.PACK_IDRowDeleting(this, new PACK_IDRowChangeEvent(((PACK_IDRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePACK_IDRow(PACK_IDRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PACK_IDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXPORT_NOTES_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnEXPORT_NOTES_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADDataTable()
            {
                this.TableName = "EXPORT_NOTES_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXPORT_NOTES_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXPORT_NOTES_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPORT_NOTES_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnEXPORT_NOTES_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRow this[int index]
            {
                get
                {
                    return ((EXPORT_NOTES_HEADRow)(this.Rows[index]));
                }
            }

            public event EXPORT_NOTES_HEADRowChangeEventHandler EXPORT_NOTES_HEADRowChanging;

            public event EXPORT_NOTES_HEADRowChangeEventHandler EXPORT_NOTES_HEADRowChanged;

            public event EXPORT_NOTES_HEADRowChangeEventHandler EXPORT_NOTES_HEADRowDeleting;

            public event EXPORT_NOTES_HEADRowChangeEventHandler EXPORT_NOTES_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXPORT_NOTES_HEADRow(EXPORT_NOTES_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRow AddEXPORT_NOTES_HEADRow(string EXPORT_NOTES_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_EXPORT_NOTES_HEAD)
            {
                EXPORT_NOTES_HEADRow rowEXPORT_NOTES_HEADRow = ((EXPORT_NOTES_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXPORT_NOTES_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_EXPORT_NOTES_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_EXPORT_NOTES_HEAD[80];
                }
                rowEXPORT_NOTES_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXPORT_NOTES_HEADRow);
                return rowEXPORT_NOTES_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                EXPORT_NOTES_HEADDataTable cln = ((EXPORT_NOTES_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new EXPORT_NOTES_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnEXPORT_NOTES_HEAD_Column = base.Columns["EXPORT_NOTES_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnEXPORT_NOTES_HEAD_Column = new global::System.Data.DataColumn("EXPORT_NOTES_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnEXPORT_NOTES_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRow NewEXPORT_NOTES_HEADRow()
            {
                return ((EXPORT_NOTES_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new EXPORT_NOTES_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(EXPORT_NOTES_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.EXPORT_NOTES_HEADRowChanged != null))
                {
                    this.EXPORT_NOTES_HEADRowChanged(this, new EXPORT_NOTES_HEADRowChangeEvent(((EXPORT_NOTES_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.EXPORT_NOTES_HEADRowChanging != null))
                {
                    this.EXPORT_NOTES_HEADRowChanging(this, new EXPORT_NOTES_HEADRowChangeEvent(((EXPORT_NOTES_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.EXPORT_NOTES_HEADRowDeleted != null))
                {
                    this.EXPORT_NOTES_HEADRowDeleted(this, new EXPORT_NOTES_HEADRowChangeEvent(((EXPORT_NOTES_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.EXPORT_NOTES_HEADRowDeleting != null))
                {
                    this.EXPORT_NOTES_HEADRowDeleting(this, new EXPORT_NOTES_HEADRowChangeEvent(((EXPORT_NOTES_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXPORT_NOTES_HEADRow(EXPORT_NOTES_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXPORT_NOTES_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHIPPING_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSHIPPING_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADDataTable()
            {
                this.TableName = "SHIPPING_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIPPING_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SHIPPING_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPPING_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnSHIPPING_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((SHIPPING_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event SHIPPING_INSTR_HEADRowChangeEventHandler SHIPPING_INSTR_HEADRowChanging;

            public event SHIPPING_INSTR_HEADRowChangeEventHandler SHIPPING_INSTR_HEADRowChanged;

            public event SHIPPING_INSTR_HEADRowChangeEventHandler SHIPPING_INSTR_HEADRowDeleting;

            public event SHIPPING_INSTR_HEADRowChangeEventHandler SHIPPING_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSHIPPING_INSTR_HEADRow(SHIPPING_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRow AddSHIPPING_INSTR_HEADRow(string SHIPPING_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_SHIPPING_INSTR_HEAD)
            {
                SHIPPING_INSTR_HEADRow rowSHIPPING_INSTR_HEADRow = ((SHIPPING_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SHIPPING_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_SHIPPING_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_SHIPPING_INSTR_HEAD[80];
                }
                rowSHIPPING_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHIPPING_INSTR_HEADRow);
                return rowSHIPPING_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                SHIPPING_INSTR_HEADDataTable cln = ((SHIPPING_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SHIPPING_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSHIPPING_INSTR_HEAD_Column = base.Columns["SHIPPING_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSHIPPING_INSTR_HEAD_Column = new global::System.Data.DataColumn("SHIPPING_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSHIPPING_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRow NewSHIPPING_INSTR_HEADRow()
            {
                return ((SHIPPING_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SHIPPING_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(SHIPPING_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SHIPPING_INSTR_HEADRowChanged != null))
                {
                    this.SHIPPING_INSTR_HEADRowChanged(this, new SHIPPING_INSTR_HEADRowChangeEvent(((SHIPPING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SHIPPING_INSTR_HEADRowChanging != null))
                {
                    this.SHIPPING_INSTR_HEADRowChanging(this, new SHIPPING_INSTR_HEADRowChangeEvent(((SHIPPING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SHIPPING_INSTR_HEADRowDeleted != null))
                {
                    this.SHIPPING_INSTR_HEADRowDeleted(this, new SHIPPING_INSTR_HEADRowChangeEvent(((SHIPPING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SHIPPING_INSTR_HEADRowDeleting != null))
                {
                    this.SHIPPING_INSTR_HEADRowDeleting(this, new SHIPPING_INSTR_HEADRowChangeEvent(((SHIPPING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSHIPPING_INSTR_HEADRow(SHIPPING_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHIPPING_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PICKING_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnPICKING_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADDataTable()
            {
                this.TableName = "PICKING_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PICKING_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PICKING_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICKING_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnPICKING_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((PICKING_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event PICKING_INSTR_HEADRowChangeEventHandler PICKING_INSTR_HEADRowChanging;

            public event PICKING_INSTR_HEADRowChangeEventHandler PICKING_INSTR_HEADRowChanged;

            public event PICKING_INSTR_HEADRowChangeEventHandler PICKING_INSTR_HEADRowDeleting;

            public event PICKING_INSTR_HEADRowChangeEventHandler PICKING_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPICKING_INSTR_HEADRow(PICKING_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRow AddPICKING_INSTR_HEADRow(string PICKING_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_PICKING_INSTR_HEAD)
            {
                PICKING_INSTR_HEADRow rowPICKING_INSTR_HEADRow = ((PICKING_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PICKING_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_PICKING_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_PICKING_INSTR_HEAD[80];
                }
                rowPICKING_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPICKING_INSTR_HEADRow);
                return rowPICKING_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                PICKING_INSTR_HEADDataTable cln = ((PICKING_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new PICKING_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnPICKING_INSTR_HEAD_Column = base.Columns["PICKING_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnPICKING_INSTR_HEAD_Column = new global::System.Data.DataColumn("PICKING_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnPICKING_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRow NewPICKING_INSTR_HEADRow()
            {
                return ((PICKING_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new PICKING_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(PICKING_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.PICKING_INSTR_HEADRowChanged != null))
                {
                    this.PICKING_INSTR_HEADRowChanged(this, new PICKING_INSTR_HEADRowChangeEvent(((PICKING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.PICKING_INSTR_HEADRowChanging != null))
                {
                    this.PICKING_INSTR_HEADRowChanging(this, new PICKING_INSTR_HEADRowChangeEvent(((PICKING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.PICKING_INSTR_HEADRowDeleted != null))
                {
                    this.PICKING_INSTR_HEADRowDeleted(this, new PICKING_INSTR_HEADRowChangeEvent(((PICKING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.PICKING_INSTR_HEADRowDeleting != null))
                {
                    this.PICKING_INSTR_HEADRowDeleting(this, new PICKING_INSTR_HEADRowChangeEvent(((PICKING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePICKING_INSTR_HEADRow(PICKING_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PICKING_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DELIVERY_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnDELIVERY_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADDataTable()
            {
                this.TableName = "DELIVERY_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DELIVERY_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DELIVERY_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVERY_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnDELIVERY_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((DELIVERY_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event DELIVERY_INSTR_HEADRowChangeEventHandler DELIVERY_INSTR_HEADRowChanging;

            public event DELIVERY_INSTR_HEADRowChangeEventHandler DELIVERY_INSTR_HEADRowChanged;

            public event DELIVERY_INSTR_HEADRowChangeEventHandler DELIVERY_INSTR_HEADRowDeleting;

            public event DELIVERY_INSTR_HEADRowChangeEventHandler DELIVERY_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDELIVERY_INSTR_HEADRow(DELIVERY_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRow AddDELIVERY_INSTR_HEADRow(string DELIVERY_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_DELIVERY_INSTR_HEAD)
            {
                DELIVERY_INSTR_HEADRow rowDELIVERY_INSTR_HEADRow = ((DELIVERY_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DELIVERY_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_DELIVERY_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_DELIVERY_INSTR_HEAD[80];
                }
                rowDELIVERY_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDELIVERY_INSTR_HEADRow);
                return rowDELIVERY_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                DELIVERY_INSTR_HEADDataTable cln = ((DELIVERY_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new DELIVERY_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnDELIVERY_INSTR_HEAD_Column = base.Columns["DELIVERY_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnDELIVERY_INSTR_HEAD_Column = new global::System.Data.DataColumn("DELIVERY_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnDELIVERY_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRow NewDELIVERY_INSTR_HEADRow()
            {
                return ((DELIVERY_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new DELIVERY_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(DELIVERY_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.DELIVERY_INSTR_HEADRowChanged != null))
                {
                    this.DELIVERY_INSTR_HEADRowChanged(this, new DELIVERY_INSTR_HEADRowChangeEvent(((DELIVERY_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.DELIVERY_INSTR_HEADRowChanging != null))
                {
                    this.DELIVERY_INSTR_HEADRowChanging(this, new DELIVERY_INSTR_HEADRowChangeEvent(((DELIVERY_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.DELIVERY_INSTR_HEADRowDeleted != null))
                {
                    this.DELIVERY_INSTR_HEADRowDeleted(this, new DELIVERY_INSTR_HEADRowChangeEvent(((DELIVERY_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.DELIVERY_INSTR_HEADRowDeleting != null))
                {
                    this.DELIVERY_INSTR_HEADRowDeleting(this, new DELIVERY_INSTR_HEADRowChangeEvent(((DELIVERY_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDELIVERY_INSTR_HEADRow(DELIVERY_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DELIVERY_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPECIAL_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSPECIAL_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADDataTable()
            {
                this.TableName = "SPECIAL_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIAL_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SPECIAL_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIAL_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnSPECIAL_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((SPECIAL_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event SPECIAL_INSTR_HEADRowChangeEventHandler SPECIAL_INSTR_HEADRowChanging;

            public event SPECIAL_INSTR_HEADRowChangeEventHandler SPECIAL_INSTR_HEADRowChanged;

            public event SPECIAL_INSTR_HEADRowChangeEventHandler SPECIAL_INSTR_HEADRowDeleting;

            public event SPECIAL_INSTR_HEADRowChangeEventHandler SPECIAL_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSPECIAL_INSTR_HEADRow(SPECIAL_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRow AddSPECIAL_INSTR_HEADRow(string SPECIAL_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_SPECIAL_INSTR_HEAD)
            {
                SPECIAL_INSTR_HEADRow rowSPECIAL_INSTR_HEADRow = ((SPECIAL_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPECIAL_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_SPECIAL_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_SPECIAL_INSTR_HEAD[80];
                }
                rowSPECIAL_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPECIAL_INSTR_HEADRow);
                return rowSPECIAL_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                SPECIAL_INSTR_HEADDataTable cln = ((SPECIAL_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SPECIAL_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSPECIAL_INSTR_HEAD_Column = base.Columns["SPECIAL_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSPECIAL_INSTR_HEAD_Column = new global::System.Data.DataColumn("SPECIAL_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSPECIAL_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRow NewSPECIAL_INSTR_HEADRow()
            {
                return ((SPECIAL_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SPECIAL_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(SPECIAL_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SPECIAL_INSTR_HEADRowChanged != null))
                {
                    this.SPECIAL_INSTR_HEADRowChanged(this, new SPECIAL_INSTR_HEADRowChangeEvent(((SPECIAL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SPECIAL_INSTR_HEADRowChanging != null))
                {
                    this.SPECIAL_INSTR_HEADRowChanging(this, new SPECIAL_INSTR_HEADRowChangeEvent(((SPECIAL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SPECIAL_INSTR_HEADRowDeleted != null))
                {
                    this.SPECIAL_INSTR_HEADRowDeleted(this, new SPECIAL_INSTR_HEADRowChangeEvent(((SPECIAL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SPECIAL_INSTR_HEADRowDeleting != null))
                {
                    this.SPECIAL_INSTR_HEADRowDeleting(this, new SPECIAL_INSTR_HEADRowChangeEvent(((SPECIAL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSPECIAL_INSTR_HEADRow(SPECIAL_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPECIAL_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMER_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnCUSTOMER_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADDataTable()
            {
                this.TableName = "CUSTOMER_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUSTOMER_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CUSTOMER_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMER_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnCUSTOMER_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((CUSTOMER_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event CUSTOMER_INSTR_HEADRowChangeEventHandler CUSTOMER_INSTR_HEADRowChanging;

            public event CUSTOMER_INSTR_HEADRowChangeEventHandler CUSTOMER_INSTR_HEADRowChanged;

            public event CUSTOMER_INSTR_HEADRowChangeEventHandler CUSTOMER_INSTR_HEADRowDeleting;

            public event CUSTOMER_INSTR_HEADRowChangeEventHandler CUSTOMER_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCUSTOMER_INSTR_HEADRow(CUSTOMER_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRow AddCUSTOMER_INSTR_HEADRow(string CUSTOMER_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_CUSTOMER_INSTR_HEAD)
            {
                CUSTOMER_INSTR_HEADRow rowCUSTOMER_INSTR_HEADRow = ((CUSTOMER_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CUSTOMER_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_CUSTOMER_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_CUSTOMER_INSTR_HEAD[80];
                }
                rowCUSTOMER_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMER_INSTR_HEADRow);
                return rowCUSTOMER_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                CUSTOMER_INSTR_HEADDataTable cln = ((CUSTOMER_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new CUSTOMER_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnCUSTOMER_INSTR_HEAD_Column = base.Columns["CUSTOMER_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnCUSTOMER_INSTR_HEAD_Column = new global::System.Data.DataColumn("CUSTOMER_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnCUSTOMER_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRow NewCUSTOMER_INSTR_HEADRow()
            {
                return ((CUSTOMER_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new CUSTOMER_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(CUSTOMER_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.CUSTOMER_INSTR_HEADRowChanged != null))
                {
                    this.CUSTOMER_INSTR_HEADRowChanged(this, new CUSTOMER_INSTR_HEADRowChangeEvent(((CUSTOMER_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.CUSTOMER_INSTR_HEADRowChanging != null))
                {
                    this.CUSTOMER_INSTR_HEADRowChanging(this, new CUSTOMER_INSTR_HEADRowChangeEvent(((CUSTOMER_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.CUSTOMER_INSTR_HEADRowDeleted != null))
                {
                    this.CUSTOMER_INSTR_HEADRowDeleted(this, new CUSTOMER_INSTR_HEADRowChangeEvent(((CUSTOMER_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.CUSTOMER_INSTR_HEADRowDeleting != null))
                {
                    this.CUSTOMER_INSTR_HEADRowDeleting(this, new CUSTOMER_INSTR_HEADRowChangeEvent(((CUSTOMER_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCUSTOMER_INSTR_HEADRow(CUSTOMER_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMER_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LABEL_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnLABEL_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADDataTable()
            {
                this.TableName = "LABEL_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LABEL_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LABEL_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LABEL_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnLABEL_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((LABEL_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event LABEL_INSTR_HEADRowChangeEventHandler LABEL_INSTR_HEADRowChanging;

            public event LABEL_INSTR_HEADRowChangeEventHandler LABEL_INSTR_HEADRowChanged;

            public event LABEL_INSTR_HEADRowChangeEventHandler LABEL_INSTR_HEADRowDeleting;

            public event LABEL_INSTR_HEADRowChangeEventHandler LABEL_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLABEL_INSTR_HEADRow(LABEL_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRow AddLABEL_INSTR_HEADRow(string LABEL_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_LABEL_INSTR_HEAD)
            {
                LABEL_INSTR_HEADRow rowLABEL_INSTR_HEADRow = ((LABEL_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LABEL_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_LABEL_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_LABEL_INSTR_HEAD[80];
                }
                rowLABEL_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLABEL_INSTR_HEADRow);
                return rowLABEL_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                LABEL_INSTR_HEADDataTable cln = ((LABEL_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new LABEL_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnLABEL_INSTR_HEAD_Column = base.Columns["LABEL_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnLABEL_INSTR_HEAD_Column = new global::System.Data.DataColumn("LABEL_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnLABEL_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRow NewLABEL_INSTR_HEADRow()
            {
                return ((LABEL_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new LABEL_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(LABEL_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.LABEL_INSTR_HEADRowChanged != null))
                {
                    this.LABEL_INSTR_HEADRowChanged(this, new LABEL_INSTR_HEADRowChangeEvent(((LABEL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.LABEL_INSTR_HEADRowChanging != null))
                {
                    this.LABEL_INSTR_HEADRowChanging(this, new LABEL_INSTR_HEADRowChangeEvent(((LABEL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.LABEL_INSTR_HEADRowDeleted != null))
                {
                    this.LABEL_INSTR_HEADRowDeleted(this, new LABEL_INSTR_HEADRowChangeEvent(((LABEL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.LABEL_INSTR_HEADRowDeleting != null))
                {
                    this.LABEL_INSTR_HEADRowDeleting(this, new LABEL_INSTR_HEADRowChangeEvent(((LABEL_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLABEL_INSTR_HEADRow(LABEL_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LABEL_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CARRIER_INST_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnCARRIER_INST_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADDataTable()
            {
                this.TableName = "CARRIER_INST_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CARRIER_INST_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CARRIER_INST_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CARRIER_INST_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnCARRIER_INST_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRow this[int index]
            {
                get
                {
                    return ((CARRIER_INST_HEADRow)(this.Rows[index]));
                }
            }

            public event CARRIER_INST_HEADRowChangeEventHandler CARRIER_INST_HEADRowChanging;

            public event CARRIER_INST_HEADRowChangeEventHandler CARRIER_INST_HEADRowChanged;

            public event CARRIER_INST_HEADRowChangeEventHandler CARRIER_INST_HEADRowDeleting;

            public event CARRIER_INST_HEADRowChangeEventHandler CARRIER_INST_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCARRIER_INST_HEADRow(CARRIER_INST_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRow AddCARRIER_INST_HEADRow(string CARRIER_INST_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_CARRIER_INST_HEAD)
            {
                CARRIER_INST_HEADRow rowCARRIER_INST_HEADRow = ((CARRIER_INST_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CARRIER_INST_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_CARRIER_INST_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_CARRIER_INST_HEAD[80];
                }
                rowCARRIER_INST_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCARRIER_INST_HEADRow);
                return rowCARRIER_INST_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                CARRIER_INST_HEADDataTable cln = ((CARRIER_INST_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new CARRIER_INST_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnCARRIER_INST_HEAD_Column = base.Columns["CARRIER_INST_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnCARRIER_INST_HEAD_Column = new global::System.Data.DataColumn("CARRIER_INST_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnCARRIER_INST_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRow NewCARRIER_INST_HEADRow()
            {
                return ((CARRIER_INST_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new CARRIER_INST_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(CARRIER_INST_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.CARRIER_INST_HEADRowChanged != null))
                {
                    this.CARRIER_INST_HEADRowChanged(this, new CARRIER_INST_HEADRowChangeEvent(((CARRIER_INST_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.CARRIER_INST_HEADRowChanging != null))
                {
                    this.CARRIER_INST_HEADRowChanging(this, new CARRIER_INST_HEADRowChangeEvent(((CARRIER_INST_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.CARRIER_INST_HEADRowDeleted != null))
                {
                    this.CARRIER_INST_HEADRowDeleted(this, new CARRIER_INST_HEADRowChangeEvent(((CARRIER_INST_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.CARRIER_INST_HEADRowDeleting != null))
                {
                    this.CARRIER_INST_HEADRowDeleting(this, new CARRIER_INST_HEADRowChangeEvent(((CARRIER_INST_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCARRIER_INST_HEADRow(CARRIER_INST_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CARRIER_INST_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INVOICE_UDF_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnINVOICE_UDF_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADDataTable()
            {
                this.TableName = "INVOICE_UDF_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INVOICE_UDF_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected INVOICE_UDF_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVOICE_UDF_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnINVOICE_UDF_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRow this[int index]
            {
                get
                {
                    return ((INVOICE_UDF_HEADRow)(this.Rows[index]));
                }
            }

            public event INVOICE_UDF_HEADRowChangeEventHandler INVOICE_UDF_HEADRowChanging;

            public event INVOICE_UDF_HEADRowChangeEventHandler INVOICE_UDF_HEADRowChanged;

            public event INVOICE_UDF_HEADRowChangeEventHandler INVOICE_UDF_HEADRowDeleting;

            public event INVOICE_UDF_HEADRowChangeEventHandler INVOICE_UDF_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddINVOICE_UDF_HEADRow(INVOICE_UDF_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRow AddINVOICE_UDF_HEADRow(string INVOICE_UDF_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_INVOICE_UDF_HEAD)
            {
                INVOICE_UDF_HEADRow rowINVOICE_UDF_HEADRow = ((INVOICE_UDF_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INVOICE_UDF_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_INVOICE_UDF_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_INVOICE_UDF_HEAD[80];
                }
                rowINVOICE_UDF_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINVOICE_UDF_HEADRow);
                return rowINVOICE_UDF_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                INVOICE_UDF_HEADDataTable cln = ((INVOICE_UDF_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new INVOICE_UDF_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnINVOICE_UDF_HEAD_Column = base.Columns["INVOICE_UDF_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnINVOICE_UDF_HEAD_Column = new global::System.Data.DataColumn("INVOICE_UDF_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnINVOICE_UDF_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRow NewINVOICE_UDF_HEADRow()
            {
                return ((INVOICE_UDF_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new INVOICE_UDF_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(INVOICE_UDF_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.INVOICE_UDF_HEADRowChanged != null))
                {
                    this.INVOICE_UDF_HEADRowChanged(this, new INVOICE_UDF_HEADRowChangeEvent(((INVOICE_UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.INVOICE_UDF_HEADRowChanging != null))
                {
                    this.INVOICE_UDF_HEADRowChanging(this, new INVOICE_UDF_HEADRowChangeEvent(((INVOICE_UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.INVOICE_UDF_HEADRowDeleted != null))
                {
                    this.INVOICE_UDF_HEADRowDeleted(this, new INVOICE_UDF_HEADRowChangeEvent(((INVOICE_UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.INVOICE_UDF_HEADRowDeleting != null))
                {
                    this.INVOICE_UDF_HEADRowDeleting(this, new INVOICE_UDF_HEADRowChangeEvent(((INVOICE_UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveINVOICE_UDF_HEADRow(INVOICE_UDF_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INVOICE_UDF_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnUDF_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADDataTable()
            {
                this.TableName = "UDF_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UDF_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnUDF_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRow this[int index]
            {
                get
                {
                    return ((UDF_HEADRow)(this.Rows[index]));
                }
            }

            public event UDF_HEADRowChangeEventHandler UDF_HEADRowChanging;

            public event UDF_HEADRowChangeEventHandler UDF_HEADRowChanged;

            public event UDF_HEADRowChangeEventHandler UDF_HEADRowDeleting;

            public event UDF_HEADRowChangeEventHandler UDF_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_HEADRow(UDF_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRow AddUDF_HEADRow(string UDF_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_UDF_HEAD)
            {
                UDF_HEADRow rowUDF_HEADRow = ((UDF_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UDF_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_UDF_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_UDF_HEAD[80];
                }
                rowUDF_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_HEADRow);
                return rowUDF_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UDF_HEADDataTable cln = ((UDF_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UDF_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnUDF_HEAD_Column = base.Columns["UDF_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnUDF_HEAD_Column = new global::System.Data.DataColumn("UDF_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnUDF_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRow NewUDF_HEADRow()
            {
                return ((UDF_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UDF_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UDF_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UDF_HEADRowChanged != null))
                {
                    this.UDF_HEADRowChanged(this, new UDF_HEADRowChangeEvent(((UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UDF_HEADRowChanging != null))
                {
                    this.UDF_HEADRowChanging(this, new UDF_HEADRowChangeEvent(((UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UDF_HEADRowDeleted != null))
                {
                    this.UDF_HEADRowDeleted(this, new UDF_HEADRowChangeEvent(((UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UDF_HEADRowDeleting != null))
                {
                    this.UDF_HEADRowDeleting(this, new UDF_HEADRowChangeEvent(((UDF_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_HEADRow(UDF_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_HEADERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnKEY;

            private global::System.Data.DataColumn columnVALUE;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERDataTable()
            {
                this.TableName = "UDF_HEADER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_HEADERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn
            {
                get
                {
                    return this.columnKEY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn
            {
                get
                {
                    return this.columnVALUE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow this[int index]
            {
                get
                {
                    return ((UDF_HEADERRow)(this.Rows[index]));
                }
            }

            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanging;

            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanged;

            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleting;

            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_HEADERRow(UDF_HEADERRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow AddUDF_HEADERRow(string KEY, string VALUE, PACK_IDRow parentPACK_IDRowByPACK_ID_UDF_HEADER)
            {
                UDF_HEADERRow rowUDF_HEADERRow = ((UDF_HEADERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentPACK_IDRowByPACK_ID_UDF_HEADER != null))
                {
                    columnValuesArray[2] = parentPACK_IDRowByPACK_ID_UDF_HEADER[80];
                }
                rowUDF_HEADERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_HEADERRow);
                return rowUDF_HEADERRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UDF_HEADERDataTable cln = ((UDF_HEADERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UDF_HEADERDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow NewUDF_HEADERRow()
            {
                return ((UDF_HEADERRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UDF_HEADERRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UDF_HEADERRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UDF_HEADERRowChanged != null))
                {
                    this.UDF_HEADERRowChanged(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UDF_HEADERRowChanging != null))
                {
                    this.UDF_HEADERRowChanging(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UDF_HEADERRowDeleted != null))
                {
                    this.UDF_HEADERRowDeleted(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UDF_HEADERRowDeleting != null))
                {
                    this.UDF_HEADERRowDeleting(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_HEADERRow(UDF_HEADERRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_HEADERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HANDLING_INSTR_HEADDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnHANDLING_INSTR_HEAD_Column;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADDataTable()
            {
                this.TableName = "HANDLING_INSTR_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANDLING_INSTR_HEADDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HANDLING_INSTR_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HANDLING_INSTR_HEAD_ColumnColumn
            {
                get
                {
                    return this.columnHANDLING_INSTR_HEAD_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRow this[int index]
            {
                get
                {
                    return ((HANDLING_INSTR_HEADRow)(this.Rows[index]));
                }
            }

            public event HANDLING_INSTR_HEADRowChangeEventHandler HANDLING_INSTR_HEADRowChanging;

            public event HANDLING_INSTR_HEADRowChangeEventHandler HANDLING_INSTR_HEADRowChanged;

            public event HANDLING_INSTR_HEADRowChangeEventHandler HANDLING_INSTR_HEADRowDeleting;

            public event HANDLING_INSTR_HEADRowChangeEventHandler HANDLING_INSTR_HEADRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHANDLING_INSTR_HEADRow(HANDLING_INSTR_HEADRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRow AddHANDLING_INSTR_HEADRow(string HANDLING_INSTR_HEAD_Column, PACK_IDRow parentPACK_IDRowByPACK_ID_HANDLING_INSTR_HEAD)
            {
                HANDLING_INSTR_HEADRow rowHANDLING_INSTR_HEADRow = ((HANDLING_INSTR_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HANDLING_INSTR_HEAD_Column,
                        null};
                if ((parentPACK_IDRowByPACK_ID_HANDLING_INSTR_HEAD != null))
                {
                    columnValuesArray[1] = parentPACK_IDRowByPACK_ID_HANDLING_INSTR_HEAD[80];
                }
                rowHANDLING_INSTR_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHANDLING_INSTR_HEADRow);
                return rowHANDLING_INSTR_HEADRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                HANDLING_INSTR_HEADDataTable cln = ((HANDLING_INSTR_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new HANDLING_INSTR_HEADDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnHANDLING_INSTR_HEAD_Column = base.Columns["HANDLING_INSTR_HEAD_Column"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnHANDLING_INSTR_HEAD_Column = new global::System.Data.DataColumn("HANDLING_INSTR_HEAD_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnHANDLING_INSTR_HEAD_Column);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRow NewHANDLING_INSTR_HEADRow()
            {
                return ((HANDLING_INSTR_HEADRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new HANDLING_INSTR_HEADRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(HANDLING_INSTR_HEADRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.HANDLING_INSTR_HEADRowChanged != null))
                {
                    this.HANDLING_INSTR_HEADRowChanged(this, new HANDLING_INSTR_HEADRowChangeEvent(((HANDLING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.HANDLING_INSTR_HEADRowChanging != null))
                {
                    this.HANDLING_INSTR_HEADRowChanging(this, new HANDLING_INSTR_HEADRowChangeEvent(((HANDLING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.HANDLING_INSTR_HEADRowDeleted != null))
                {
                    this.HANDLING_INSTR_HEADRowDeleted(this, new HANDLING_INSTR_HEADRowChangeEvent(((HANDLING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.HANDLING_INSTR_HEADRowDeleting != null))
                {
                    this.HANDLING_INSTR_HEADRowDeleting(this, new HANDLING_INSTR_HEADRowChangeEvent(((HANDLING_INSTR_HEADRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHANDLING_INSTR_HEADRow(HANDLING_INSTR_HEADRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HANDLING_INSTR_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PACK_ID_LINE_ITEMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnHP_SO_LINE_ITEM;

            private global::System.Data.DataColumn columnPROD_TYPE;

            private global::System.Data.DataColumn columnHP_PN;

            private global::System.Data.DataColumn columnPROD_DESC_BASE;

            private global::System.Data.DataColumn columnHP_Cust_PN;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_UNIT_QTY;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_BOX_QTY;

            private global::System.Data.DataColumn columnPACK_ID_UNIT_UOM;

            private global::System.Data.DataColumn columnEXTD_BOX_WEIGHT;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            private global::System.Data.DataColumn columnPACK_ID_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMDataTable()
            {
                this.TableName = "PACK_ID_LINE_ITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACK_ID_LINE_ITEMDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PACK_ID_LINE_ITEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_SO_LINE_ITEMColumn
            {
                get
                {
                    return this.columnHP_SO_LINE_ITEM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_TYPEColumn
            {
                get
                {
                    return this.columnPROD_TYPE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_PNColumn
            {
                get
                {
                    return this.columnHP_PN;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESC_BASEColumn
            {
                get
                {
                    return this.columnPROD_DESC_BASE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_Cust_PNColumn
            {
                get
                {
                    return this.columnHP_Cust_PN;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_UNIT_QTYColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_UNIT_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_BOX_QTYColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_BOX_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_UNIT_UOMColumn
            {
                get
                {
                    return this.columnPACK_ID_UNIT_UOM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXTD_BOX_WEIGHTColumn
            {
                get
                {
                    return this.columnEXTD_BOX_WEIGHT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow this[int index]
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.Rows[index]));
                }
            }

            public event PACK_ID_LINE_ITEMRowChangeEventHandler PACK_ID_LINE_ITEMRowChanging;

            public event PACK_ID_LINE_ITEMRowChangeEventHandler PACK_ID_LINE_ITEMRowChanged;

            public event PACK_ID_LINE_ITEMRowChangeEventHandler PACK_ID_LINE_ITEMRowDeleting;

            public event PACK_ID_LINE_ITEMRowChangeEventHandler PACK_ID_LINE_ITEMRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPACK_ID_LINE_ITEMRow(PACK_ID_LINE_ITEMRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow AddPACK_ID_LINE_ITEMRow(string HP_SO_LINE_ITEM, string PROD_TYPE, string HP_PN, string PROD_DESC_BASE, string HP_Cust_PN, double PACK_ID_LINE_ITEM_UNIT_QTY, double PACK_ID_LINE_ITEM_BOX_QTY, string PACK_ID_UNIT_UOM, double EXTD_BOX_WEIGHT, PACK_IDRow parentPACK_IDRowByPACK_ID_PACK_ID_LINE_ITEM)
            {
                PACK_ID_LINE_ITEMRow rowPACK_ID_LINE_ITEMRow = ((PACK_ID_LINE_ITEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HP_SO_LINE_ITEM,
                        PROD_TYPE,
                        HP_PN,
                        PROD_DESC_BASE,
                        HP_Cust_PN,
                        PACK_ID_LINE_ITEM_UNIT_QTY,
                        PACK_ID_LINE_ITEM_BOX_QTY,
                        PACK_ID_UNIT_UOM,
                        EXTD_BOX_WEIGHT,
                        null,
                        null};
                if ((parentPACK_IDRowByPACK_ID_PACK_ID_LINE_ITEM != null))
                {
                    columnValuesArray[10] = parentPACK_IDRowByPACK_ID_PACK_ID_LINE_ITEM[80];
                }
                rowPACK_ID_LINE_ITEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPACK_ID_LINE_ITEMRow);
                return rowPACK_ID_LINE_ITEMRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                PACK_ID_LINE_ITEMDataTable cln = ((PACK_ID_LINE_ITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new PACK_ID_LINE_ITEMDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnHP_SO_LINE_ITEM = base.Columns["HP_SO_LINE_ITEM"];
                this.columnPROD_TYPE = base.Columns["PROD_TYPE"];
                this.columnHP_PN = base.Columns["HP_PN"];
                this.columnPROD_DESC_BASE = base.Columns["PROD_DESC_BASE"];
                this.columnHP_Cust_PN = base.Columns["HP_Cust_PN"];
                this.columnPACK_ID_LINE_ITEM_UNIT_QTY = base.Columns["PACK_ID_LINE_ITEM_UNIT_QTY"];
                this.columnPACK_ID_LINE_ITEM_BOX_QTY = base.Columns["PACK_ID_LINE_ITEM_BOX_QTY"];
                this.columnPACK_ID_UNIT_UOM = base.Columns["PACK_ID_UNIT_UOM"];
                this.columnEXTD_BOX_WEIGHT = base.Columns["EXTD_BOX_WEIGHT"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
                this.columnPACK_ID_Id = base.Columns["PACK_ID_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnHP_SO_LINE_ITEM = new global::System.Data.DataColumn("HP_SO_LINE_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_SO_LINE_ITEM);
                this.columnPROD_TYPE = new global::System.Data.DataColumn("PROD_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_TYPE);
                this.columnHP_PN = new global::System.Data.DataColumn("HP_PN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_PN);
                this.columnPROD_DESC_BASE = new global::System.Data.DataColumn("PROD_DESC_BASE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESC_BASE);
                this.columnHP_Cust_PN = new global::System.Data.DataColumn("HP_Cust_PN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_Cust_PN);
                this.columnPACK_ID_LINE_ITEM_UNIT_QTY = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_UNIT_QTY);
                this.columnPACK_ID_LINE_ITEM_BOX_QTY = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_BOX_QTY);
                this.columnPACK_ID_UNIT_UOM = new global::System.Data.DataColumn("PACK_ID_UNIT_UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_UNIT_UOM);
                this.columnEXTD_BOX_WEIGHT = new global::System.Data.DataColumn("EXTD_BOX_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTD_BOX_WEIGHT);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
                this.columnPACK_ID_Id = new global::System.Data.DataColumn("PACK_ID_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPACK_ID_LINE_ITEM_Id}, true));
                this.columnHP_SO_LINE_ITEM.AllowDBNull = false;
                this.columnPROD_TYPE.AllowDBNull = false;
                this.columnHP_PN.AllowDBNull = false;
                this.columnPROD_DESC_BASE.AllowDBNull = false;
                this.columnHP_Cust_PN.AllowDBNull = false;
                this.columnPACK_ID_LINE_ITEM_UNIT_QTY.AllowDBNull = false;
                this.columnPACK_ID_LINE_ITEM_BOX_QTY.AllowDBNull = false;
                this.columnPACK_ID_UNIT_UOM.AllowDBNull = false;
                this.columnEXTD_BOX_WEIGHT.AllowDBNull = false;
                this.columnPACK_ID_LINE_ITEM_Id.AutoIncrement = true;
                this.columnPACK_ID_LINE_ITEM_Id.AllowDBNull = false;
                this.columnPACK_ID_LINE_ITEM_Id.Unique = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow NewPACK_ID_LINE_ITEMRow()
            {
                return ((PACK_ID_LINE_ITEMRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new PACK_ID_LINE_ITEMRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(PACK_ID_LINE_ITEMRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.PACK_ID_LINE_ITEMRowChanged != null))
                {
                    this.PACK_ID_LINE_ITEMRowChanged(this, new PACK_ID_LINE_ITEMRowChangeEvent(((PACK_ID_LINE_ITEMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.PACK_ID_LINE_ITEMRowChanging != null))
                {
                    this.PACK_ID_LINE_ITEMRowChanging(this, new PACK_ID_LINE_ITEMRowChangeEvent(((PACK_ID_LINE_ITEMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.PACK_ID_LINE_ITEMRowDeleted != null))
                {
                    this.PACK_ID_LINE_ITEMRowDeleted(this, new PACK_ID_LINE_ITEMRowChangeEvent(((PACK_ID_LINE_ITEMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.PACK_ID_LINE_ITEMRowDeleting != null))
                {
                    this.PACK_ID_LINE_ITEMRowDeleting(this, new PACK_ID_LINE_ITEMRowChangeEvent(((PACK_ID_LINE_ITEMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePACK_ID_LINE_ITEMRow(PACK_ID_LINE_ITEMRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PACK_ID_LINE_ITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXPORT_NOTES_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnEXPORT_NOTES_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILDataTable()
            {
                this.TableName = "EXPORT_NOTES_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXPORT_NOTES_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXPORT_NOTES_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXPORT_NOTES_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnEXPORT_NOTES_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRow this[int index]
            {
                get
                {
                    return ((EXPORT_NOTES_DETAILRow)(this.Rows[index]));
                }
            }

            public event EXPORT_NOTES_DETAILRowChangeEventHandler EXPORT_NOTES_DETAILRowChanging;

            public event EXPORT_NOTES_DETAILRowChangeEventHandler EXPORT_NOTES_DETAILRowChanged;

            public event EXPORT_NOTES_DETAILRowChangeEventHandler EXPORT_NOTES_DETAILRowDeleting;

            public event EXPORT_NOTES_DETAILRowChangeEventHandler EXPORT_NOTES_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXPORT_NOTES_DETAILRow(EXPORT_NOTES_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRow AddEXPORT_NOTES_DETAILRow(string EXPORT_NOTES_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL)
            {
                EXPORT_NOTES_DETAILRow rowEXPORT_NOTES_DETAILRow = ((EXPORT_NOTES_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXPORT_NOTES_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL[9];
                }
                rowEXPORT_NOTES_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXPORT_NOTES_DETAILRow);
                return rowEXPORT_NOTES_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                EXPORT_NOTES_DETAILDataTable cln = ((EXPORT_NOTES_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new EXPORT_NOTES_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnEXPORT_NOTES_DETAIL_Column = base.Columns["EXPORT_NOTES_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnEXPORT_NOTES_DETAIL_Column = new global::System.Data.DataColumn("EXPORT_NOTES_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnEXPORT_NOTES_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRow NewEXPORT_NOTES_DETAILRow()
            {
                return ((EXPORT_NOTES_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new EXPORT_NOTES_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(EXPORT_NOTES_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.EXPORT_NOTES_DETAILRowChanged != null))
                {
                    this.EXPORT_NOTES_DETAILRowChanged(this, new EXPORT_NOTES_DETAILRowChangeEvent(((EXPORT_NOTES_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.EXPORT_NOTES_DETAILRowChanging != null))
                {
                    this.EXPORT_NOTES_DETAILRowChanging(this, new EXPORT_NOTES_DETAILRowChangeEvent(((EXPORT_NOTES_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.EXPORT_NOTES_DETAILRowDeleted != null))
                {
                    this.EXPORT_NOTES_DETAILRowDeleted(this, new EXPORT_NOTES_DETAILRowChangeEvent(((EXPORT_NOTES_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.EXPORT_NOTES_DETAILRowDeleting != null))
                {
                    this.EXPORT_NOTES_DETAILRowDeleting(this, new EXPORT_NOTES_DETAILRowChangeEvent(((EXPORT_NOTES_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXPORT_NOTES_DETAILRow(EXPORT_NOTES_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXPORT_NOTES_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHIPPING_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSHIPPING_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILDataTable()
            {
                this.TableName = "SHIPPING_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIPPING_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SHIPPING_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPPING_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnSHIPPING_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((SHIPPING_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event SHIPPING_INSTR_DETAILRowChangeEventHandler SHIPPING_INSTR_DETAILRowChanging;

            public event SHIPPING_INSTR_DETAILRowChangeEventHandler SHIPPING_INSTR_DETAILRowChanged;

            public event SHIPPING_INSTR_DETAILRowChangeEventHandler SHIPPING_INSTR_DETAILRowDeleting;

            public event SHIPPING_INSTR_DETAILRowChangeEventHandler SHIPPING_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSHIPPING_INSTR_DETAILRow(SHIPPING_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRow AddSHIPPING_INSTR_DETAILRow(string SHIPPING_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL)
            {
                SHIPPING_INSTR_DETAILRow rowSHIPPING_INSTR_DETAILRow = ((SHIPPING_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SHIPPING_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL[9];
                }
                rowSHIPPING_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHIPPING_INSTR_DETAILRow);
                return rowSHIPPING_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                SHIPPING_INSTR_DETAILDataTable cln = ((SHIPPING_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SHIPPING_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSHIPPING_INSTR_DETAIL_Column = base.Columns["SHIPPING_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSHIPPING_INSTR_DETAIL_Column = new global::System.Data.DataColumn("SHIPPING_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSHIPPING_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRow NewSHIPPING_INSTR_DETAILRow()
            {
                return ((SHIPPING_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SHIPPING_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(SHIPPING_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SHIPPING_INSTR_DETAILRowChanged != null))
                {
                    this.SHIPPING_INSTR_DETAILRowChanged(this, new SHIPPING_INSTR_DETAILRowChangeEvent(((SHIPPING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SHIPPING_INSTR_DETAILRowChanging != null))
                {
                    this.SHIPPING_INSTR_DETAILRowChanging(this, new SHIPPING_INSTR_DETAILRowChangeEvent(((SHIPPING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SHIPPING_INSTR_DETAILRowDeleted != null))
                {
                    this.SHIPPING_INSTR_DETAILRowDeleted(this, new SHIPPING_INSTR_DETAILRowChangeEvent(((SHIPPING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SHIPPING_INSTR_DETAILRowDeleting != null))
                {
                    this.SHIPPING_INSTR_DETAILRowDeleting(this, new SHIPPING_INSTR_DETAILRowChangeEvent(((SHIPPING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSHIPPING_INSTR_DETAILRow(SHIPPING_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHIPPING_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PICKING_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnPICKING_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILDataTable()
            {
                this.TableName = "PICKING_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PICKING_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PICKING_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICKING_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnPICKING_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((PICKING_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event PICKING_INSTR_DETAILRowChangeEventHandler PICKING_INSTR_DETAILRowChanging;

            public event PICKING_INSTR_DETAILRowChangeEventHandler PICKING_INSTR_DETAILRowChanged;

            public event PICKING_INSTR_DETAILRowChangeEventHandler PICKING_INSTR_DETAILRowDeleting;

            public event PICKING_INSTR_DETAILRowChangeEventHandler PICKING_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPICKING_INSTR_DETAILRow(PICKING_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRow AddPICKING_INSTR_DETAILRow(string PICKING_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL)
            {
                PICKING_INSTR_DETAILRow rowPICKING_INSTR_DETAILRow = ((PICKING_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PICKING_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL[9];
                }
                rowPICKING_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPICKING_INSTR_DETAILRow);
                return rowPICKING_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                PICKING_INSTR_DETAILDataTable cln = ((PICKING_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new PICKING_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnPICKING_INSTR_DETAIL_Column = base.Columns["PICKING_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnPICKING_INSTR_DETAIL_Column = new global::System.Data.DataColumn("PICKING_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnPICKING_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRow NewPICKING_INSTR_DETAILRow()
            {
                return ((PICKING_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new PICKING_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(PICKING_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.PICKING_INSTR_DETAILRowChanged != null))
                {
                    this.PICKING_INSTR_DETAILRowChanged(this, new PICKING_INSTR_DETAILRowChangeEvent(((PICKING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.PICKING_INSTR_DETAILRowChanging != null))
                {
                    this.PICKING_INSTR_DETAILRowChanging(this, new PICKING_INSTR_DETAILRowChangeEvent(((PICKING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.PICKING_INSTR_DETAILRowDeleted != null))
                {
                    this.PICKING_INSTR_DETAILRowDeleted(this, new PICKING_INSTR_DETAILRowChangeEvent(((PICKING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.PICKING_INSTR_DETAILRowDeleting != null))
                {
                    this.PICKING_INSTR_DETAILRowDeleting(this, new PICKING_INSTR_DETAILRowChangeEvent(((PICKING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePICKING_INSTR_DETAILRow(PICKING_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PICKING_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DELIVERY_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnDELIVERY_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILDataTable()
            {
                this.TableName = "DELIVERY_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DELIVERY_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DELIVERY_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DELIVERY_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnDELIVERY_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((DELIVERY_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event DELIVERY_INSTR_DETAILRowChangeEventHandler DELIVERY_INSTR_DETAILRowChanging;

            public event DELIVERY_INSTR_DETAILRowChangeEventHandler DELIVERY_INSTR_DETAILRowChanged;

            public event DELIVERY_INSTR_DETAILRowChangeEventHandler DELIVERY_INSTR_DETAILRowDeleting;

            public event DELIVERY_INSTR_DETAILRowChangeEventHandler DELIVERY_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDELIVERY_INSTR_DETAILRow(DELIVERY_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRow AddDELIVERY_INSTR_DETAILRow(string DELIVERY_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL)
            {
                DELIVERY_INSTR_DETAILRow rowDELIVERY_INSTR_DETAILRow = ((DELIVERY_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DELIVERY_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL[9];
                }
                rowDELIVERY_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDELIVERY_INSTR_DETAILRow);
                return rowDELIVERY_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                DELIVERY_INSTR_DETAILDataTable cln = ((DELIVERY_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new DELIVERY_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnDELIVERY_INSTR_DETAIL_Column = base.Columns["DELIVERY_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnDELIVERY_INSTR_DETAIL_Column = new global::System.Data.DataColumn("DELIVERY_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnDELIVERY_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRow NewDELIVERY_INSTR_DETAILRow()
            {
                return ((DELIVERY_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new DELIVERY_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(DELIVERY_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.DELIVERY_INSTR_DETAILRowChanged != null))
                {
                    this.DELIVERY_INSTR_DETAILRowChanged(this, new DELIVERY_INSTR_DETAILRowChangeEvent(((DELIVERY_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.DELIVERY_INSTR_DETAILRowChanging != null))
                {
                    this.DELIVERY_INSTR_DETAILRowChanging(this, new DELIVERY_INSTR_DETAILRowChangeEvent(((DELIVERY_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.DELIVERY_INSTR_DETAILRowDeleted != null))
                {
                    this.DELIVERY_INSTR_DETAILRowDeleted(this, new DELIVERY_INSTR_DETAILRowChangeEvent(((DELIVERY_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.DELIVERY_INSTR_DETAILRowDeleting != null))
                {
                    this.DELIVERY_INSTR_DETAILRowDeleting(this, new DELIVERY_INSTR_DETAILRowChangeEvent(((DELIVERY_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDELIVERY_INSTR_DETAILRow(DELIVERY_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DELIVERY_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPECIAL_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSPECIAL_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILDataTable()
            {
                this.TableName = "SPECIAL_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIAL_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SPECIAL_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECIAL_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnSPECIAL_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((SPECIAL_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event SPECIAL_INSTR_DETAILRowChangeEventHandler SPECIAL_INSTR_DETAILRowChanging;

            public event SPECIAL_INSTR_DETAILRowChangeEventHandler SPECIAL_INSTR_DETAILRowChanged;

            public event SPECIAL_INSTR_DETAILRowChangeEventHandler SPECIAL_INSTR_DETAILRowDeleting;

            public event SPECIAL_INSTR_DETAILRowChangeEventHandler SPECIAL_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSPECIAL_INSTR_DETAILRow(SPECIAL_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRow AddSPECIAL_INSTR_DETAILRow(string SPECIAL_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL)
            {
                SPECIAL_INSTR_DETAILRow rowSPECIAL_INSTR_DETAILRow = ((SPECIAL_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPECIAL_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL[9];
                }
                rowSPECIAL_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPECIAL_INSTR_DETAILRow);
                return rowSPECIAL_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                SPECIAL_INSTR_DETAILDataTable cln = ((SPECIAL_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SPECIAL_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSPECIAL_INSTR_DETAIL_Column = base.Columns["SPECIAL_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSPECIAL_INSTR_DETAIL_Column = new global::System.Data.DataColumn("SPECIAL_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSPECIAL_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRow NewSPECIAL_INSTR_DETAILRow()
            {
                return ((SPECIAL_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SPECIAL_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(SPECIAL_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SPECIAL_INSTR_DETAILRowChanged != null))
                {
                    this.SPECIAL_INSTR_DETAILRowChanged(this, new SPECIAL_INSTR_DETAILRowChangeEvent(((SPECIAL_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SPECIAL_INSTR_DETAILRowChanging != null))
                {
                    this.SPECIAL_INSTR_DETAILRowChanging(this, new SPECIAL_INSTR_DETAILRowChangeEvent(((SPECIAL_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SPECIAL_INSTR_DETAILRowDeleted != null))
                {
                    this.SPECIAL_INSTR_DETAILRowDeleted(this, new SPECIAL_INSTR_DETAILRowChangeEvent(((SPECIAL_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SPECIAL_INSTR_DETAILRowDeleting != null))
                {
                    this.SPECIAL_INSTR_DETAILRowDeleting(this, new SPECIAL_INSTR_DETAILRowChangeEvent(((SPECIAL_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSPECIAL_INSTR_DETAILRow(SPECIAL_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPECIAL_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMER_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnCUSTOMER_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILDataTable()
            {
                this.TableName = "CUSTOMER_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUSTOMER_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CUSTOMER_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMER_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnCUSTOMER_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((CUSTOMER_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event CUSTOMER_INSTR_DETAILRowChangeEventHandler CUSTOMER_INSTR_DETAILRowChanging;

            public event CUSTOMER_INSTR_DETAILRowChangeEventHandler CUSTOMER_INSTR_DETAILRowChanged;

            public event CUSTOMER_INSTR_DETAILRowChangeEventHandler CUSTOMER_INSTR_DETAILRowDeleting;

            public event CUSTOMER_INSTR_DETAILRowChangeEventHandler CUSTOMER_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCUSTOMER_INSTR_DETAILRow(CUSTOMER_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRow AddCUSTOMER_INSTR_DETAILRow(string CUSTOMER_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL)
            {
                CUSTOMER_INSTR_DETAILRow rowCUSTOMER_INSTR_DETAILRow = ((CUSTOMER_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CUSTOMER_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL[9];
                }
                rowCUSTOMER_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMER_INSTR_DETAILRow);
                return rowCUSTOMER_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                CUSTOMER_INSTR_DETAILDataTable cln = ((CUSTOMER_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new CUSTOMER_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnCUSTOMER_INSTR_DETAIL_Column = base.Columns["CUSTOMER_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnCUSTOMER_INSTR_DETAIL_Column = new global::System.Data.DataColumn("CUSTOMER_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnCUSTOMER_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRow NewCUSTOMER_INSTR_DETAILRow()
            {
                return ((CUSTOMER_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new CUSTOMER_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(CUSTOMER_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.CUSTOMER_INSTR_DETAILRowChanged != null))
                {
                    this.CUSTOMER_INSTR_DETAILRowChanged(this, new CUSTOMER_INSTR_DETAILRowChangeEvent(((CUSTOMER_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.CUSTOMER_INSTR_DETAILRowChanging != null))
                {
                    this.CUSTOMER_INSTR_DETAILRowChanging(this, new CUSTOMER_INSTR_DETAILRowChangeEvent(((CUSTOMER_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.CUSTOMER_INSTR_DETAILRowDeleted != null))
                {
                    this.CUSTOMER_INSTR_DETAILRowDeleted(this, new CUSTOMER_INSTR_DETAILRowChangeEvent(((CUSTOMER_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.CUSTOMER_INSTR_DETAILRowDeleting != null))
                {
                    this.CUSTOMER_INSTR_DETAILRowDeleting(this, new CUSTOMER_INSTR_DETAILRowChangeEvent(((CUSTOMER_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCUSTOMER_INSTR_DETAILRow(CUSTOMER_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMER_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HANDLING_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnHANDLING_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILDataTable()
            {
                this.TableName = "HANDLING_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANDLING_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HANDLING_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HANDLING_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnHANDLING_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((HANDLING_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event HANDLING_INSTR_DETAILRowChangeEventHandler HANDLING_INSTR_DETAILRowChanging;

            public event HANDLING_INSTR_DETAILRowChangeEventHandler HANDLING_INSTR_DETAILRowChanged;

            public event HANDLING_INSTR_DETAILRowChangeEventHandler HANDLING_INSTR_DETAILRowDeleting;

            public event HANDLING_INSTR_DETAILRowChangeEventHandler HANDLING_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHANDLING_INSTR_DETAILRow(HANDLING_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRow AddHANDLING_INSTR_DETAILRow(string HANDLING_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL)
            {
                HANDLING_INSTR_DETAILRow rowHANDLING_INSTR_DETAILRow = ((HANDLING_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HANDLING_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL[9];
                }
                rowHANDLING_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHANDLING_INSTR_DETAILRow);
                return rowHANDLING_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                HANDLING_INSTR_DETAILDataTable cln = ((HANDLING_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new HANDLING_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnHANDLING_INSTR_DETAIL_Column = base.Columns["HANDLING_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnHANDLING_INSTR_DETAIL_Column = new global::System.Data.DataColumn("HANDLING_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnHANDLING_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRow NewHANDLING_INSTR_DETAILRow()
            {
                return ((HANDLING_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new HANDLING_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(HANDLING_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.HANDLING_INSTR_DETAILRowChanged != null))
                {
                    this.HANDLING_INSTR_DETAILRowChanged(this, new HANDLING_INSTR_DETAILRowChangeEvent(((HANDLING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.HANDLING_INSTR_DETAILRowChanging != null))
                {
                    this.HANDLING_INSTR_DETAILRowChanging(this, new HANDLING_INSTR_DETAILRowChangeEvent(((HANDLING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.HANDLING_INSTR_DETAILRowDeleted != null))
                {
                    this.HANDLING_INSTR_DETAILRowDeleted(this, new HANDLING_INSTR_DETAILRowChangeEvent(((HANDLING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.HANDLING_INSTR_DETAILRowDeleting != null))
                {
                    this.HANDLING_INSTR_DETAILRowDeleting(this, new HANDLING_INSTR_DETAILRowChangeEvent(((HANDLING_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHANDLING_INSTR_DETAILRow(HANDLING_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HANDLING_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UID_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnUID_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILDataTable()
            {
                this.TableName = "UID_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UID_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UID_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UID_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnUID_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((UID_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event UID_INSTR_DETAILRowChangeEventHandler UID_INSTR_DETAILRowChanging;

            public event UID_INSTR_DETAILRowChangeEventHandler UID_INSTR_DETAILRowChanged;

            public event UID_INSTR_DETAILRowChangeEventHandler UID_INSTR_DETAILRowDeleting;

            public event UID_INSTR_DETAILRowChangeEventHandler UID_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUID_INSTR_DETAILRow(UID_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRow AddUID_INSTR_DETAILRow(string UID_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UID_INSTR_DETAIL)
            {
                UID_INSTR_DETAILRow rowUID_INSTR_DETAILRow = ((UID_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UID_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UID_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UID_INSTR_DETAIL[9];
                }
                rowUID_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUID_INSTR_DETAILRow);
                return rowUID_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UID_INSTR_DETAILDataTable cln = ((UID_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UID_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnUID_INSTR_DETAIL_Column = base.Columns["UID_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnUID_INSTR_DETAIL_Column = new global::System.Data.DataColumn("UID_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnUID_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRow NewUID_INSTR_DETAILRow()
            {
                return ((UID_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UID_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UID_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UID_INSTR_DETAILRowChanged != null))
                {
                    this.UID_INSTR_DETAILRowChanged(this, new UID_INSTR_DETAILRowChangeEvent(((UID_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UID_INSTR_DETAILRowChanging != null))
                {
                    this.UID_INSTR_DETAILRowChanging(this, new UID_INSTR_DETAILRowChangeEvent(((UID_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UID_INSTR_DETAILRowDeleted != null))
                {
                    this.UID_INSTR_DETAILRowDeleted(this, new UID_INSTR_DETAILRowChangeEvent(((UID_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UID_INSTR_DETAILRowDeleting != null))
                {
                    this.UID_INSTR_DETAILRowDeleting(this, new UID_INSTR_DETAILRowChangeEvent(((UID_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUID_INSTR_DETAILRow(UID_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UID_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CONFIG_INSTR_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnCONFIG_INSTR_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILDataTable()
            {
                this.TableName = "CONFIG_INSTR_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONFIG_INSTR_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CONFIG_INSTR_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONFIG_INSTR_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnCONFIG_INSTR_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRow this[int index]
            {
                get
                {
                    return ((CONFIG_INSTR_DETAILRow)(this.Rows[index]));
                }
            }

            public event CONFIG_INSTR_DETAILRowChangeEventHandler CONFIG_INSTR_DETAILRowChanging;

            public event CONFIG_INSTR_DETAILRowChangeEventHandler CONFIG_INSTR_DETAILRowChanged;

            public event CONFIG_INSTR_DETAILRowChangeEventHandler CONFIG_INSTR_DETAILRowDeleting;

            public event CONFIG_INSTR_DETAILRowChangeEventHandler CONFIG_INSTR_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCONFIG_INSTR_DETAILRow(CONFIG_INSTR_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRow AddCONFIG_INSTR_DETAILRow(string CONFIG_INSTR_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL)
            {
                CONFIG_INSTR_DETAILRow rowCONFIG_INSTR_DETAILRow = ((CONFIG_INSTR_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CONFIG_INSTR_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL[9];
                }
                rowCONFIG_INSTR_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCONFIG_INSTR_DETAILRow);
                return rowCONFIG_INSTR_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                CONFIG_INSTR_DETAILDataTable cln = ((CONFIG_INSTR_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new CONFIG_INSTR_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnCONFIG_INSTR_DETAIL_Column = base.Columns["CONFIG_INSTR_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnCONFIG_INSTR_DETAIL_Column = new global::System.Data.DataColumn("CONFIG_INSTR_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnCONFIG_INSTR_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRow NewCONFIG_INSTR_DETAILRow()
            {
                return ((CONFIG_INSTR_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new CONFIG_INSTR_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(CONFIG_INSTR_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.CONFIG_INSTR_DETAILRowChanged != null))
                {
                    this.CONFIG_INSTR_DETAILRowChanged(this, new CONFIG_INSTR_DETAILRowChangeEvent(((CONFIG_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.CONFIG_INSTR_DETAILRowChanging != null))
                {
                    this.CONFIG_INSTR_DETAILRowChanging(this, new CONFIG_INSTR_DETAILRowChangeEvent(((CONFIG_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.CONFIG_INSTR_DETAILRowDeleted != null))
                {
                    this.CONFIG_INSTR_DETAILRowDeleted(this, new CONFIG_INSTR_DETAILRowChangeEvent(((CONFIG_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.CONFIG_INSTR_DETAILRowDeleting != null))
                {
                    this.CONFIG_INSTR_DETAILRowDeleting(this, new CONFIG_INSTR_DETAILRowChangeEvent(((CONFIG_INSTR_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCONFIG_INSTR_DETAILRow(CONFIG_INSTR_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CONFIG_INSTR_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MAXKIT_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnMAXKIT_DETAIL_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILDataTable()
            {
                this.TableName = "MAXKIT_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAXKIT_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MAXKIT_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAXKIT_DETAIL_ColumnColumn
            {
                get
                {
                    return this.columnMAXKIT_DETAIL_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRow this[int index]
            {
                get
                {
                    return ((MAXKIT_DETAILRow)(this.Rows[index]));
                }
            }

            public event MAXKIT_DETAILRowChangeEventHandler MAXKIT_DETAILRowChanging;

            public event MAXKIT_DETAILRowChangeEventHandler MAXKIT_DETAILRowChanged;

            public event MAXKIT_DETAILRowChangeEventHandler MAXKIT_DETAILRowDeleting;

            public event MAXKIT_DETAILRowChangeEventHandler MAXKIT_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMAXKIT_DETAILRow(MAXKIT_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRow AddMAXKIT_DETAILRow(string MAXKIT_DETAIL_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_MAXKIT_DETAIL)
            {
                MAXKIT_DETAILRow rowMAXKIT_DETAILRow = ((MAXKIT_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MAXKIT_DETAIL_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_MAXKIT_DETAIL != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_MAXKIT_DETAIL[9];
                }
                rowMAXKIT_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMAXKIT_DETAILRow);
                return rowMAXKIT_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                MAXKIT_DETAILDataTable cln = ((MAXKIT_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new MAXKIT_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnMAXKIT_DETAIL_Column = base.Columns["MAXKIT_DETAIL_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnMAXKIT_DETAIL_Column = new global::System.Data.DataColumn("MAXKIT_DETAIL_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnMAXKIT_DETAIL_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRow NewMAXKIT_DETAILRow()
            {
                return ((MAXKIT_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new MAXKIT_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(MAXKIT_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.MAXKIT_DETAILRowChanged != null))
                {
                    this.MAXKIT_DETAILRowChanged(this, new MAXKIT_DETAILRowChangeEvent(((MAXKIT_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.MAXKIT_DETAILRowChanging != null))
                {
                    this.MAXKIT_DETAILRowChanging(this, new MAXKIT_DETAILRowChangeEvent(((MAXKIT_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.MAXKIT_DETAILRowDeleted != null))
                {
                    this.MAXKIT_DETAILRowDeleted(this, new MAXKIT_DETAILRowChangeEvent(((MAXKIT_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.MAXKIT_DETAILRowDeleting != null))
                {
                    this.MAXKIT_DETAILRowDeleting(this, new MAXKIT_DETAILRowChangeEvent(((MAXKIT_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMAXKIT_DETAILRow(MAXKIT_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MAXKIT_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_DETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnUDF_DET_Column;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETDataTable()
            {
                this.TableName = "UDF_DET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_DETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UDF_DET_ColumnColumn
            {
                get
                {
                    return this.columnUDF_DET_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRow this[int index]
            {
                get
                {
                    return ((UDF_DETRow)(this.Rows[index]));
                }
            }

            public event UDF_DETRowChangeEventHandler UDF_DETRowChanging;

            public event UDF_DETRowChangeEventHandler UDF_DETRowChanged;

            public event UDF_DETRowChangeEventHandler UDF_DETRowDeleting;

            public event UDF_DETRowChangeEventHandler UDF_DETRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_DETRow(UDF_DETRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRow AddUDF_DETRow(string UDF_DET_Column, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DET)
            {
                UDF_DETRow rowUDF_DETRow = ((UDF_DETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UDF_DET_Column,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DET != null))
                {
                    columnValuesArray[1] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DET[9];
                }
                rowUDF_DETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_DETRow);
                return rowUDF_DETRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UDF_DETDataTable cln = ((UDF_DETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UDF_DETDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnUDF_DET_Column = base.Columns["UDF_DET_Column"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnUDF_DET_Column = new global::System.Data.DataColumn("UDF_DET_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnUDF_DET_Column);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRow NewUDF_DETRow()
            {
                return ((UDF_DETRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UDF_DETRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UDF_DETRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UDF_DETRowChanged != null))
                {
                    this.UDF_DETRowChanged(this, new UDF_DETRowChangeEvent(((UDF_DETRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UDF_DETRowChanging != null))
                {
                    this.UDF_DETRowChanging(this, new UDF_DETRowChangeEvent(((UDF_DETRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UDF_DETRowDeleted != null))
                {
                    this.UDF_DETRowDeleted(this, new UDF_DETRowChangeEvent(((UDF_DETRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UDF_DETRowDeleting != null))
                {
                    this.UDF_DETRowDeleting(this, new UDF_DETRowChangeEvent(((UDF_DETRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_DETRow(UDF_DETRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_DETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnKEY;

            private global::System.Data.DataColumn columnVALUE;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILDataTable()
            {
                this.TableName = "UDF_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn
            {
                get
                {
                    return this.columnKEY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn
            {
                get
                {
                    return this.columnVALUE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow this[int index]
            {
                get
                {
                    return ((UDF_DETAILRow)(this.Rows[index]));
                }
            }

            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanging;

            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanged;

            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleting;

            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_DETAILRow(UDF_DETAILRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow AddUDF_DETAILRow(string KEY, string VALUE, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DETAIL)
            {
                UDF_DETAILRow rowUDF_DETAILRow = ((UDF_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DETAIL != null))
                {
                    columnValuesArray[2] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_UDF_DETAIL[9];
                }
                rowUDF_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_DETAILRow);
                return rowUDF_DETAILRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UDF_DETAILDataTable cln = ((UDF_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UDF_DETAILDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow NewUDF_DETAILRow()
            {
                return ((UDF_DETAILRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UDF_DETAILRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UDF_DETAILRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UDF_DETAILRowChanged != null))
                {
                    this.UDF_DETAILRowChanged(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UDF_DETAILRowChanging != null))
                {
                    this.UDF_DETAILRowChanging(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UDF_DETAILRowDeleted != null))
                {
                    this.UDF_DETAILRowDeleted(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UDF_DETAILRowDeleting != null))
                {
                    this.UDF_DETAILRowDeleting(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_DETAILRow(UDF_DETAILRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HP_PN_COMPONENTSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnHP_PN_COMPONENT;

            private global::System.Data.DataColumn columnPROD_DESC_COMP;

            private global::System.Data.DataColumn columnCOMPONENT_UNIT_QTY;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSDataTable()
            {
                this.TableName = "HP_PN_COMPONENTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HP_PN_COMPONENTSDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HP_PN_COMPONENTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_PN_COMPONENTColumn
            {
                get
                {
                    return this.columnHP_PN_COMPONENT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESC_COMPColumn
            {
                get
                {
                    return this.columnPROD_DESC_COMP;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPONENT_UNIT_QTYColumn
            {
                get
                {
                    return this.columnCOMPONENT_UNIT_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRow this[int index]
            {
                get
                {
                    return ((HP_PN_COMPONENTSRow)(this.Rows[index]));
                }
            }

            public event HP_PN_COMPONENTSRowChangeEventHandler HP_PN_COMPONENTSRowChanging;

            public event HP_PN_COMPONENTSRowChangeEventHandler HP_PN_COMPONENTSRowChanged;

            public event HP_PN_COMPONENTSRowChangeEventHandler HP_PN_COMPONENTSRowDeleting;

            public event HP_PN_COMPONENTSRowChangeEventHandler HP_PN_COMPONENTSRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHP_PN_COMPONENTSRow(HP_PN_COMPONENTSRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRow AddHP_PN_COMPONENTSRow(string HP_PN_COMPONENT, string PROD_DESC_COMP, double COMPONENT_UNIT_QTY, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HP_PN_COMPONENTS)
            {
                HP_PN_COMPONENTSRow rowHP_PN_COMPONENTSRow = ((HP_PN_COMPONENTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HP_PN_COMPONENT,
                        PROD_DESC_COMP,
                        COMPONENT_UNIT_QTY,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HP_PN_COMPONENTS != null))
                {
                    columnValuesArray[3] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_HP_PN_COMPONENTS[9];
                }
                rowHP_PN_COMPONENTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHP_PN_COMPONENTSRow);
                return rowHP_PN_COMPONENTSRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                HP_PN_COMPONENTSDataTable cln = ((HP_PN_COMPONENTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new HP_PN_COMPONENTSDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnHP_PN_COMPONENT = base.Columns["HP_PN_COMPONENT"];
                this.columnPROD_DESC_COMP = base.Columns["PROD_DESC_COMP"];
                this.columnCOMPONENT_UNIT_QTY = base.Columns["COMPONENT_UNIT_QTY"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnHP_PN_COMPONENT = new global::System.Data.DataColumn("HP_PN_COMPONENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_PN_COMPONENT);
                this.columnPROD_DESC_COMP = new global::System.Data.DataColumn("PROD_DESC_COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESC_COMP);
                this.columnCOMPONENT_UNIT_QTY = new global::System.Data.DataColumn("COMPONENT_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPONENT_UNIT_QTY);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
                this.columnHP_PN_COMPONENT.AllowDBNull = false;
                this.columnPROD_DESC_COMP.AllowDBNull = false;
                this.columnCOMPONENT_UNIT_QTY.AllowDBNull = false;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRow NewHP_PN_COMPONENTSRow()
            {
                return ((HP_PN_COMPONENTSRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new HP_PN_COMPONENTSRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(HP_PN_COMPONENTSRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.HP_PN_COMPONENTSRowChanged != null))
                {
                    this.HP_PN_COMPONENTSRowChanged(this, new HP_PN_COMPONENTSRowChangeEvent(((HP_PN_COMPONENTSRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.HP_PN_COMPONENTSRowChanging != null))
                {
                    this.HP_PN_COMPONENTSRowChanging(this, new HP_PN_COMPONENTSRowChangeEvent(((HP_PN_COMPONENTSRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.HP_PN_COMPONENTSRowDeleted != null))
                {
                    this.HP_PN_COMPONENTSRowDeleted(this, new HP_PN_COMPONENTSRowChangeEvent(((HP_PN_COMPONENTSRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.HP_PN_COMPONENTSRowDeleting != null))
                {
                    this.HP_PN_COMPONENTSRowDeleting(this, new HP_PN_COMPONENTSRowChangeEvent(((HP_PN_COMPONENTSRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHP_PN_COMPONENTSRow(HP_PN_COMPONENTSRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HP_PN_COMPONENTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnBOX_ID;

            private global::System.Data.DataColumn columnTRACK_NO_PARCEL;

            private global::System.Data.DataColumn columnBOX_WEIGHT;

            private global::System.Data.DataColumn columnBOX_WEIGHT_UOM;

            private global::System.Data.DataColumn columnBOX_UNIT_QTY;

            private global::System.Data.DataColumn columnBOX_Id_0;

            private global::System.Data.DataColumn columnPACK_ID_LINE_ITEM_Id;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXDataTable()
            {
                this.TableName = "BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_IDColumn
            {
                get
                {
                    return this.columnBOX_ID;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRACK_NO_PARCELColumn
            {
                get
                {
                    return this.columnTRACK_NO_PARCEL;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHTColumn
            {
                get
                {
                    return this.columnBOX_WEIGHT;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHT_UOMColumn
            {
                get
                {
                    return this.columnBOX_WEIGHT_UOM;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_UNIT_QTYColumn
            {
                get
                {
                    return this.columnBOX_UNIT_QTY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column
            {
                get
                {
                    return this.columnBOX_Id_0;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_LINE_ITEM_IdColumn
            {
                get
                {
                    return this.columnPACK_ID_LINE_ITEM_Id;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow this[int index]
            {
                get
                {
                    return ((BOXRow)(this.Rows[index]));
                }
            }

            public event BOXRowChangeEventHandler BOXRowChanging;

            public event BOXRowChangeEventHandler BOXRowChanged;

            public event BOXRowChangeEventHandler BOXRowDeleting;

            public event BOXRowChangeEventHandler BOXRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOXRow(BOXRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow AddBOXRow(string BOX_ID, string TRACK_NO_PARCEL, double BOX_WEIGHT, string BOX_WEIGHT_UOM, double BOX_UNIT_QTY, PACK_ID_LINE_ITEMRow parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_BOX)
            {
                BOXRow rowBOXRow = ((BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOX_ID,
                        TRACK_NO_PARCEL,
                        BOX_WEIGHT,
                        BOX_WEIGHT_UOM,
                        BOX_UNIT_QTY,
                        null,
                        null};
                if ((parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_BOX != null))
                {
                    columnValuesArray[6] = parentPACK_ID_LINE_ITEMRowByPACK_ID_LINE_ITEM_BOX[9];
                }
                rowBOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOXRow);
                return rowBOXRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                BOXDataTable cln = ((BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new BOXDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnBOX_ID = base.Columns["BOX_ID"];
                this.columnTRACK_NO_PARCEL = base.Columns["TRACK_NO_PARCEL"];
                this.columnBOX_WEIGHT = base.Columns["BOX_WEIGHT"];
                this.columnBOX_WEIGHT_UOM = base.Columns["BOX_WEIGHT_UOM"];
                this.columnBOX_UNIT_QTY = base.Columns["BOX_UNIT_QTY"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
                this.columnPACK_ID_LINE_ITEM_Id = base.Columns["PACK_ID_LINE_ITEM_Id"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnBOX_ID = new global::System.Data.DataColumn("BOX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_ID);
                this.columnTRACK_NO_PARCEL = new global::System.Data.DataColumn("TRACK_NO_PARCEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRACK_NO_PARCEL);
                this.columnBOX_WEIGHT = new global::System.Data.DataColumn("BOX_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT);
                this.columnBOX_WEIGHT_UOM = new global::System.Data.DataColumn("BOX_WEIGHT_UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT_UOM);
                this.columnBOX_UNIT_QTY = new global::System.Data.DataColumn("BOX_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_UNIT_QTY);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnPACK_ID_LINE_ITEM_Id = new global::System.Data.DataColumn("PACK_ID_LINE_ITEM_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPACK_ID_LINE_ITEM_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOX_Id_0}, true));
                this.columnBOX_ID.AllowDBNull = false;
                this.columnTRACK_NO_PARCEL.AllowDBNull = false;
                this.columnBOX_WEIGHT.AllowDBNull = false;
                this.columnBOX_WEIGHT_UOM.AllowDBNull = false;
                this.columnBOX_UNIT_QTY.AllowDBNull = false;
                this.columnBOX_Id_0.AutoIncrement = true;
                this.columnBOX_Id_0.AllowDBNull = false;
                this.columnBOX_Id_0.Unique = true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow NewBOXRow()
            {
                return ((BOXRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new BOXRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(BOXRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.BOXRowChanged != null))
                {
                    this.BOXRowChanged(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.BOXRowChanging != null))
                {
                    this.BOXRowChanging(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.BOXRowDeleted != null))
                {
                    this.BOXRowDeleted(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.BOXRowDeleting != null))
                {
                    this.BOXRowDeleting(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOXRow(BOXRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SERIAL_NUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSERIAL_NUM_Column;

            private global::System.Data.DataColumn columnBOX_Id_0;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMDataTable()
            {
                this.TableName = "SERIAL_NUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERIAL_NUMDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SERIAL_NUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERIAL_NUM_ColumnColumn
            {
                get
                {
                    return this.columnSERIAL_NUM_Column;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column
            {
                get
                {
                    return this.columnBOX_Id_0;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow this[int index]
            {
                get
                {
                    return ((SERIAL_NUMRow)(this.Rows[index]));
                }
            }

            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowChanging;

            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowChanged;

            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowDeleting;

            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSERIAL_NUMRow(SERIAL_NUMRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow AddSERIAL_NUMRow(string SERIAL_NUM_Column, BOXRow parentBOXRowByBOX_SERIAL_NUM)
            {
                SERIAL_NUMRow rowSERIAL_NUMRow = ((SERIAL_NUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SERIAL_NUM_Column,
                        null};
                if ((parentBOXRowByBOX_SERIAL_NUM != null))
                {
                    columnValuesArray[1] = parentBOXRowByBOX_SERIAL_NUM[5];
                }
                rowSERIAL_NUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSERIAL_NUMRow);
                return rowSERIAL_NUMRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                SERIAL_NUMDataTable cln = ((SERIAL_NUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new SERIAL_NUMDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSERIAL_NUM_Column = base.Columns["SERIAL_NUM_Column"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSERIAL_NUM_Column = new global::System.Data.DataColumn("SERIAL_NUM_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSERIAL_NUM_Column);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow NewSERIAL_NUMRow()
            {
                return ((SERIAL_NUMRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new SERIAL_NUMRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(SERIAL_NUMRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SERIAL_NUMRowChanged != null))
                {
                    this.SERIAL_NUMRowChanged(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SERIAL_NUMRowChanging != null))
                {
                    this.SERIAL_NUMRowChanging(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SERIAL_NUMRowDeleted != null))
                {
                    this.SERIAL_NUMRowDeleted(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SERIAL_NUMRowDeleting != null))
                {
                    this.SERIAL_NUMRowDeleting(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSERIAL_NUMRow(SERIAL_NUMRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SERIAL_NUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnKEY;

            private global::System.Data.DataColumn columnVALUE;

            private global::System.Data.DataColumn columnBOX_Id_0;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXDataTable()
            {
                this.TableName = "UDF_BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context)
                :
                    base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn
            {
                get
                {
                    return this.columnKEY;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn
            {
                get
                {
                    return this.columnVALUE;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column
            {
                get
                {
                    return this.columnBOX_Id_0;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow this[int index]
            {
                get
                {
                    return ((UDF_BOXRow)(this.Rows[index]));
                }
            }

            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanging;

            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanged;

            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleting;

            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_BOXRow(UDF_BOXRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow AddUDF_BOXRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_BOX)
            {
                UDF_BOXRow rowUDF_BOXRow = ((UDF_BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_BOX != null))
                {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_BOX[5];
                }
                rowUDF_BOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_BOXRow);
                return rowUDF_BOXRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                UDF_BOXDataTable cln = ((UDF_BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new UDF_BOXDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow NewUDF_BOXRow()
            {
                return ((UDF_BOXRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new UDF_BOXRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(UDF_BOXRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.UDF_BOXRowChanged != null))
                {
                    this.UDF_BOXRowChanged(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.UDF_BOXRowChanging != null))
                {
                    this.UDF_BOXRowChanging(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.UDF_BOXRowDeleted != null))
                {
                    this.UDF_BOXRowDeleted(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.UDF_BOXRowDeleting != null))
                {
                    this.UDF_BOXRowDeleting(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_BOXRow(UDF_BOXRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet ds = new NewDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PACK_IDRow : global::System.Data.DataRow
        {

            private PACK_IDDataTable tablePACK_ID;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACK_IDRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tablePACK_ID = ((PACK_IDDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAYBILL_NUMBER
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.WAYBILL_NUMBERColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.WAYBILL_NUMBERColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MASTER_WAYBILL_NUMBER
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.MASTER_WAYBILL_NUMBERColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.MASTER_WAYBILL_NUMBERColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.PACK_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_ID_CONS
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.PACK_ID_CONSColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_ID_CONSColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_REF
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_REFColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_REFColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTUAL_SHIPDATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.ACTUAL_SHIPDATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.ACTUAL_SHIPDATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENT_DATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.CURRENT_DATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.CURRENT_DATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ORDER_DATE_HP_PO
            {
                get
                {
                    return ((global::System.DateTime)(this[this.tablePACK_ID.ORDER_DATE_HP_POColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.ORDER_DATE_HP_POColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTL_CARRIER
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.INTL_CARRIERColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.INTL_CARRIERColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REG_CARRIER
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.REG_CARRIERColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.REG_CARRIERColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREF_GATEWAY
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.PREF_GATEWAYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PREF_GATEWAYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_MODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_MODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_MODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUTY_CODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.DUTY_CODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.DUTY_CODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_SERV_LEVEL
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.TRANS_SERV_LEVELColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.TRANS_SERV_LEVELColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_NAME_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_NAME_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_3
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_NAME_3Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_NAME_3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_STREETColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_STREETColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_STREET_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_STREET_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CITY
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_CITYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_CITYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_STATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_STATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ZIP
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_ZIPColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_ZIPColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_CODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_COUNTRY_CODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_COUNTRY_CODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_COUNTRY_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_COUNTRY_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CONTACT
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_CONTACTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_CONTACTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_TELEPHONE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_FROM_TELEPHONEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_FROM_TELEPHONEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESELLER_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RESELLER_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RESELLER_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_NAME_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_NAME_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME_3
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_NAME_3Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_NAME_3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STREET
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_STREETColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_STREETColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STREET_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_STREET_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_STREET_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_CITY
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_CITYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_CITYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_STATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_STATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_ZIP
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_ZIPColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_ZIPColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_COUNTRY_CODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_COUNTRY_CODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_COUNTRY_CODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_COUNTRY_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_COUNTRY_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_COUNTRY_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_CONTACT
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_CONTACTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_CONTACTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_TELEPHONE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_TO_TELEPHONEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_TO_TELEPHONEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOLD_TO_CONTACT
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SOLD_TO_CONTACTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SOLD_TO_CONTACTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_NAME_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_NAME_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_NAME_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_NAME_3
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_NAME_3Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_NAME_3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_STREET
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_STREETColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_STREETColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_STREET_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_STREET_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_STREET_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_CITY
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_CITYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_CITYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_STATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_STATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_STATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_ZIP
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_ZIPColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_ZIPColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_COUNTRY_CODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_COUNTRY_CODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_COUNTRY_CODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_COUNTRY_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_COUNTRY_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_COUNTRY_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_CONTACT
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_CONTACTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_CONTACTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_VIA_TELEPHONE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_VIA_TELEPHONEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_VIA_TELEPHONEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_NAME_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_NAME_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_NAME_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_NAME_3
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_NAME_3Column]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_NAME_3Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_STREET
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_STREETColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_STREETColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_STREET_2
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_STREET_2Column]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_STREET_2Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_CITY
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_CITYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_CITYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_STATE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_STATEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_STATEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_ZIP
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_ZIPColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_ZIPColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_COUNTRY_CODE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_COUNTRY_CODEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_COUNTRY_CODEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_COUNTRY_NAME
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_COUNTRY_NAMEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_COUNTRY_NAMEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_CONTACT
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_CONTACTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_CONTACTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RETURN_TO_TELEPHONE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.RETURN_TO_TELEPHONEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.RETURN_TO_TELEPHONEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_SO
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.HP_SOColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.HP_SOColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_COMPLETE_ID
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.SHIP_COMPLETE_IDColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.SHIP_COMPLETE_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUST_PO
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.CUST_POColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.CUST_POColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUST_ORD_REF
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID.CUST_ORD_REFColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.CUST_ORD_REFColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_UNIT_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.HAWB_UNIT_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.HAWB_UNIT_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_BOX_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.PACK_ID_BOX_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_ID_BOX_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_UNIT_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.PACK_ID_UNIT_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_ID_UNIT_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_BOX_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.HAWB_BOX_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.HAWB_BOX_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_PALLET_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.PACK_ID_PALLET_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_ID_PALLET_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_PALLET_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.HAWB_PALLET_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.HAWB_PALLET_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACKID_ACT_WEIGHT
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.PACKID_ACT_WEIGHTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACKID_ACT_WEIGHTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_ACT_WEIGHT
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID.HAWB_ACT_WEIGHTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.HAWB_ACT_WEIGHTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    return ((int)(this[this.tablePACK_ID.PACK_ID_IdColumn]));
                }
                set
                {
                    this[this.tablePACK_ID.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRow[] GetEXPORT_NOTES_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_EXPORT_NOTES_HEAD"] == null))
                {
                    return new EXPORT_NOTES_HEADRow[0];
                }
                else
                {
                    return ((EXPORT_NOTES_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_EXPORT_NOTES_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRow[] GetSHIPPING_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_SHIPPING_INSTR_HEAD"] == null))
                {
                    return new SHIPPING_INSTR_HEADRow[0];
                }
                else
                {
                    return ((SHIPPING_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_SHIPPING_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRow[] GetPICKING_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_PICKING_INSTR_HEAD"] == null))
                {
                    return new PICKING_INSTR_HEADRow[0];
                }
                else
                {
                    return ((PICKING_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_PICKING_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRow[] GetDELIVERY_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_DELIVERY_INSTR_HEAD"] == null))
                {
                    return new DELIVERY_INSTR_HEADRow[0];
                }
                else
                {
                    return ((DELIVERY_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_DELIVERY_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRow[] GetSPECIAL_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_SPECIAL_INSTR_HEAD"] == null))
                {
                    return new SPECIAL_INSTR_HEADRow[0];
                }
                else
                {
                    return ((SPECIAL_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_SPECIAL_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRow[] GetCUSTOMER_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_CUSTOMER_INSTR_HEAD"] == null))
                {
                    return new CUSTOMER_INSTR_HEADRow[0];
                }
                else
                {
                    return ((CUSTOMER_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_CUSTOMER_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRow[] GetLABEL_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LABEL_INSTR_HEAD"] == null))
                {
                    return new LABEL_INSTR_HEADRow[0];
                }
                else
                {
                    return ((LABEL_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LABEL_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRow[] GetCARRIER_INST_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_CARRIER_INST_HEAD"] == null))
                {
                    return new CARRIER_INST_HEADRow[0];
                }
                else
                {
                    return ((CARRIER_INST_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_CARRIER_INST_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRow[] GetINVOICE_UDF_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_INVOICE_UDF_HEAD"] == null))
                {
                    return new INVOICE_UDF_HEADRow[0];
                }
                else
                {
                    return ((INVOICE_UDF_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_INVOICE_UDF_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRow[] GetUDF_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_UDF_HEAD"] == null))
                {
                    return new UDF_HEADRow[0];
                }
                else
                {
                    return ((UDF_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_UDF_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow[] GetUDF_HEADERRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_UDF_HEADER"] == null))
                {
                    return new UDF_HEADERRow[0];
                }
                else
                {
                    return ((UDF_HEADERRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_UDF_HEADER"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRow[] GetHANDLING_INSTR_HEADRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_HANDLING_INSTR_HEAD"] == null))
                {
                    return new HANDLING_INSTR_HEADRow[0];
                }
                else
                {
                    return ((HANDLING_INSTR_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_HANDLING_INSTR_HEAD"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow[] GetPACK_ID_LINE_ITEMRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_PACK_ID_LINE_ITEM"] == null))
                {
                    return new PACK_ID_LINE_ITEMRow[0];
                }
                else
                {
                    return ((PACK_ID_LINE_ITEMRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_PACK_ID_LINE_ITEM"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXPORT_NOTES_HEADRow : global::System.Data.DataRow
        {

            private EXPORT_NOTES_HEADDataTable tableEXPORT_NOTES_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXPORT_NOTES_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableEXPORT_NOTES_HEAD = ((EXPORT_NOTES_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXPORT_NOTES_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableEXPORT_NOTES_HEAD.EXPORT_NOTES_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'EXPORT_NOTES_HEAD\' 中資料行 \'EXPORT_NOTES_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableEXPORT_NOTES_HEAD.EXPORT_NOTES_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'EXPORT_NOTES_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_EXPORT_NOTES_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_EXPORT_NOTES_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPORT_NOTES_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableEXPORT_NOTES_HEAD.EXPORT_NOTES_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPORT_NOTES_HEAD_ColumnNull()
            {
                this[this.tableEXPORT_NOTES_HEAD.EXPORT_NOTES_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableEXPORT_NOTES_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SHIPPING_INSTR_HEADRow : global::System.Data.DataRow
        {

            private SHIPPING_INSTR_HEADDataTable tableSHIPPING_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIPPING_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableSHIPPING_INSTR_HEAD = ((SHIPPING_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPPING_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSHIPPING_INSTR_HEAD.SHIPPING_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SHIPPING_INSTR_HEAD\' 中資料行 \'SHIPPING_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSHIPPING_INSTR_HEAD.SHIPPING_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SHIPPING_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_SHIPPING_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_SHIPPING_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPPING_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableSHIPPING_INSTR_HEAD.SHIPPING_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPPING_INSTR_HEAD_ColumnNull()
            {
                this[this.tableSHIPPING_INSTR_HEAD.SHIPPING_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableSHIPPING_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PICKING_INSTR_HEADRow : global::System.Data.DataRow
        {

            private PICKING_INSTR_HEADDataTable tablePICKING_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PICKING_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tablePICKING_INSTR_HEAD = ((PICKING_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICKING_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tablePICKING_INSTR_HEAD.PICKING_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'PICKING_INSTR_HEAD\' 中資料行 \'PICKING_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tablePICKING_INSTR_HEAD.PICKING_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'PICKING_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_PICKING_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_PICKING_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICKING_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tablePICKING_INSTR_HEAD.PICKING_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICKING_INSTR_HEAD_ColumnNull()
            {
                this[this.tablePICKING_INSTR_HEAD.PICKING_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tablePICKING_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DELIVERY_INSTR_HEADRow : global::System.Data.DataRow
        {

            private DELIVERY_INSTR_HEADDataTable tableDELIVERY_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DELIVERY_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableDELIVERY_INSTR_HEAD = ((DELIVERY_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDELIVERY_INSTR_HEAD.DELIVERY_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'DELIVERY_INSTR_HEAD\' 中資料行 \'DELIVERY_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableDELIVERY_INSTR_HEAD.DELIVERY_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'DELIVERY_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_DELIVERY_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_DELIVERY_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableDELIVERY_INSTR_HEAD.DELIVERY_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_INSTR_HEAD_ColumnNull()
            {
                this[this.tableDELIVERY_INSTR_HEAD.DELIVERY_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableDELIVERY_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SPECIAL_INSTR_HEADRow : global::System.Data.DataRow
        {

            private SPECIAL_INSTR_HEADDataTable tableSPECIAL_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIAL_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableSPECIAL_INSTR_HEAD = ((SPECIAL_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIAL_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSPECIAL_INSTR_HEAD.SPECIAL_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SPECIAL_INSTR_HEAD\' 中資料行 \'SPECIAL_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSPECIAL_INSTR_HEAD.SPECIAL_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SPECIAL_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_SPECIAL_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_SPECIAL_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIAL_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableSPECIAL_INSTR_HEAD.SPECIAL_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIAL_INSTR_HEAD_ColumnNull()
            {
                this[this.tableSPECIAL_INSTR_HEAD.SPECIAL_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableSPECIAL_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CUSTOMER_INSTR_HEADRow : global::System.Data.DataRow
        {

            private CUSTOMER_INSTR_HEADDataTable tableCUSTOMER_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUSTOMER_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableCUSTOMER_INSTR_HEAD = ((CUSTOMER_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableCUSTOMER_INSTR_HEAD.CUSTOMER_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CUSTOMER_INSTR_HEAD\' 中資料行 \'CUSTOMER_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCUSTOMER_INSTR_HEAD.CUSTOMER_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CUSTOMER_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_CUSTOMER_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_CUSTOMER_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableCUSTOMER_INSTR_HEAD.CUSTOMER_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_INSTR_HEAD_ColumnNull()
            {
                this[this.tableCUSTOMER_INSTR_HEAD.CUSTOMER_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableCUSTOMER_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LABEL_INSTR_HEADRow : global::System.Data.DataRow
        {

            private LABEL_INSTR_HEADDataTable tableLABEL_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LABEL_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableLABEL_INSTR_HEAD = ((LABEL_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LABEL_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableLABEL_INSTR_HEAD.LABEL_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'LABEL_INSTR_HEAD\' 中資料行 \'LABEL_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableLABEL_INSTR_HEAD.LABEL_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'LABEL_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LABEL_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LABEL_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLABEL_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableLABEL_INSTR_HEAD.LABEL_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLABEL_INSTR_HEAD_ColumnNull()
            {
                this[this.tableLABEL_INSTR_HEAD.LABEL_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableLABEL_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CARRIER_INST_HEADRow : global::System.Data.DataRow
        {

            private CARRIER_INST_HEADDataTable tableCARRIER_INST_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CARRIER_INST_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableCARRIER_INST_HEAD = ((CARRIER_INST_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CARRIER_INST_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableCARRIER_INST_HEAD.CARRIER_INST_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CARRIER_INST_HEAD\' 中資料行 \'CARRIER_INST_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCARRIER_INST_HEAD.CARRIER_INST_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CARRIER_INST_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_CARRIER_INST_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_CARRIER_INST_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCARRIER_INST_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableCARRIER_INST_HEAD.CARRIER_INST_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCARRIER_INST_HEAD_ColumnNull()
            {
                this[this.tableCARRIER_INST_HEAD.CARRIER_INST_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableCARRIER_INST_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class INVOICE_UDF_HEADRow : global::System.Data.DataRow
        {

            private INVOICE_UDF_HEADDataTable tableINVOICE_UDF_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal INVOICE_UDF_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableINVOICE_UDF_HEAD = ((INVOICE_UDF_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVOICE_UDF_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableINVOICE_UDF_HEAD.INVOICE_UDF_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'INVOICE_UDF_HEAD\' 中資料行 \'INVOICE_UDF_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableINVOICE_UDF_HEAD.INVOICE_UDF_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'INVOICE_UDF_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_INVOICE_UDF_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_INVOICE_UDF_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVOICE_UDF_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableINVOICE_UDF_HEAD.INVOICE_UDF_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVOICE_UDF_HEAD_ColumnNull()
            {
                this[this.tableINVOICE_UDF_HEAD.INVOICE_UDF_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableINVOICE_UDF_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_HEADRow : global::System.Data.DataRow
        {

            private UDF_HEADDataTable tableUDF_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUDF_HEAD = ((UDF_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UDF_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUDF_HEAD.UDF_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_HEAD\' 中資料行 \'UDF_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_HEAD.UDF_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUDF_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_UDF_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_UDF_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUDF_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableUDF_HEAD.UDF_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUDF_HEAD_ColumnNull()
            {
                this[this.tableUDF_HEAD.UDF_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableUDF_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableUDF_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_HEADERRow : global::System.Data.DataRow
        {

            private UDF_HEADERDataTable tableUDF_HEADER;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUDF_HEADER = ((UDF_HEADERDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY
            {
                get
                {
                    return ((string)(this[this.tableUDF_HEADER.KEYColumn]));
                }
                set
                {
                    this[this.tableUDF_HEADER.KEYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE
            {
                get
                {
                    return ((string)(this[this.tableUDF_HEADER.VALUEColumn]));
                }
                set
                {
                    this[this.tableUDF_HEADER.VALUEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUDF_HEADER.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_HEADER\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_HEADER.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_UDF_HEADER"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_UDF_HEADER"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableUDF_HEADER.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableUDF_HEADER.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HANDLING_INSTR_HEADRow : global::System.Data.DataRow
        {

            private HANDLING_INSTR_HEADDataTable tableHANDLING_INSTR_HEAD;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANDLING_INSTR_HEADRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableHANDLING_INSTR_HEAD = ((HANDLING_INSTR_HEADDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HANDLING_INSTR_HEAD_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHANDLING_INSTR_HEAD.HANDLING_INSTR_HEAD_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'HANDLING_INSTR_HEAD\' 中資料行 \'HANDLING_INSTR_HEAD_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableHANDLING_INSTR_HEAD.HANDLING_INSTR_HEAD_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'HANDLING_INSTR_HEAD\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_HANDLING_INSTR_HEAD"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_HANDLING_INSTR_HEAD"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHANDLING_INSTR_HEAD_ColumnNull()
            {
                return this.IsNull(this.tableHANDLING_INSTR_HEAD.HANDLING_INSTR_HEAD_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHANDLING_INSTR_HEAD_ColumnNull()
            {
                this[this.tableHANDLING_INSTR_HEAD.HANDLING_INSTR_HEAD_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tableHANDLING_INSTR_HEAD.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PACK_ID_LINE_ITEMRow : global::System.Data.DataRow
        {

            private PACK_ID_LINE_ITEMDataTable tablePACK_ID_LINE_ITEM;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PACK_ID_LINE_ITEMRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tablePACK_ID_LINE_ITEM = ((PACK_ID_LINE_ITEMDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_SO_LINE_ITEM
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.HP_SO_LINE_ITEMColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.HP_SO_LINE_ITEMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_TYPE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.PROD_TYPEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PROD_TYPEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_PN
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.HP_PNColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.HP_PNColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESC_BASE
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.PROD_DESC_BASEColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PROD_DESC_BASEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_Cust_PN
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.HP_Cust_PNColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.HP_Cust_PNColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_LINE_ITEM_UNIT_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_UNIT_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_UNIT_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_LINE_ITEM_BOX_QTY
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_BOX_QTYColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_BOX_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_ID_UNIT_UOM
            {
                get
                {
                    return ((string)(this[this.tablePACK_ID_LINE_ITEM.PACK_ID_UNIT_UOMColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PACK_ID_UNIT_UOMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EXTD_BOX_WEIGHT
            {
                get
                {
                    return ((double)(this[this.tablePACK_ID_LINE_ITEM.EXTD_BOX_WEIGHTColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.EXTD_BOX_WEIGHTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    return ((int)(this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn]));
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'PACK_ID_LINE_ITEM\' 中資料行 \'PACK_ID_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow PACK_IDRow
            {
                get
                {
                    return ((PACK_IDRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_PACK_ID_LINE_ITEM"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_PACK_ID_LINE_ITEM"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_IdNull()
            {
                return this.IsNull(this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_IdNull()
            {
                this[this.tablePACK_ID_LINE_ITEM.PACK_ID_IdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRow[] GetEXPORT_NOTES_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL"] == null))
                {
                    return new EXPORT_NOTES_DETAILRow[0];
                }
                else
                {
                    return ((EXPORT_NOTES_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRow[] GetSHIPPING_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL"] == null))
                {
                    return new SHIPPING_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((SHIPPING_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRow[] GetPICKING_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL"] == null))
                {
                    return new PICKING_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((PICKING_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRow[] GetDELIVERY_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL"] == null))
                {
                    return new DELIVERY_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((DELIVERY_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRow[] GetSPECIAL_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL"] == null))
                {
                    return new SPECIAL_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((SPECIAL_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRow[] GetCUSTOMER_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL"] == null))
                {
                    return new CUSTOMER_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((CUSTOMER_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRow[] GetHANDLING_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL"] == null))
                {
                    return new HANDLING_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((HANDLING_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRow[] GetUID_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_UID_INSTR_DETAIL"] == null))
                {
                    return new UID_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((UID_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_UID_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRow[] GetCONFIG_INSTR_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL"] == null))
                {
                    return new CONFIG_INSTR_DETAILRow[0];
                }
                else
                {
                    return ((CONFIG_INSTR_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRow[] GetMAXKIT_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_MAXKIT_DETAIL"] == null))
                {
                    return new MAXKIT_DETAILRow[0];
                }
                else
                {
                    return ((MAXKIT_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_MAXKIT_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRow[] GetUDF_DETRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_UDF_DET"] == null))
                {
                    return new UDF_DETRow[0];
                }
                else
                {
                    return ((UDF_DETRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_UDF_DET"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow[] GetUDF_DETAILRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_UDF_DETAIL"] == null))
                {
                    return new UDF_DETAILRow[0];
                }
                else
                {
                    return ((UDF_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_UDF_DETAIL"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRow[] GetHP_PN_COMPONENTSRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_HP_PN_COMPONENTS"] == null))
                {
                    return new HP_PN_COMPONENTSRow[0];
                }
                else
                {
                    return ((HP_PN_COMPONENTSRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_HP_PN_COMPONENTS"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow[] GetBOXRows()
            {
                if ((this.Table.ChildRelations["PACK_ID_LINE_ITEM_BOX"] == null))
                {
                    return new BOXRow[0];
                }
                else
                {
                    return ((BOXRow[])(base.GetChildRows(this.Table.ChildRelations["PACK_ID_LINE_ITEM_BOX"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXPORT_NOTES_DETAILRow : global::System.Data.DataRow
        {

            private EXPORT_NOTES_DETAILDataTable tableEXPORT_NOTES_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXPORT_NOTES_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableEXPORT_NOTES_DETAIL = ((EXPORT_NOTES_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXPORT_NOTES_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableEXPORT_NOTES_DETAIL.EXPORT_NOTES_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'EXPORT_NOTES_DETAIL\' 中資料行 \'EXPORT_NOTES_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableEXPORT_NOTES_DETAIL.EXPORT_NOTES_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'EXPORT_NOTES_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_EXPORT_NOTES_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXPORT_NOTES_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableEXPORT_NOTES_DETAIL.EXPORT_NOTES_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXPORT_NOTES_DETAIL_ColumnNull()
            {
                this[this.tableEXPORT_NOTES_DETAIL.EXPORT_NOTES_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableEXPORT_NOTES_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SHIPPING_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private SHIPPING_INSTR_DETAILDataTable tableSHIPPING_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIPPING_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableSHIPPING_INSTR_DETAIL = ((SHIPPING_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPPING_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSHIPPING_INSTR_DETAIL.SHIPPING_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SHIPPING_INSTR_DETAIL\' 中資料行 \'SHIPPING_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSHIPPING_INSTR_DETAIL.SHIPPING_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SHIPPING_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_SHIPPING_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPPING_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableSHIPPING_INSTR_DETAIL.SHIPPING_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPPING_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableSHIPPING_INSTR_DETAIL.SHIPPING_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableSHIPPING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PICKING_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private PICKING_INSTR_DETAILDataTable tablePICKING_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PICKING_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tablePICKING_INSTR_DETAIL = ((PICKING_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PICKING_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tablePICKING_INSTR_DETAIL.PICKING_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'PICKING_INSTR_DETAIL\' 中資料行 \'PICKING_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tablePICKING_INSTR_DETAIL.PICKING_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'PICKING_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_PICKING_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICKING_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tablePICKING_INSTR_DETAIL.PICKING_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICKING_INSTR_DETAIL_ColumnNull()
            {
                this[this.tablePICKING_INSTR_DETAIL.PICKING_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tablePICKING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DELIVERY_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private DELIVERY_INSTR_DETAILDataTable tableDELIVERY_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DELIVERY_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableDELIVERY_INSTR_DETAIL = ((DELIVERY_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DELIVERY_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDELIVERY_INSTR_DETAIL.DELIVERY_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'DELIVERY_INSTR_DETAIL\' 中資料行 \'DELIVERY_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableDELIVERY_INSTR_DETAIL.DELIVERY_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'DELIVERY_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_DELIVERY_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDELIVERY_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableDELIVERY_INSTR_DETAIL.DELIVERY_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDELIVERY_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableDELIVERY_INSTR_DETAIL.DELIVERY_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableDELIVERY_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SPECIAL_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private SPECIAL_INSTR_DETAILDataTable tableSPECIAL_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPECIAL_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableSPECIAL_INSTR_DETAIL = ((SPECIAL_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPECIAL_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSPECIAL_INSTR_DETAIL.SPECIAL_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SPECIAL_INSTR_DETAIL\' 中資料行 \'SPECIAL_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSPECIAL_INSTR_DETAIL.SPECIAL_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SPECIAL_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_SPECIAL_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPECIAL_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableSPECIAL_INSTR_DETAIL.SPECIAL_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPECIAL_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableSPECIAL_INSTR_DETAIL.SPECIAL_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableSPECIAL_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CUSTOMER_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private CUSTOMER_INSTR_DETAILDataTable tableCUSTOMER_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CUSTOMER_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableCUSTOMER_INSTR_DETAIL = ((CUSTOMER_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableCUSTOMER_INSTR_DETAIL.CUSTOMER_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CUSTOMER_INSTR_DETAIL\' 中資料行 \'CUSTOMER_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCUSTOMER_INSTR_DETAIL.CUSTOMER_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CUSTOMER_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_CUSTOMER_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMER_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableCUSTOMER_INSTR_DETAIL.CUSTOMER_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMER_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableCUSTOMER_INSTR_DETAIL.CUSTOMER_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableCUSTOMER_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HANDLING_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private HANDLING_INSTR_DETAILDataTable tableHANDLING_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HANDLING_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableHANDLING_INSTR_DETAIL = ((HANDLING_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HANDLING_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHANDLING_INSTR_DETAIL.HANDLING_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'HANDLING_INSTR_DETAIL\' 中資料行 \'HANDLING_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableHANDLING_INSTR_DETAIL.HANDLING_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'HANDLING_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_HANDLING_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHANDLING_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableHANDLING_INSTR_DETAIL.HANDLING_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHANDLING_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableHANDLING_INSTR_DETAIL.HANDLING_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableHANDLING_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UID_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private UID_INSTR_DETAILDataTable tableUID_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UID_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUID_INSTR_DETAIL = ((UID_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UID_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUID_INSTR_DETAIL.UID_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UID_INSTR_DETAIL\' 中資料行 \'UID_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUID_INSTR_DETAIL.UID_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UID_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_UID_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_UID_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUID_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableUID_INSTR_DETAIL.UID_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUID_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableUID_INSTR_DETAIL.UID_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableUID_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CONFIG_INSTR_DETAILRow : global::System.Data.DataRow
        {

            private CONFIG_INSTR_DETAILDataTable tableCONFIG_INSTR_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CONFIG_INSTR_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableCONFIG_INSTR_DETAIL = ((CONFIG_INSTR_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONFIG_INSTR_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableCONFIG_INSTR_DETAIL.CONFIG_INSTR_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CONFIG_INSTR_DETAIL\' 中資料行 \'CONFIG_INSTR_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCONFIG_INSTR_DETAIL.CONFIG_INSTR_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'CONFIG_INSTR_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_CONFIG_INSTR_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONFIG_INSTR_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableCONFIG_INSTR_DETAIL.CONFIG_INSTR_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONFIG_INSTR_DETAIL_ColumnNull()
            {
                this[this.tableCONFIG_INSTR_DETAIL.CONFIG_INSTR_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableCONFIG_INSTR_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MAXKIT_DETAILRow : global::System.Data.DataRow
        {

            private MAXKIT_DETAILDataTable tableMAXKIT_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MAXKIT_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableMAXKIT_DETAIL = ((MAXKIT_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAXKIT_DETAIL_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableMAXKIT_DETAIL.MAXKIT_DETAIL_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'MAXKIT_DETAIL\' 中資料行 \'MAXKIT_DETAIL_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableMAXKIT_DETAIL.MAXKIT_DETAIL_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'MAXKIT_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_MAXKIT_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_MAXKIT_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAXKIT_DETAIL_ColumnNull()
            {
                return this.IsNull(this.tableMAXKIT_DETAIL.MAXKIT_DETAIL_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAXKIT_DETAIL_ColumnNull()
            {
                this[this.tableMAXKIT_DETAIL.MAXKIT_DETAIL_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableMAXKIT_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_DETRow : global::System.Data.DataRow
        {

            private UDF_DETDataTable tableUDF_DET;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUDF_DET = ((UDF_DETDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UDF_DET_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableUDF_DET.UDF_DET_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_DET\' 中資料行 \'UDF_DET_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_DET.UDF_DET_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_DET\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_UDF_DET"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_UDF_DET"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUDF_DET_ColumnNull()
            {
                return this.IsNull(this.tableUDF_DET.UDF_DET_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUDF_DET_ColumnNull()
            {
                this[this.tableUDF_DET.UDF_DET_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableUDF_DET.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_DETAILRow : global::System.Data.DataRow
        {

            private UDF_DETAILDataTable tableUDF_DETAIL;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY
            {
                get
                {
                    return ((string)(this[this.tableUDF_DETAIL.KEYColumn]));
                }
                set
                {
                    this[this.tableUDF_DETAIL.KEYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE
            {
                get
                {
                    return ((string)(this[this.tableUDF_DETAIL.VALUEColumn]));
                }
                set
                {
                    this[this.tableUDF_DETAIL.VALUEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_DETAIL\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_UDF_DETAIL"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_UDF_DETAIL"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableUDF_DETAIL.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HP_PN_COMPONENTSRow : global::System.Data.DataRow
        {

            private HP_PN_COMPONENTSDataTable tableHP_PN_COMPONENTS;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HP_PN_COMPONENTSRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableHP_PN_COMPONENTS = ((HP_PN_COMPONENTSDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_PN_COMPONENT
            {
                get
                {
                    return ((string)(this[this.tableHP_PN_COMPONENTS.HP_PN_COMPONENTColumn]));
                }
                set
                {
                    this[this.tableHP_PN_COMPONENTS.HP_PN_COMPONENTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESC_COMP
            {
                get
                {
                    return ((string)(this[this.tableHP_PN_COMPONENTS.PROD_DESC_COMPColumn]));
                }
                set
                {
                    this[this.tableHP_PN_COMPONENTS.PROD_DESC_COMPColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double COMPONENT_UNIT_QTY
            {
                get
                {
                    return ((double)(this[this.tableHP_PN_COMPONENTS.COMPONENT_UNIT_QTYColumn]));
                }
                set
                {
                    this[this.tableHP_PN_COMPONENTS.COMPONENT_UNIT_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'HP_PN_COMPONENTS\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_HP_PN_COMPONENTS"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_HP_PN_COMPONENTS"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableHP_PN_COMPONENTS.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOXRow : global::System.Data.DataRow
        {

            private BOXDataTable tableBOX;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableBOX = ((BOXDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_ID
            {
                get
                {
                    return ((string)(this[this.tableBOX.BOX_IDColumn]));
                }
                set
                {
                    this[this.tableBOX.BOX_IDColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRACK_NO_PARCEL
            {
                get
                {
                    return ((string)(this[this.tableBOX.TRACK_NO_PARCELColumn]));
                }
                set
                {
                    this[this.tableBOX.TRACK_NO_PARCELColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BOX_WEIGHT
            {
                get
                {
                    return ((double)(this[this.tableBOX.BOX_WEIGHTColumn]));
                }
                set
                {
                    this[this.tableBOX.BOX_WEIGHTColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_WEIGHT_UOM
            {
                get
                {
                    return ((string)(this[this.tableBOX.BOX_WEIGHT_UOMColumn]));
                }
                set
                {
                    this[this.tableBOX.BOX_WEIGHT_UOMColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BOX_UNIT_QTY
            {
                get
                {
                    return ((double)(this[this.tableBOX.BOX_UNIT_QTYColumn]));
                }
                set
                {
                    this[this.tableBOX.BOX_UNIT_QTYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0
            {
                get
                {
                    return ((int)(this[this.tableBOX.BOX_Id_0Column]));
                }
                set
                {
                    this[this.tableBOX.BOX_Id_0Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PACK_ID_LINE_ITEM_Id
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableBOX.PACK_ID_LINE_ITEM_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'BOX\' 中資料行 \'PACK_ID_LINE_ITEM_Id\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableBOX.PACK_ID_LINE_ITEM_IdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow PACK_ID_LINE_ITEMRow
            {
                get
                {
                    return ((PACK_ID_LINE_ITEMRow)(this.GetParentRow(this.Table.ParentRelations["PACK_ID_LINE_ITEM_BOX"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["PACK_ID_LINE_ITEM_BOX"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPACK_ID_LINE_ITEM_IdNull()
            {
                return this.IsNull(this.tableBOX.PACK_ID_LINE_ITEM_IdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPACK_ID_LINE_ITEM_IdNull()
            {
                this[this.tableBOX.PACK_ID_LINE_ITEM_IdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow[] GetSERIAL_NUMRows()
            {
                if ((this.Table.ChildRelations["BOX_SERIAL_NUM"] == null))
                {
                    return new SERIAL_NUMRow[0];
                }
                else
                {
                    return ((SERIAL_NUMRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_SERIAL_NUM"])));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow[] GetUDF_BOXRows()
            {
                if ((this.Table.ChildRelations["BOX_UDF_BOX"] == null))
                {
                    return new UDF_BOXRow[0];
                }
                else
                {
                    return ((UDF_BOXRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_BOX"])));
                }
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SERIAL_NUMRow : global::System.Data.DataRow
        {

            private SERIAL_NUMDataTable tableSERIAL_NUM;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERIAL_NUMRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableSERIAL_NUM = ((SERIAL_NUMDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERIAL_NUM_Column
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SERIAL_NUM\' 中資料行 \'SERIAL_NUM_Column\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSERIAL_NUM.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'SERIAL_NUM\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableSERIAL_NUM.BOX_Id_0Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow
            {
                get
                {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_SERIAL_NUM"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_SERIAL_NUM"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERIAL_NUM_ColumnNull()
            {
                return this.IsNull(this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERIAL_NUM_ColumnNull()
            {
                this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null()
            {
                return this.IsNull(this.tableSERIAL_NUM.BOX_Id_0Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null()
            {
                this[this.tableSERIAL_NUM.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_BOXRow : global::System.Data.DataRow
        {

            private UDF_BOXDataTable tableUDF_BOX;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXRow(global::System.Data.DataRowBuilder rb)
                :
                    base(rb)
            {
                this.tableUDF_BOX = ((UDF_BOXDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY
            {
                get
                {
                    return ((string)(this[this.tableUDF_BOX.KEYColumn]));
                }
                set
                {
                    this[this.tableUDF_BOX.KEYColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE
            {
                get
                {
                    return ((string)(this[this.tableUDF_BOX.VALUEColumn]));
                }
                set
                {
                    this[this.tableUDF_BOX.VALUEColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableUDF_BOX.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_BOX\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set
                {
                    this[this.tableUDF_BOX.BOX_Id_0Column] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow
            {
                get
                {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_BOX"])));
                }
                set
                {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_BOX"]);
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null()
            {
                return this.IsNull(this.tableUDF_BOX.BOX_Id_0Column);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null()
            {
                this[this.tableUDF_BOX.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PACK_IDRowChangeEvent : global::System.EventArgs
        {

            private PACK_IDRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRowChangeEvent(PACK_IDRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_IDRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXPORT_NOTES_HEADRowChangeEvent : global::System.EventArgs
        {

            private EXPORT_NOTES_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRowChangeEvent(EXPORT_NOTES_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SHIPPING_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private SHIPPING_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRowChangeEvent(SHIPPING_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PICKING_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private PICKING_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRowChangeEvent(PICKING_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DELIVERY_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private DELIVERY_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRowChangeEvent(DELIVERY_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SPECIAL_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private SPECIAL_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRowChangeEvent(SPECIAL_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CUSTOMER_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private CUSTOMER_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRowChangeEvent(CUSTOMER_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LABEL_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private LABEL_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRowChangeEvent(LABEL_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LABEL_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CARRIER_INST_HEADRowChangeEvent : global::System.EventArgs
        {

            private CARRIER_INST_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRowChangeEvent(CARRIER_INST_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CARRIER_INST_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class INVOICE_UDF_HEADRowChangeEvent : global::System.EventArgs
        {

            private INVOICE_UDF_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRowChangeEvent(INVOICE_UDF_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public INVOICE_UDF_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_HEADRowChangeEvent : global::System.EventArgs
        {

            private UDF_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRowChangeEvent(UDF_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_HEADERRowChangeEvent : global::System.EventArgs
        {

            private UDF_HEADERRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRowChangeEvent(UDF_HEADERRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HANDLING_INSTR_HEADRowChangeEvent : global::System.EventArgs
        {

            private HANDLING_INSTR_HEADRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRowChangeEvent(HANDLING_INSTR_HEADRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_HEADRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PACK_ID_LINE_ITEMRowChangeEvent : global::System.EventArgs
        {

            private PACK_ID_LINE_ITEMRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRowChangeEvent(PACK_ID_LINE_ITEMRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PACK_ID_LINE_ITEMRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXPORT_NOTES_DETAILRowChangeEvent : global::System.EventArgs
        {

            private EXPORT_NOTES_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRowChangeEvent(EXPORT_NOTES_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXPORT_NOTES_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SHIPPING_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private SHIPPING_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRowChangeEvent(SHIPPING_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIPPING_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PICKING_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private PICKING_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRowChangeEvent(PICKING_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PICKING_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DELIVERY_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private DELIVERY_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRowChangeEvent(DELIVERY_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DELIVERY_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SPECIAL_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private SPECIAL_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRowChangeEvent(SPECIAL_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPECIAL_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CUSTOMER_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private CUSTOMER_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRowChangeEvent(CUSTOMER_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CUSTOMER_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HANDLING_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private HANDLING_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRowChangeEvent(HANDLING_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HANDLING_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UID_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private UID_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRowChangeEvent(UID_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UID_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CONFIG_INSTR_DETAILRowChangeEvent : global::System.EventArgs
        {

            private CONFIG_INSTR_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRowChangeEvent(CONFIG_INSTR_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CONFIG_INSTR_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MAXKIT_DETAILRowChangeEvent : global::System.EventArgs
        {

            private MAXKIT_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRowChangeEvent(MAXKIT_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MAXKIT_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_DETRowChangeEvent : global::System.EventArgs
        {

            private UDF_DETRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRowChangeEvent(UDF_DETRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_DETAILRowChangeEvent : global::System.EventArgs
        {

            private UDF_DETAILRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRowChangeEvent(UDF_DETAILRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HP_PN_COMPONENTSRowChangeEvent : global::System.EventArgs
        {

            private HP_PN_COMPONENTSRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRowChangeEvent(HP_PN_COMPONENTSRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HP_PN_COMPONENTSRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOXRowChangeEvent : global::System.EventArgs
        {

            private BOXRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRowChangeEvent(BOXRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SERIAL_NUMRowChangeEvent : global::System.EventArgs
        {

            private SERIAL_NUMRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRowChangeEvent(SERIAL_NUMRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_BOXRowChangeEvent : global::System.EventArgs
        {

            private UDF_BOXRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRowChangeEvent(UDF_BOXRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}
