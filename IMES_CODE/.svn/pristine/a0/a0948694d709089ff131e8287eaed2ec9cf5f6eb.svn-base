<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2014 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:param name="ACTUAL_SHIPDATE_MAX" select="'20'"/>
	<xsl:param name="CURRENT_DATE_MAX" select="'20'"/>
	<xsl:param name="CUST_ORD_REF_max" select="'30'"/>
	<xsl:param name="CUST_PO_max" select="'30'"/>
	<xsl:param name="DUTY_CODE_MAX" select="'20'"/>
	<xsl:param name="HP_SO_LINE_ITEM_max" select="'10'"/>
	<xsl:param name="INTL_CARRIER_MAX" select="'20'"/>
	<xsl:param name="PACK_ID_CONS_MAX" select="'20'"/>
	<xsl:param name="PACK_ID_MAX" select="'20'"/>
	<xsl:param name="REG_CARRIER_MAX" select="'20'"/>
	<xsl:param name="RESELLER_NAME_MAX" select="'35'"/>
	<xsl:param name="RETURN_TO_CITY_max" select="'30'"/>
	<xsl:param name="RETURN_TO_COUNTRY_NAME_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_2_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_3_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_max" select="'30'"/>
	<xsl:param name="RETURN_TO_STATE_max" select="'3'"/>
	<xsl:param name="RETURN_TO_STREET_2_max" select="'35'"/>
	<xsl:param name="RETURN_TO_STREET_max" select="'35'"/>
	<xsl:param name="RETURN_TO_TELEPHONE_max" select="'30'"/>
	<xsl:param name="RETURN_TO_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_FROM_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_FROM_COUNTRY_NAME_max" select="'13'"/>
	<xsl:param name="SHIP_FROM_NAME_2_MAX" select="'30'"/>
	<xsl:param name="SHIP_FROM_NAME_MAX" select="'45'"/>
	<xsl:param name="SHIP_FROM_STATE_max" select="'3'"/>
	<xsl:param name="SHIP_FROM_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_FROM_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_FROM_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_MODE_MAX" select="'20'"/>
	<xsl:param name="SHIP_TO_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_TO_CONTACT_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_COUNTRY_NAME_MAX" select="'25'"/>
	<xsl:param name="SHIP_TO_ID_MAX" select="'30'"/>
	<xsl:param name="SHIP_TO_NAME_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_3_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_STATE_max" select="'3'"/>
	<xsl:param name="SHIP_TO_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_TELEPHONE_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_ZIP_MAX" select="'10'"/>
	<xsl:param name="SHIP_VIA_CITY_MAX" select="'30'"/>
	<xsl:param name="SHIP_VIA_COUNTRY_NAME_MAX" select="'25'"/>
	<xsl:param name="SHIP_VIA_NAME_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_NAME_3_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_NAME_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_STATE_MAX" select="'3'"/>
	<xsl:param name="SHIP_VIA_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_ZIP_MAX" select="'10'"/>
	<xsl:param name="WAYBILL_NUMBER_MAX" select="'20'"/>
	<xsl:param name="aVersion_name" select="'NGLAPKS150511'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-0-even" margin-left="0.5cm" margin-right="0.5cm" page-height="8.27in" page-width="11.69in" margin-top="0.0in" margin-bottom="0.0in">
				<fo:region-body margin-top="7.35cm" margin-bottom="0.50in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="even-page-header" overflow="hidden" extent="7.35cm"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="0.50in"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-0-odd" margin-left="0.5cm" margin-right="0.5cm" page-height="8.27in" page-width="11.69in" margin-top="0.0in" margin-bottom="0.0in">
				<fo:region-body margin-top="7.35cm" margin-bottom="0.50in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="odd-page-header" overflow="hidden" extent="7.35cm"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="0.50in"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-0">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-0-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-0-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2014 sp1 (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-0" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-header">
					<fo:block-container overflow="hidden" display-align="before">
						<fo:block>
							<xsl:call-template name="legacy_headerall"/>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-header">
					<fo:block-container overflow="hidden" display-align="before">
						<fo:block>
							<xsl:call-template name="legacy_headerall"/>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="0.50in" overflow="hidden" display-align="after">
						<fo:block>
							<xsl:call-template name="legacy_footerall"/>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="0.50in" overflow="hidden" display-align="after">
						<fo:block>
							<xsl:call-template name="legacy_footerall"/>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<fo:block>
								<fo:leader leader-pattern="space"/>
							</fo:block>
							<xsl:for-each select="PACK_ID">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="PACK_ID_LINE_ITEM">
									<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" table-layout="fixed" width="100%">
										<fo:table-column column-width="3%"/>
										<fo:table-column column-width="10%"/>
										<fo:table-column column-width="10%"/>
										<fo:table-column column-width="12%"/>
										<fo:table-column column-width="39%"/>
										<fo:table-column column-width="7%"/>
										<fo:table-column column-width="9%"/>
										<fo:table-column column-width="10%"/>
										<xsl:variable name="altova:CurrContextGrid_1" select="."/>
										<fo:table-header start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row background-color="#787878" color="white" text-align="center">
													<fo:table-cell border="1pt" border-color="black" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>NO.</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>PACK ID</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>HP SO#</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>CUSTOMER PO#</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>ORDER REF#</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>PRODUCT DESCRIPTION</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:text>PART NUMBER</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>UNIT QTY</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>BOX WEIGHT</xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x200B;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																	<fo:inline>
																		<xsl:text>KG</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
													<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="before">
														<fo:block-container overflow="hidden">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>NET WEIGHT</xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x200B;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																	<fo:inline>
																		<xsl:text>KG</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block-container>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="PACK_ID_LINE_ITEM">
													<fo:table-row>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline>
																		<xsl:value-of select="position()"/>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="PACK_ID">
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template_2">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_2),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_2"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_2"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="PACK_ID">
																			<xsl:for-each select="PACK_ID">
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:variable name="value-of-template_3">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_3),'&#x200B;')">
																						<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																							<xsl:copy-of select="$value-of-template_3"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																							<xsl:copy-of select="$value-of-template_3"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																	<fo:inline font-size="6pt">
																		<xsl:text>PACK ID: </xsl:text>
																	</fo:inline>
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="PACK_ID">
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template_4">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_4),'&#x200B;')">
																						<fo:block font-size="6pt">
																							<xsl:copy-of select="$value-of-template_4"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-size="6pt">
																							<xsl:copy-of select="$value-of-template_4"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<xsl:for-each select="$XML">
																		<xsl:for-each select="PACK_ID">
																			<xsl:for-each select="HP_SO">
																				<xsl:variable name="value-of-template_5">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_5),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_5"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_5"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:block/>
																	<xsl:if test="string-length(HP_SO_LINE_ITEM) &gt;0">
																		<fo:inline>
																			<xsl:text>Item: </xsl:text>
																		</fo:inline>
																	</xsl:if>
																	<fo:inline>
																		<xsl:value-of select="substring(  HP_SO_LINE_ITEM  , 1 , $HP_SO_LINE_ITEM_max )"/>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<fo:inline>
																			<xsl:value-of select="substring(  ../CUST_PO  , 1 , $CUST_PO_max )"/>
																		</fo:inline>
																		<fo:inline>
																			<xsl:value-of select="substring(  ../CUST_ORD_REF  , 1 , $CUST_ORD_REF_max )"/>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="left">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:for-each select="PROD_TYPE">
																			<xsl:variable name="value-of-template_6">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_6),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_6"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_6"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:for-each select="PROD_DESC_BASE">
																			<xsl:variable name="value-of-template_7">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_7),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_7"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_7"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block alignment-baseline="before-edge" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template_8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																	<xsl:if test="string-length( HP_PN_COMPONENTS/COMPONENT_UNIT_QTY ) &gt;0">
																		<fo:inline>
																			<xsl:text>Above model includes the following integrated components:</xsl:text>
																		</fo:inline>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x200B;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																			<fo:inline>
																				<xsl:text>&#160;</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</xsl:if>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<xsl:if test="HP_PN_COMPONENTS">
																		<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" height="7pt" line-height="7pt" padding="0pt" table-layout="fixed" width="100%">
																			<fo:table-column column-width="25%"/>
																			<fo:table-column column-width="70%"/>
																			<fo:table-column column-width="5%"/>
																			<xsl:variable name="altova:CurrContextGrid_9" select="."/>
																			<fo:table-body start-indent="0pt">
																				<xsl:variable name="altova:tablerows">
																					<xsl:for-each select="HP_PN_COMPONENTS">
																						<fo:table-row>
																							<fo:table-cell border="NONE" padding="2pt" display-align="center">
																								<fo:block-container overflow="hidden">
																									<fo:block text-align="left">
																										<xsl:if test="string-length(  COMPONENT_UNIT_QTY  ) &gt;0">
																											<fo:inline>
																												<xsl:text>&gt; </xsl:text>
																											</fo:inline>
																											<xsl:for-each select="HP_PN_COMPONENT">
																												<xsl:variable name="value-of-template_10">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_10),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_10"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_10"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:if>
																									</fo:block>
																								</fo:block-container>
																							</fo:table-cell>
																							<fo:table-cell border="NONE" padding="2pt" display-align="center">
																								<fo:block-container overflow="hidden">
																									<fo:block text-align="left">
																										<xsl:if test="string-length(  COMPONENT_UNIT_QTY  ) &gt;0">
																											<xsl:for-each select="PROD_DESC_COMP">
																												<xsl:variable name="value-of-template_11">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_11),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_11"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_11"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:if>
																									</fo:block>
																								</fo:block-container>
																							</fo:table-cell>
																							<fo:table-cell border="NONE" padding="2pt" display-align="center">
																								<fo:block-container overflow="hidden">
																									<fo:block text-align="right">
																										<xsl:if test="string-length( . )  &gt; 0">
																											<xsl:for-each select="COMPONENT_UNIT_QTY">
																												<xsl:variable name="value-of-template_12">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_12),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_12"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_12"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																											<fo:inline>
																												<xsl:text>EA</xsl:text>
																											</fo:inline>
																										</xsl:if>
																									</fo:block>
																								</fo:block-container>
																							</fo:table-cell>
																						</fo:table-row>
																					</xsl:for-each>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="string($altova:tablerows)">
																						<xsl:copy-of select="$altova:tablerows"/>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:table-row>
																							<fo:table-cell>
																								<fo:block/>
																							</fo:table-cell>
																						</fo:table-row>
																					</xsl:otherwise>
																				</xsl:choose>
																			</fo:table-body>
																		</fo:table>
																	</xsl:if>
																	<xsl:if test="count( SPECIAL_INSTR_DETAIL)">
																		<fo:block>
																			<fo:leader leader-pattern="space"/>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x200B;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																			<fo:block>
																				<fo:leader leader-pattern="space"/>
																			</fo:block>
																			<xsl:if test="string-length(PICKING_INSTR_DETAIL) &gt;0 or string-length(SHIPPING_INSTR_DETAIL) &gt; 0 or string-length(DELIVERY_INSTR_DETAIL) &gt; 0 or string-length(SPECIAL_INSTR_DETAIL) &gt; 0 or string-length(HANDLING_INSTR_DETAIL) &gt; 0">
																				<fo:inline>
																					<xsl:text>Detailed Instructions:</xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<fo:block/>
																			<xsl:for-each select="PICKING_INSTR_DETAIL">
																				<xsl:variable name="value-of-template_13">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_13),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_13"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_13"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:block/>
																			<xsl:for-each select="SHIPPING_INSTR_DETAIL">
																				<xsl:variable name="value-of-template_14">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_14),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_14"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_14"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:block/>
																			<xsl:for-each select="DELIVERY_INSTR_DETAIL">
																				<xsl:variable name="value-of-template_15">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_15),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_15"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_15"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:block/>
																			<xsl:for-each select="SPECIAL_INSTR_DETAIL">
																				<xsl:variable name="value-of-template_16">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_16),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_16"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_16"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:block/>
																			<xsl:for-each select="HANDLING_INSTR_DETAIL">
																				<xsl:variable name="value-of-template_17">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template_17),'&#x200B;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template_17"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</fo:block>
																	</xsl:if>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<xsl:for-each select="PACK_ID_LINE_ITEM_UNIT_QTY">
																		<xsl:variable name="value-of-template_18">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_18),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_18"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_18"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="NONE" padding="0" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<fo:inline>
																		<xsl:value-of select="format-number(number(EXTD_BOX_WEIGHT  div  PACK_ID_LINE_ITEM_BOX_QTY), '##0.00')"/>
																	</fo:inline>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
														<fo:table-cell border="none" padding="0pt" display-align="before">
															<fo:block-container overflow="hidden">
																<fo:block text-align="right">
																	<xsl:for-each select="EXTD_BOX_WEIGHT">
																		<fo:inline>
																			<xsl:value-of select="format-number(number(string(.)), '##0.00')"/>
																		</fo:inline>
																	</xsl:for-each>
																</fo:block>
															</fo:block-container>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:for-each>
							<fo:block/>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="1pt" leader-length="100%"/>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" border-style="none" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" alignment-baseline="before-edge" table-layout="fixed" width="100%">
								<fo:table-column column-width="0.500in"/>
								<fo:table-column column-width="1.200in"/>
								<fo:table-column column-width="1.200in"/>
								<fo:table-column column-width="6.250in"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<xsl:variable name="altova:CurrContextGrid_20" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>TOTAL</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x200B;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
															<fo:inline>
																<xsl:text>Total Units:</xsl:text>
															</fo:inline>
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x200B;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
															<fo:inline>
																<xsl:text>Total Boxes:</xsl:text>
															</fo:inline>
														</fo:block>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x200B;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
															<fo:inline>
																<xsl:text>Total Pallets:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<xsl:for-each select="PACK_ID">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<xsl:for-each select="PACK_ID_UNIT_QTY">
																	<xsl:variable name="value-of-template_21">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_21),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_21"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_21"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<xsl:for-each select="PACK_ID_BOX_QTY">
																	<xsl:variable name="value-of-template_22">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_22),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_22"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_22"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block text-align="left" margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</fo:block>
														</xsl:for-each>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:inline>
															<xsl:value-of select="sum(   PACK_ID/PACK_ID_LINE_ITEM/PACK_ID_LINE_ITEM_UNIT_QTY )"/>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="right">
														<fo:inline>
															<xsl:value-of select="format-number(number(sum(   PACK_ID/PACK_ID_LINE_ITEM/EXTD_BOX_WEIGHT   )), '##0.00')"/>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" padding="0pt" table-layout="fixed" width="100%">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-column column-width="30%"/>
								<xsl:variable name="altova:CurrContextGrid_23" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row height="0.01in">
											<fo:table-cell border="NONE" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" height="8PT" line-height="8pt" padding="2pt" display-align="before">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>THIS DOCUMENT IS TRUE AND ACCURATE.</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row>
											<fo:table-cell border="NONE" border-collapse="collapse" border-style="none" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" height="15pt" line-height="6pt" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
										<fo:table-row height="0.15in">
											<fo:table-cell border="NONE" border-collapse="collapse" border-style="none" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left"/>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-top-color="black" border-top-style="solid" border-top-width="0.5pt" line-height="6pt" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>(Signature)</xsl:text>
														</fo:inline>
														<fo:block/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" line-height="8pt" padding="0pt" table-layout="fixed" width="100%">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-column column-width="30%"/>
								<xsl:variable name="altova:CurrContextGrid_24" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell border="NONE" border-collapse="collapse" border-style="none" padding="2pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<xsl:if test="string-length(PACK_ID/RETURN_TO_NAME) &gt;0 or string-length(PACK_ID/RETURN_TO_NAME_2) &gt; 0 or string-length(PACK_ID/RETURN_TO_NAME_3) &gt; 0 or string-length(PACK_ID/RETURN_TO_STREET) &gt; 0 or string-length(PACK_ID/RETURN_TO_STREET_2) &gt; 0 or string-length(PACK_ID/RETURN_TO_CITY) &gt; 0 or string-length(PACK_ID/RETURN_TO_TELEPHONE) &gt; 0">
															<fo:inline font-family="Arial" font-size="8pt" font-weight="bold">
																<xsl:text>RETURN TO:</xsl:text>
															</fo:inline>
															<fo:block/>
															<fo:inline>
																<xsl:value-of select="substring(   PACK_ID/RETURN_TO_NAME , 1 , $RETURN_TO_NAME_max )"/>
															</fo:inline>
															<fo:block/>
															<fo:inline>
																<xsl:value-of select="substring(  PACK_ID/RETURN_TO_NAME_2 , 1 , $RETURN_TO_NAME_2_max )"/>
															</fo:inline>
															<fo:block/>
															<fo:inline>
																<xsl:value-of select="substring(  PACK_ID/RETURN_TO_NAME_3  , 1 , $RETURN_TO_NAME_3_max )"/>
															</fo:inline>
															<fo:block/>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:value-of select="substring(  PACK_ID/RETURN_TO_STREET , 1 , $RETURN_TO_STREET_max )"/>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:value-of select="substring(  PACK_ID/RETURN_TO_STREET_2  , 1 , $RETURN_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  PACK_ID/RETURN_TO_CITY  , 1 , $RETURN_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length( PACK_ID/RETURN_TO_STATE ) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring(  PACK_ID/RETURN_TO_STATE , 1, $RETURN_TO_STATE_max ))"/>
																	</fo:inline>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring(  PACK_ID/RETURN_TO_ZIP , 1 , $RETURN_TO_ZIP_max))"/>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:value-of select="substring(  PACK_ID/RETURN_TO_COUNTRY_NAME , 1 , $RETURN_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="substring(  PACK_ID/RETURN_TO_TELEPHONE , 1 , $RETURN_TO_TELEPHONE_max )"/>
																</fo:inline>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
															</fo:block>
														</xsl:if>
														<fo:block/>
														<xsl:if test="string-length(PACK_ID/PICKING_INSTR_HEAD) &gt;0 or string-length(PACK_ID/SHIPPING_INSTR_HEAD) &gt; 0 or string-length(PACK_ID/DELIVERY_INSTR_HEAD) &gt; 0 or string-length(PACK_ID/SPECIAL_INSTR_HEAD) &gt; 0">
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
															<fo:block>
																<fo:leader leader-pattern="space"/>
															</fo:block>
															<xsl:for-each select="PACK_ID">
																<fo:inline font-family="Arial" font-size="8pt" font-weight="bold">
																	<xsl:text>SPECIAL INSTRUCTIONS:</xsl:text>
																</fo:inline>
																<xsl:for-each select="PICKING_INSTR_HEAD">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:variable name="value-of-template_25">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_25),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_25"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_25"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:block>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="SHIPPING_INSTR_HEAD">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:variable name="value-of-template_26">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_26),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_26"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_26"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:block>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="DELIVERY_INSTR_HEAD">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:variable name="value-of-template_27">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_27),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_27"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_27"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:block>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="SPECIAL_INSTR_HEAD">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
																		<xsl:variable name="value-of-template_28">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_28),'&#x200B;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template_28"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template_28"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:block>
																</xsl:for-each>
																<fo:block/>
															</xsl:for-each>
														</xsl:if>
														<fo:block/>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
											<fo:table-cell border="NONE" border-style="none" padding="0pt" display-align="center">
												<fo:block-container overflow="hidden">
													<fo:block text-align="left">
														<xsl:if test="string-length( PACK_ID/PACK_ID_LINE_ITEM/PROD_TYPE ) &gt;0">
															<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
																<xsl:text>Contains Lithium Ion Batteries - Handle with care.</xsl:text>
															</fo:inline>
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
															<fo:block/>
															<fo:inline>
																<xsl:text>May be flammable if package is damaged. In the event packaging is damaged, special procedures must be used including inspection and repackaging if necessary. For more information call international +1-800-474-6836 and ask for technical support.</xsl:text>
															</fo:inline>
														</xsl:if>
														<fo:block/>
														<fo:block>
															<fo:leader leader-pattern="space"/>
														</fo:block>
													</fo:block>
												</fo:block-container>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</xsl:for-each>
						<fo:block/>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="legacy_headerall">
		<fo:inline-container>
			<fo:block>
				<xsl:text>&#x200B;</xsl:text>
			</fo:block>
		</fo:inline-container>
		<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" table-layout="fixed" width="100%">
			<fo:table-column column-width="21%"/>
			<fo:table-column column-width="33.300%"/>
			<fo:table-column column-width="1.750in"/>
			<fo:table-column column-width="3.010in"/>
			<xsl:variable name="altova:CurrContextGrid_29" select="."/>
			<fo:table-body start-indent="0pt">
				<xsl:variable name="altova:tablerows">
					<fo:table-row height="0.01in">
						<fo:table-cell border="NONE" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left"/>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left"/>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left"/>
							</fo:block-container>
						</fo:table-cell>
					</fo:table-row>
					<fo:table-row height="0.01in">
						<fo:table-cell border="none" font-family="Arial" font-size="12pt" font-style="normal" font-variant="normal" font-weight="bold" line-height="12pt" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( RESELLER_NAME , 1 , $RESELLER_NAME_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" font-family="Arial" font-size="12pt" font-style="normal" font-variant="normal" font-weight="bold" line-height="12pt" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="right">
									<fo:inline>
										<xsl:text> PACKING LIST</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" line-height="12pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="right"/>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" line-height="12pt" padding="2pt" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:inline>
										<xsl:text>DATE:&#160; </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( CURRENT_DATE , 1 , $CURRENT_DATE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>PAGE&#160; </xsl:text>
									</fo:inline>
									<fo:page-number/>
									<fo:inline>
										<xsl:text>&#160; of&#160;&#160; </xsl:text>
									</fo:inline>
									<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
									<fo:block/>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
					</fo:table-row>
					<fo:table-row height="1.97in">
						<fo:table-cell border="NONE" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" display-align="before">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_MAX )"/>
											</fo:inline>
											<fo:block/>
											<fo:inline>
												<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_MAX )"/>
											</fo:inline>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_FROM_STREET , 1 , $SHIP_FROM_STREET_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_MAX )"/>
												</fo:inline>
												<fo:block/>
												<fo:inline>
													<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
												</fo:inline>
												<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
													<fo:inline>
														<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
													</fo:inline>
												</xsl:if>
												<fo:inline>
													<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:text>&#160; </xsl:text>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline font-weight="bold">
													<xsl:text>SHIP TO:</xsl:text>
												</fo:inline>
												<fo:inline>
													<xsl:text>&#160; </xsl:text>
												</fo:inline>
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_ID , 1 , $SHIP_TO_ID_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_NAME_2 , 1 , $SHIP_TO_NAME_2_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_STREET , 1 , $SHIP_TO_STREET_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
												</fo:inline>
												<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
													<fo:inline>
														<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
													</fo:inline>
													<fo:inline>
														<xsl:text>&#160;</xsl:text>
													</fo:inline>
												</xsl:if>
												<xsl:if test="string-length(SHIP_TO_ZIP) &gt;0">
													<fo:inline>
														<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_MAX ))"/>
													</fo:inline>
												</xsl:if>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_CONTACT , 1 , $SHIP_TO_CONTACT_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_TO_TELEPHONE , 1 , $SHIP_TO_TELEPHONE_MAX )"/>
												</fo:inline>
											</fo:block>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" font-weight="normal" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" display-align="before">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:inline>
										<xsl:text>&#160; </xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-family="Arial" font-size="8pt" font-weight="bold">
										<xsl:text>SHIP VIA:</xsl:text>
									</fo:inline>
									<fo:block/>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_NAME , 1 , $SHIP_VIA_NAME_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_NAME_2 , 1 , $SHIP_VIA_NAME_2_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_NAME_3 , 1 , $SHIP_VIA_NAME_3_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_STREET , 1 , $SHIP_VIA_STREET_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_STREET_2 , 1 , $SHIP_VIA_STREET_2_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_CITY , 1 , $SHIP_VIA_CITY_MAX )"/>
												</fo:inline>
												<xsl:if test="string-length(SHIP_VIA_STATE) &gt;0">
													<fo:inline>
														<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_VIA_STATE , 1, $SHIP_VIA_STATE_MAX ))"/>
													</fo:inline>
													<fo:inline>
														<xsl:text>&#160;</xsl:text>
													</fo:inline>
												</xsl:if>
												<xsl:if test="string-length(SHIP_VIA_ZIP) &gt;0">
													<fo:inline>
														<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_VIA_ZIP , 1, $SHIP_VIA_ZIP_MAX ))"/>
													</fo:inline>
												</xsl:if>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin-right="100% - 100%" space-before="0" space-after="0" margin="0pt">
												<fo:inline>
													<xsl:value-of select="substring( SHIP_VIA_COUNTRY_NAME , 1 , $SHIP_VIA_COUNTRY_NAME_MAX )"/>
												</fo:inline>
											</fo:block>
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" padding="2pt" display-align="before">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:inline>
										<xsl:text> CONSOLIDATED PACK ID</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>PACK ID</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>AIR WAYBILL #</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>DUTY CODE</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>INTERNATIONAL CARRIER / FF</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>REGIONAL CARRIER / FF</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP MODE</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP DATE</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP FROM</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" display-align="before">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:inline>
										<xsl:text> : </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( PACK_ID_CONS , 1 , $PACK_ID_CONS_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( PACK_ID , 1 , $PACK_ID_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_MAX )"/>
											</fo:inline>
											<fo:block/>
										</xsl:for-each>
									</xsl:for-each>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( DUTY_CODE , 1 , $DUTY_CODE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  INTL_CARRIER  , 1 , $INTL_CARRIER_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  REG_CARRIER  , 1 , $REG_CARRIER_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_MODE  , 1 , $SHIP_MODE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  ACTUAL_SHIPDATE  , 1 , $ACTUAL_SHIPDATE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_FROM_COUNTRY_NAME  ,1 , $SHIP_FROM_COUNTRY_NAME_max )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
					</fo:table-row>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="string($altova:tablerows)">
						<xsl:copy-of select="$altova:tablerows"/>
					</xsl:when>
					<xsl:otherwise>
						<fo:table-row>
							<fo:table-cell>
								<fo:block/>
							</fo:table-cell>
						</fo:table-row>
					</xsl:otherwise>
				</xsl:choose>
			</fo:table-body>
		</fo:table>
		<fo:block>
			<fo:leader leader-pattern="space"/>
		</fo:block>
	</xsl:template>
	<xsl:template name="legacy_footerall">
		<fo:inline-container>
			<fo:block>
				<xsl:text>&#x200B;</xsl:text>
			</fo:block>
		</fo:inline-container>
		<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="7pt" padding="0pt" table-layout="fixed" width="100%">
			<fo:table-column column-width="15%"/>
			<fo:table-column column-width="60%"/>
			<fo:table-column column-width="2.792in"/>
			<xsl:variable name="altova:CurrContextGrid_30" select="."/>
			<fo:table-body start-indent="0pt">
				<xsl:variable name="altova:tablerows">
					<fo:table-row height="0.31in">
						<fo:table-cell border="NONE" padding="0" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:inline font-size="6pt">
										<xsl:value-of select="$aVersion_name"/>
									</fo:inline>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" font-size="smaller" padding="0" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="left">
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block font-family="Arial Black" font-size="7pt" margin-right="100% - 100%" white-space="pre" white-space-collapse="false" margin="0pt">
										<xsl:for-each select="$XML">
											<xsl:for-each select="PACK_ID">
												<xsl:for-each select="UDF_HEADER">
													<xsl:if test="./KEY = &apos;ODM_TEXT2&apos; and string-length(./VALUE)&gt;0">
														<fo:inline font-weight="bold">
															<xsl:value-of select="substring( VALUE , 1 , 80 )"/>
														</fo:inline>
													</xsl:if>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
						<fo:table-cell border="NONE" padding="0" display-align="center">
							<fo:block-container overflow="hidden">
								<fo:block text-align="right">
									<fo:inline>
										<xsl:text>Packing List - CUSTOMER COPY</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:block-container>
						</fo:table-cell>
					</fo:table-row>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="string($altova:tablerows)">
						<xsl:copy-of select="$altova:tablerows"/>
					</xsl:when>
					<xsl:otherwise>
						<fo:table-row>
							<fo:table-cell>
								<fo:block/>
							</fo:table-cell>
						</fo:table-row>
					</xsl:otherwise>
				</xsl:choose>
			</fo:table-body>
		</fo:table>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
