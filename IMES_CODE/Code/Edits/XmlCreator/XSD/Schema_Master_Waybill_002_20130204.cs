//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.3643
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace MasterWaybilTD {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MASTER_WAYBILLS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MASTER_WAYBILLS : global::System.Data.DataSet {
        
        private MASTER_WAYBILLDataTable tableMASTER_WAYBILL;
        
        private HOUSE_WAYBILLDataTable tableHOUSE_WAYBILL;
        
        private PALLETDataTable tablePALLET;
        
        private UDF_PALLETDataTable tableUDF_PALLET;
        
        private BOXDataTable tableBOX;
        
        private SERIAL_NUMDataTable tableSERIAL_NUM;
        
        private UDF_HEADERDataTable tableUDF_HEADER;
        
        private UDF_DETAILDataTable tableUDF_DETAIL;
        
        private UDF_BOXDataTable tableUDF_BOX;
        
        private global::System.Data.DataRelation relationMASTER_WAYBILL_HOUSE_WAYBILL;
        
        private global::System.Data.DataRelation relationHOUSE_WAYBILL_PALLET;
        
        private global::System.Data.DataRelation relationPALLET_UDF_PALLET;
        
        private global::System.Data.DataRelation relationPALLET_BOX;
        
        private global::System.Data.DataRelation relationBOX_SERIAL_NUM;
        
        private global::System.Data.DataRelation relationBOX_UDF_HEADER;
        
        private global::System.Data.DataRelation relationBOX_UDF_DETAIL;
        
        private global::System.Data.DataRelation relationBOX_UDF_BOX;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MASTER_WAYBILLS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MASTER_WAYBILLS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MASTER_WAYBILL"] != null)) {
                    base.Tables.Add(new MASTER_WAYBILLDataTable(ds.Tables["MASTER_WAYBILL"]));
                }
                if ((ds.Tables["HOUSE_WAYBILL"] != null)) {
                    base.Tables.Add(new HOUSE_WAYBILLDataTable(ds.Tables["HOUSE_WAYBILL"]));
                }
                if ((ds.Tables["PALLET"] != null)) {
                    base.Tables.Add(new PALLETDataTable(ds.Tables["PALLET"]));
                }
                if ((ds.Tables["UDF_PALLET"] != null)) {
                    base.Tables.Add(new UDF_PALLETDataTable(ds.Tables["UDF_PALLET"]));
                }
                if ((ds.Tables["BOX"] != null)) {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["SERIAL_NUM"] != null)) {
                    base.Tables.Add(new SERIAL_NUMDataTable(ds.Tables["SERIAL_NUM"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null)) {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null)) {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["UDF_BOX"] != null)) {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MASTER_WAYBILLDataTable MASTER_WAYBILL {
            get {
                return this.tableMASTER_WAYBILL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HOUSE_WAYBILLDataTable HOUSE_WAYBILL {
            get {
                return this.tableHOUSE_WAYBILL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PALLETDataTable PALLET {
            get {
                return this.tablePALLET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_PALLETDataTable UDF_PALLET {
            get {
                return this.tableUDF_PALLET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BOXDataTable BOX {
            get {
                return this.tableBOX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SERIAL_NUMDataTable SERIAL_NUM {
            get {
                return this.tableSERIAL_NUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_HEADERDataTable UDF_HEADER {
            get {
                return this.tableUDF_HEADER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_DETAILDataTable UDF_DETAIL {
            get {
                return this.tableUDF_DETAIL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UDF_BOXDataTable UDF_BOX {
            get {
                return this.tableUDF_BOX;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MASTER_WAYBILLS cln = ((MASTER_WAYBILLS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MASTER_WAYBILL"] != null)) {
                    base.Tables.Add(new MASTER_WAYBILLDataTable(ds.Tables["MASTER_WAYBILL"]));
                }
                if ((ds.Tables["HOUSE_WAYBILL"] != null)) {
                    base.Tables.Add(new HOUSE_WAYBILLDataTable(ds.Tables["HOUSE_WAYBILL"]));
                }
                if ((ds.Tables["PALLET"] != null)) {
                    base.Tables.Add(new PALLETDataTable(ds.Tables["PALLET"]));
                }
                if ((ds.Tables["UDF_PALLET"] != null)) {
                    base.Tables.Add(new UDF_PALLETDataTable(ds.Tables["UDF_PALLET"]));
                }
                if ((ds.Tables["BOX"] != null)) {
                    base.Tables.Add(new BOXDataTable(ds.Tables["BOX"]));
                }
                if ((ds.Tables["SERIAL_NUM"] != null)) {
                    base.Tables.Add(new SERIAL_NUMDataTable(ds.Tables["SERIAL_NUM"]));
                }
                if ((ds.Tables["UDF_HEADER"] != null)) {
                    base.Tables.Add(new UDF_HEADERDataTable(ds.Tables["UDF_HEADER"]));
                }
                if ((ds.Tables["UDF_DETAIL"] != null)) {
                    base.Tables.Add(new UDF_DETAILDataTable(ds.Tables["UDF_DETAIL"]));
                }
                if ((ds.Tables["UDF_BOX"] != null)) {
                    base.Tables.Add(new UDF_BOXDataTable(ds.Tables["UDF_BOX"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMASTER_WAYBILL = ((MASTER_WAYBILLDataTable)(base.Tables["MASTER_WAYBILL"]));
            if ((initTable == true)) {
                if ((this.tableMASTER_WAYBILL != null)) {
                    this.tableMASTER_WAYBILL.InitVars();
                }
            }
            this.tableHOUSE_WAYBILL = ((HOUSE_WAYBILLDataTable)(base.Tables["HOUSE_WAYBILL"]));
            if ((initTable == true)) {
                if ((this.tableHOUSE_WAYBILL != null)) {
                    this.tableHOUSE_WAYBILL.InitVars();
                }
            }
            this.tablePALLET = ((PALLETDataTable)(base.Tables["PALLET"]));
            if ((initTable == true)) {
                if ((this.tablePALLET != null)) {
                    this.tablePALLET.InitVars();
                }
            }
            this.tableUDF_PALLET = ((UDF_PALLETDataTable)(base.Tables["UDF_PALLET"]));
            if ((initTable == true)) {
                if ((this.tableUDF_PALLET != null)) {
                    this.tableUDF_PALLET.InitVars();
                }
            }
            this.tableBOX = ((BOXDataTable)(base.Tables["BOX"]));
            if ((initTable == true)) {
                if ((this.tableBOX != null)) {
                    this.tableBOX.InitVars();
                }
            }
            this.tableSERIAL_NUM = ((SERIAL_NUMDataTable)(base.Tables["SERIAL_NUM"]));
            if ((initTable == true)) {
                if ((this.tableSERIAL_NUM != null)) {
                    this.tableSERIAL_NUM.InitVars();
                }
            }
            this.tableUDF_HEADER = ((UDF_HEADERDataTable)(base.Tables["UDF_HEADER"]));
            if ((initTable == true)) {
                if ((this.tableUDF_HEADER != null)) {
                    this.tableUDF_HEADER.InitVars();
                }
            }
            this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(base.Tables["UDF_DETAIL"]));
            if ((initTable == true)) {
                if ((this.tableUDF_DETAIL != null)) {
                    this.tableUDF_DETAIL.InitVars();
                }
            }
            this.tableUDF_BOX = ((UDF_BOXDataTable)(base.Tables["UDF_BOX"]));
            if ((initTable == true)) {
                if ((this.tableUDF_BOX != null)) {
                    this.tableUDF_BOX.InitVars();
                }
            }
            this.relationMASTER_WAYBILL_HOUSE_WAYBILL = this.Relations["MASTER_WAYBILL_HOUSE_WAYBILL"];
            this.relationHOUSE_WAYBILL_PALLET = this.Relations["HOUSE_WAYBILL_PALLET"];
            this.relationPALLET_UDF_PALLET = this.Relations["PALLET_UDF_PALLET"];
            this.relationPALLET_BOX = this.Relations["PALLET_BOX"];
            this.relationBOX_SERIAL_NUM = this.Relations["BOX_SERIAL_NUM"];
            this.relationBOX_UDF_HEADER = this.Relations["BOX_UDF_HEADER"];
            this.relationBOX_UDF_DETAIL = this.Relations["BOX_UDF_DETAIL"];
            this.relationBOX_UDF_BOX = this.Relations["BOX_UDF_BOX"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MASTER_WAYBILLS";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMASTER_WAYBILL = new MASTER_WAYBILLDataTable();
            base.Tables.Add(this.tableMASTER_WAYBILL);
            this.tableHOUSE_WAYBILL = new HOUSE_WAYBILLDataTable();
            base.Tables.Add(this.tableHOUSE_WAYBILL);
            this.tablePALLET = new PALLETDataTable();
            base.Tables.Add(this.tablePALLET);
            this.tableUDF_PALLET = new UDF_PALLETDataTable();
            base.Tables.Add(this.tableUDF_PALLET);
            this.tableBOX = new BOXDataTable();
            base.Tables.Add(this.tableBOX);
            this.tableSERIAL_NUM = new SERIAL_NUMDataTable();
            base.Tables.Add(this.tableSERIAL_NUM);
            this.tableUDF_HEADER = new UDF_HEADERDataTable();
            base.Tables.Add(this.tableUDF_HEADER);
            this.tableUDF_DETAIL = new UDF_DETAILDataTable();
            base.Tables.Add(this.tableUDF_DETAIL);
            this.tableUDF_BOX = new UDF_BOXDataTable();
            base.Tables.Add(this.tableUDF_BOX);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("MASTER_WAYBILL_HOUSE_WAYBILL", new global::System.Data.DataColumn[] {
                        this.tableMASTER_WAYBILL.MASTER_WAYBILL_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn});
            this.tableHOUSE_WAYBILL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("HOUSE_WAYBILL_PALLET", new global::System.Data.DataColumn[] {
                        this.tableHOUSE_WAYBILL.HOUSE_WAYBILL_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePALLET.HOUSE_WAYBILL_IdColumn});
            this.tablePALLET.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PALLET_UDF_PALLET", new global::System.Data.DataColumn[] {
                        this.tablePALLET.PALLET_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_PALLET.PALLET_Id_0Column});
            this.tableUDF_PALLET.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("PALLET_BOX", new global::System.Data.DataColumn[] {
                        this.tablePALLET.PALLET_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableBOX.PALLET_Id_0Column});
            this.tableBOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_SERIAL_NUM", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableSERIAL_NUM.BOX_Id_0Column});
            this.tableSERIAL_NUM.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.BOX_Id_0Column});
            this.tableUDF_HEADER.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.BOX_Id_0Column});
            this.tableUDF_DETAIL.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column});
            this.tableUDF_BOX.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationMASTER_WAYBILL_HOUSE_WAYBILL = new global::System.Data.DataRelation("MASTER_WAYBILL_HOUSE_WAYBILL", new global::System.Data.DataColumn[] {
                        this.tableMASTER_WAYBILL.MASTER_WAYBILL_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn}, false);
            this.relationMASTER_WAYBILL_HOUSE_WAYBILL.Nested = true;
            this.Relations.Add(this.relationMASTER_WAYBILL_HOUSE_WAYBILL);
            this.relationHOUSE_WAYBILL_PALLET = new global::System.Data.DataRelation("HOUSE_WAYBILL_PALLET", new global::System.Data.DataColumn[] {
                        this.tableHOUSE_WAYBILL.HOUSE_WAYBILL_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePALLET.HOUSE_WAYBILL_IdColumn}, false);
            this.relationHOUSE_WAYBILL_PALLET.Nested = true;
            this.Relations.Add(this.relationHOUSE_WAYBILL_PALLET);
            this.relationPALLET_UDF_PALLET = new global::System.Data.DataRelation("PALLET_UDF_PALLET", new global::System.Data.DataColumn[] {
                        this.tablePALLET.PALLET_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_PALLET.PALLET_Id_0Column}, false);
            this.relationPALLET_UDF_PALLET.Nested = true;
            this.Relations.Add(this.relationPALLET_UDF_PALLET);
            this.relationPALLET_BOX = new global::System.Data.DataRelation("PALLET_BOX", new global::System.Data.DataColumn[] {
                        this.tablePALLET.PALLET_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableBOX.PALLET_Id_0Column}, false);
            this.relationPALLET_BOX.Nested = true;
            this.Relations.Add(this.relationPALLET_BOX);
            this.relationBOX_SERIAL_NUM = new global::System.Data.DataRelation("BOX_SERIAL_NUM", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableSERIAL_NUM.BOX_Id_0Column}, false);
            this.relationBOX_SERIAL_NUM.Nested = true;
            this.Relations.Add(this.relationBOX_SERIAL_NUM);
            this.relationBOX_UDF_HEADER = new global::System.Data.DataRelation("BOX_UDF_HEADER", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_HEADER.BOX_Id_0Column}, false);
            this.relationBOX_UDF_HEADER.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_HEADER);
            this.relationBOX_UDF_DETAIL = new global::System.Data.DataRelation("BOX_UDF_DETAIL", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_DETAIL.BOX_Id_0Column}, false);
            this.relationBOX_UDF_DETAIL.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_DETAIL);
            this.relationBOX_UDF_BOX = new global::System.Data.DataRelation("BOX_UDF_BOX", new global::System.Data.DataColumn[] {
                        this.tableBOX.BOX_Id_0Column}, new global::System.Data.DataColumn[] {
                        this.tableUDF_BOX.BOX_Id_0Column}, false);
            this.relationBOX_UDF_BOX.Nested = true;
            this.Relations.Add(this.relationBOX_UDF_BOX);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMASTER_WAYBILL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHOUSE_WAYBILL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePALLET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_PALLET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBOX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSERIAL_NUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_HEADER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_DETAIL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUDF_BOX() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MASTER_WAYBILLRowChangeEventHandler(object sender, MASTER_WAYBILLRowChangeEvent e);
        
        public delegate void HOUSE_WAYBILLRowChangeEventHandler(object sender, HOUSE_WAYBILLRowChangeEvent e);
        
        public delegate void PALLETRowChangeEventHandler(object sender, PALLETRowChangeEvent e);
        
        public delegate void UDF_PALLETRowChangeEventHandler(object sender, UDF_PALLETRowChangeEvent e);
        
        public delegate void BOXRowChangeEventHandler(object sender, BOXRowChangeEvent e);
        
        public delegate void SERIAL_NUMRowChangeEventHandler(object sender, SERIAL_NUMRowChangeEvent e);
        
        public delegate void UDF_HEADERRowChangeEventHandler(object sender, UDF_HEADERRowChangeEvent e);
        
        public delegate void UDF_DETAILRowChangeEventHandler(object sender, UDF_DETAILRowChangeEvent e);
        
        public delegate void UDF_BOXRowChangeEventHandler(object sender, UDF_BOXRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MASTER_WAYBILLDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_NUMBER;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnSHIP_MODE;
            
            private global::System.Data.DataColumn columnINTL_CARRIER;
            
            private global::System.Data.DataColumn columnCURRENT_DATE;
            
            private global::System.Data.DataColumn columnACTUAL_SHIPDATE;
            
            private global::System.Data.DataColumn columnCONTAINER_ID;
            
            private global::System.Data.DataColumn columnSHIP_FROM_ID;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME_2;
            
            private global::System.Data.DataColumn columnSHIP_FROM_NAME_3;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STREET;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STREET_2;
            
            private global::System.Data.DataColumn columnSHIP_FROM_CITY;
            
            private global::System.Data.DataColumn columnSHIP_FROM_STATE;
            
            private global::System.Data.DataColumn columnSHIP_FROM_ZIP;
            
            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_NAME;
            
            private global::System.Data.DataColumn columnSHIP_FROM_COUNTRY_CODE;
            
            private global::System.Data.DataColumn columnSHIP_FROM_CONTACT;
            
            private global::System.Data.DataColumn columnSHIP_FROM_TELEPHONE;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_UNIT_QTY;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_BOX_QTY;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_PALLET_QTY;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_ACT_WEIGHT;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_GROSS_WEIGHT;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLDataTable() {
                this.TableName = "MASTER_WAYBILL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MASTER_WAYBILLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MASTER_WAYBILLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_NUMBERColumn {
                get {
                    return this.columnMASTER_WAYBILL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_MODEColumn {
                get {
                    return this.columnSHIP_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTL_CARRIERColumn {
                get {
                    return this.columnINTL_CARRIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURRENT_DATEColumn {
                get {
                    return this.columnCURRENT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTUAL_SHIPDATEColumn {
                get {
                    return this.columnACTUAL_SHIPDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_IDColumn {
                get {
                    return this.columnCONTAINER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_IDColumn {
                get {
                    return this.columnSHIP_FROM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAMEColumn {
                get {
                    return this.columnSHIP_FROM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_2Column {
                get {
                    return this.columnSHIP_FROM_NAME_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_NAME_3Column {
                get {
                    return this.columnSHIP_FROM_NAME_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREETColumn {
                get {
                    return this.columnSHIP_FROM_STREET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STREET_2Column {
                get {
                    return this.columnSHIP_FROM_STREET_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CITYColumn {
                get {
                    return this.columnSHIP_FROM_CITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_STATEColumn {
                get {
                    return this.columnSHIP_FROM_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_ZIPColumn {
                get {
                    return this.columnSHIP_FROM_ZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_NAMEColumn {
                get {
                    return this.columnSHIP_FROM_COUNTRY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_COUNTRY_CODEColumn {
                get {
                    return this.columnSHIP_FROM_COUNTRY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_CONTACTColumn {
                get {
                    return this.columnSHIP_FROM_CONTACT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_FROM_TELEPHONEColumn {
                get {
                    return this.columnSHIP_FROM_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_UNIT_QTYColumn {
                get {
                    return this.columnMASTER_WAYBILL_UNIT_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_BOX_QTYColumn {
                get {
                    return this.columnMASTER_WAYBILL_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_PALLET_QTYColumn {
                get {
                    return this.columnMASTER_WAYBILL_PALLET_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_ACT_WEIGHTColumn {
                get {
                    return this.columnMASTER_WAYBILL_ACT_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_GROSS_WEIGHTColumn {
                get {
                    return this.columnMASTER_WAYBILL_GROSS_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_IdColumn {
                get {
                    return this.columnMASTER_WAYBILL_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRow this[int index] {
                get {
                    return ((MASTER_WAYBILLRow)(this.Rows[index]));
                }
            }
            
            public event MASTER_WAYBILLRowChangeEventHandler MASTER_WAYBILLRowChanging;
            
            public event MASTER_WAYBILLRowChangeEventHandler MASTER_WAYBILLRowChanged;
            
            public event MASTER_WAYBILLRowChangeEventHandler MASTER_WAYBILLRowDeleting;
            
            public event MASTER_WAYBILLRowChangeEventHandler MASTER_WAYBILLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMASTER_WAYBILLRow(MASTER_WAYBILLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRow AddMASTER_WAYBILLRow(
                        string MASTER_WAYBILL_NUMBER, 
                        string REGION, 
                        string SHIP_MODE, 
                        string INTL_CARRIER, 
                        string CURRENT_DATE, 
                        string ACTUAL_SHIPDATE, 
                        string CONTAINER_ID, 
                        string SHIP_FROM_ID, 
                        string SHIP_FROM_NAME, 
                        string SHIP_FROM_NAME_2, 
                        string SHIP_FROM_NAME_3, 
                        string SHIP_FROM_STREET, 
                        string SHIP_FROM_STREET_2, 
                        string SHIP_FROM_CITY, 
                        string SHIP_FROM_STATE, 
                        string SHIP_FROM_ZIP, 
                        string SHIP_FROM_COUNTRY_NAME, 
                        string SHIP_FROM_COUNTRY_CODE, 
                        string SHIP_FROM_CONTACT, 
                        string SHIP_FROM_TELEPHONE, 
                        double MASTER_WAYBILL_UNIT_QTY, 
                        double MASTER_WAYBILL_BOX_QTY, 
                        double MASTER_WAYBILL_PALLET_QTY, 
                        double MASTER_WAYBILL_ACT_WEIGHT, 
                        double MASTER_WAYBILL_GROSS_WEIGHT) {
                MASTER_WAYBILLRow rowMASTER_WAYBILLRow = ((MASTER_WAYBILLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MASTER_WAYBILL_NUMBER,
                        REGION,
                        SHIP_MODE,
                        INTL_CARRIER,
                        CURRENT_DATE,
                        ACTUAL_SHIPDATE,
                        CONTAINER_ID,
                        SHIP_FROM_ID,
                        SHIP_FROM_NAME,
                        SHIP_FROM_NAME_2,
                        SHIP_FROM_NAME_3,
                        SHIP_FROM_STREET,
                        SHIP_FROM_STREET_2,
                        SHIP_FROM_CITY,
                        SHIP_FROM_STATE,
                        SHIP_FROM_ZIP,
                        SHIP_FROM_COUNTRY_NAME,
                        SHIP_FROM_COUNTRY_CODE,
                        SHIP_FROM_CONTACT,
                        SHIP_FROM_TELEPHONE,
                        MASTER_WAYBILL_UNIT_QTY,
                        MASTER_WAYBILL_BOX_QTY,
                        MASTER_WAYBILL_PALLET_QTY,
                        MASTER_WAYBILL_ACT_WEIGHT,
                        MASTER_WAYBILL_GROSS_WEIGHT,
                        null};
                rowMASTER_WAYBILLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMASTER_WAYBILLRow);
                return rowMASTER_WAYBILLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MASTER_WAYBILLDataTable cln = ((MASTER_WAYBILLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MASTER_WAYBILLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMASTER_WAYBILL_NUMBER = base.Columns["MASTER_WAYBILL_NUMBER"];
                this.columnREGION = base.Columns["REGION"];
                this.columnSHIP_MODE = base.Columns["SHIP_MODE"];
                this.columnINTL_CARRIER = base.Columns["INTL_CARRIER"];
                this.columnCURRENT_DATE = base.Columns["CURRENT_DATE"];
                this.columnACTUAL_SHIPDATE = base.Columns["ACTUAL_SHIPDATE"];
                this.columnCONTAINER_ID = base.Columns["CONTAINER_ID"];
                this.columnSHIP_FROM_ID = base.Columns["SHIP_FROM_ID"];
                this.columnSHIP_FROM_NAME = base.Columns["SHIP_FROM_NAME"];
                this.columnSHIP_FROM_NAME_2 = base.Columns["SHIP_FROM_NAME_2"];
                this.columnSHIP_FROM_NAME_3 = base.Columns["SHIP_FROM_NAME_3"];
                this.columnSHIP_FROM_STREET = base.Columns["SHIP_FROM_STREET"];
                this.columnSHIP_FROM_STREET_2 = base.Columns["SHIP_FROM_STREET_2"];
                this.columnSHIP_FROM_CITY = base.Columns["SHIP_FROM_CITY"];
                this.columnSHIP_FROM_STATE = base.Columns["SHIP_FROM_STATE"];
                this.columnSHIP_FROM_ZIP = base.Columns["SHIP_FROM_ZIP"];
                this.columnSHIP_FROM_COUNTRY_NAME = base.Columns["SHIP_FROM_COUNTRY_NAME"];
                this.columnSHIP_FROM_COUNTRY_CODE = base.Columns["SHIP_FROM_COUNTRY_CODE"];
                this.columnSHIP_FROM_CONTACT = base.Columns["SHIP_FROM_CONTACT"];
                this.columnSHIP_FROM_TELEPHONE = base.Columns["SHIP_FROM_TELEPHONE"];
                this.columnMASTER_WAYBILL_UNIT_QTY = base.Columns["MASTER_WAYBILL_UNIT_QTY"];
                this.columnMASTER_WAYBILL_BOX_QTY = base.Columns["MASTER_WAYBILL_BOX_QTY"];
                this.columnMASTER_WAYBILL_PALLET_QTY = base.Columns["MASTER_WAYBILL_PALLET_QTY"];
                this.columnMASTER_WAYBILL_ACT_WEIGHT = base.Columns["MASTER_WAYBILL_ACT_WEIGHT"];
                this.columnMASTER_WAYBILL_GROSS_WEIGHT = base.Columns["MASTER_WAYBILL_GROSS_WEIGHT"];
                this.columnMASTER_WAYBILL_Id = base.Columns["MASTER_WAYBILL_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMASTER_WAYBILL_NUMBER = new global::System.Data.DataColumn("MASTER_WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_NUMBER);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnSHIP_MODE = new global::System.Data.DataColumn("SHIP_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_MODE);
                this.columnINTL_CARRIER = new global::System.Data.DataColumn("INTL_CARRIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTL_CARRIER);
                this.columnCURRENT_DATE = new global::System.Data.DataColumn("CURRENT_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURRENT_DATE);
                this.columnACTUAL_SHIPDATE = new global::System.Data.DataColumn("ACTUAL_SHIPDATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTUAL_SHIPDATE);
                this.columnCONTAINER_ID = new global::System.Data.DataColumn("CONTAINER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_ID);
                this.columnSHIP_FROM_ID = new global::System.Data.DataColumn("SHIP_FROM_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ID);
                this.columnSHIP_FROM_NAME = new global::System.Data.DataColumn("SHIP_FROM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME);
                this.columnSHIP_FROM_NAME_2 = new global::System.Data.DataColumn("SHIP_FROM_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_2);
                this.columnSHIP_FROM_NAME_3 = new global::System.Data.DataColumn("SHIP_FROM_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_NAME_3);
                this.columnSHIP_FROM_STREET = new global::System.Data.DataColumn("SHIP_FROM_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET);
                this.columnSHIP_FROM_STREET_2 = new global::System.Data.DataColumn("SHIP_FROM_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STREET_2);
                this.columnSHIP_FROM_CITY = new global::System.Data.DataColumn("SHIP_FROM_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CITY);
                this.columnSHIP_FROM_STATE = new global::System.Data.DataColumn("SHIP_FROM_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_STATE);
                this.columnSHIP_FROM_ZIP = new global::System.Data.DataColumn("SHIP_FROM_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_ZIP);
                this.columnSHIP_FROM_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_NAME);
                this.columnSHIP_FROM_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_FROM_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_COUNTRY_CODE);
                this.columnSHIP_FROM_CONTACT = new global::System.Data.DataColumn("SHIP_FROM_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_CONTACT);
                this.columnSHIP_FROM_TELEPHONE = new global::System.Data.DataColumn("SHIP_FROM_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_FROM_TELEPHONE);
                this.columnMASTER_WAYBILL_UNIT_QTY = new global::System.Data.DataColumn("MASTER_WAYBILL_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_UNIT_QTY);
                this.columnMASTER_WAYBILL_BOX_QTY = new global::System.Data.DataColumn("MASTER_WAYBILL_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_BOX_QTY);
                this.columnMASTER_WAYBILL_PALLET_QTY = new global::System.Data.DataColumn("MASTER_WAYBILL_PALLET_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_PALLET_QTY);
                this.columnMASTER_WAYBILL_ACT_WEIGHT = new global::System.Data.DataColumn("MASTER_WAYBILL_ACT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_ACT_WEIGHT);
                this.columnMASTER_WAYBILL_GROSS_WEIGHT = new global::System.Data.DataColumn("MASTER_WAYBILL_GROSS_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMASTER_WAYBILL_GROSS_WEIGHT);
                this.columnMASTER_WAYBILL_Id = new global::System.Data.DataColumn("MASTER_WAYBILL_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnMASTER_WAYBILL_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMASTER_WAYBILL_Id}, true));
                this.columnMASTER_WAYBILL_NUMBER.AllowDBNull = false;
                this.columnREGION.AllowDBNull = false;
                this.columnSHIP_MODE.AllowDBNull = false;
                this.columnINTL_CARRIER.AllowDBNull = false;
                this.columnCURRENT_DATE.AllowDBNull = false;
                this.columnACTUAL_SHIPDATE.AllowDBNull = false;
                this.columnCONTAINER_ID.AllowDBNull = false;
                this.columnSHIP_FROM_ID.AllowDBNull = false;
                this.columnSHIP_FROM_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_2.AllowDBNull = false;
                this.columnSHIP_FROM_NAME_3.AllowDBNull = false;
                this.columnSHIP_FROM_STREET.AllowDBNull = false;
                this.columnSHIP_FROM_STREET_2.AllowDBNull = false;
                this.columnSHIP_FROM_CITY.AllowDBNull = false;
                this.columnSHIP_FROM_STATE.AllowDBNull = false;
                this.columnSHIP_FROM_ZIP.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_FROM_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_FROM_CONTACT.AllowDBNull = false;
                this.columnSHIP_FROM_TELEPHONE.AllowDBNull = false;
                this.columnMASTER_WAYBILL_UNIT_QTY.AllowDBNull = false;
                this.columnMASTER_WAYBILL_BOX_QTY.AllowDBNull = false;
                this.columnMASTER_WAYBILL_PALLET_QTY.AllowDBNull = false;
                this.columnMASTER_WAYBILL_ACT_WEIGHT.AllowDBNull = false;
                this.columnMASTER_WAYBILL_GROSS_WEIGHT.AllowDBNull = false;
                this.columnMASTER_WAYBILL_Id.AutoIncrement = true;
                this.columnMASTER_WAYBILL_Id.AllowDBNull = false;
                this.columnMASTER_WAYBILL_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRow NewMASTER_WAYBILLRow() {
                return ((MASTER_WAYBILLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MASTER_WAYBILLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MASTER_WAYBILLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MASTER_WAYBILLRowChanged != null)) {
                    this.MASTER_WAYBILLRowChanged(this, new MASTER_WAYBILLRowChangeEvent(((MASTER_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MASTER_WAYBILLRowChanging != null)) {
                    this.MASTER_WAYBILLRowChanging(this, new MASTER_WAYBILLRowChangeEvent(((MASTER_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MASTER_WAYBILLRowDeleted != null)) {
                    this.MASTER_WAYBILLRowDeleted(this, new MASTER_WAYBILLRowChangeEvent(((MASTER_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MASTER_WAYBILLRowDeleting != null)) {
                    this.MASTER_WAYBILLRowDeleting(this, new MASTER_WAYBILLRowChangeEvent(((MASTER_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMASTER_WAYBILLRow(MASTER_WAYBILLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MASTER_WAYBILLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HOUSE_WAYBILLDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWAYBILL_NUMBER;
            
            private global::System.Data.DataColumn columnHAWB_PALLET_QTY;
            
            private global::System.Data.DataColumn columnHAWB_BOX_QTY;
            
            private global::System.Data.DataColumn columnHAWB_UNIT_QTY;
            
            private global::System.Data.DataColumn columnCONSOL_INVOICE;
            
            private global::System.Data.DataColumn columnHAWB_ACT_WEIGHT;
            
            private global::System.Data.DataColumn columnHAWB_GROSS_WEIGHT;
            
            private global::System.Data.DataColumn columnSHIP_TO_ID;
            
            private global::System.Data.DataColumn columnSHIP_TO_NAME;
            
            private global::System.Data.DataColumn columnSHIP_TO_NAME_2;
            
            private global::System.Data.DataColumn columnSHIP_TO_NAME_3;
            
            private global::System.Data.DataColumn columnSHIP_TO_STREET;
            
            private global::System.Data.DataColumn columnSHIP_TO_STREET_2;
            
            private global::System.Data.DataColumn columnSHIP_TO_CITY;
            
            private global::System.Data.DataColumn columnSHIP_TO_STATE;
            
            private global::System.Data.DataColumn columnSHIP_TO_ZIP;
            
            private global::System.Data.DataColumn columnSHIP_TO_COUNTRY_CODE;
            
            private global::System.Data.DataColumn columnSHIP_TO_COUNTRY_NAME;
            
            private global::System.Data.DataColumn columnSHIP_TO_TELEPHONE;
            
            private global::System.Data.DataColumn columnSHIP_TO_CONTACT;
            
            private global::System.Data.DataColumn columnHOUSE_WAYBILL_Id;
            
            private global::System.Data.DataColumn columnMASTER_WAYBILL_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLDataTable() {
                this.TableName = "HOUSE_WAYBILL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOUSE_WAYBILLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HOUSE_WAYBILLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WAYBILL_NUMBERColumn {
                get {
                    return this.columnWAYBILL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_PALLET_QTYColumn {
                get {
                    return this.columnHAWB_PALLET_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_BOX_QTYColumn {
                get {
                    return this.columnHAWB_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_UNIT_QTYColumn {
                get {
                    return this.columnHAWB_UNIT_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONSOL_INVOICEColumn {
                get {
                    return this.columnCONSOL_INVOICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_ACT_WEIGHTColumn {
                get {
                    return this.columnHAWB_ACT_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAWB_GROSS_WEIGHTColumn {
                get {
                    return this.columnHAWB_GROSS_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_IDColumn {
                get {
                    return this.columnSHIP_TO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAMEColumn {
                get {
                    return this.columnSHIP_TO_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAME_2Column {
                get {
                    return this.columnSHIP_TO_NAME_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_NAME_3Column {
                get {
                    return this.columnSHIP_TO_NAME_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STREETColumn {
                get {
                    return this.columnSHIP_TO_STREET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STREET_2Column {
                get {
                    return this.columnSHIP_TO_STREET_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_CITYColumn {
                get {
                    return this.columnSHIP_TO_CITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_STATEColumn {
                get {
                    return this.columnSHIP_TO_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_ZIPColumn {
                get {
                    return this.columnSHIP_TO_ZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_COUNTRY_CODEColumn {
                get {
                    return this.columnSHIP_TO_COUNTRY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_COUNTRY_NAMEColumn {
                get {
                    return this.columnSHIP_TO_COUNTRY_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_TELEPHONEColumn {
                get {
                    return this.columnSHIP_TO_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_TO_CONTACTColumn {
                get {
                    return this.columnSHIP_TO_CONTACT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUSE_WAYBILL_IdColumn {
                get {
                    return this.columnHOUSE_WAYBILL_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MASTER_WAYBILL_IdColumn {
                get {
                    return this.columnMASTER_WAYBILL_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow this[int index] {
                get {
                    return ((HOUSE_WAYBILLRow)(this.Rows[index]));
                }
            }
            
            public event HOUSE_WAYBILLRowChangeEventHandler HOUSE_WAYBILLRowChanging;
            
            public event HOUSE_WAYBILLRowChangeEventHandler HOUSE_WAYBILLRowChanged;
            
            public event HOUSE_WAYBILLRowChangeEventHandler HOUSE_WAYBILLRowDeleting;
            
            public event HOUSE_WAYBILLRowChangeEventHandler HOUSE_WAYBILLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHOUSE_WAYBILLRow(HOUSE_WAYBILLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow AddHOUSE_WAYBILLRow(
                        string WAYBILL_NUMBER, 
                        double HAWB_PALLET_QTY, 
                        double HAWB_BOX_QTY, 
                        double HAWB_UNIT_QTY, 
                        string CONSOL_INVOICE, 
                        double HAWB_ACT_WEIGHT, 
                        double HAWB_GROSS_WEIGHT, 
                        string SHIP_TO_ID, 
                        string SHIP_TO_NAME, 
                        string SHIP_TO_NAME_2, 
                        string SHIP_TO_NAME_3, 
                        string SHIP_TO_STREET, 
                        string SHIP_TO_STREET_2, 
                        string SHIP_TO_CITY, 
                        string SHIP_TO_STATE, 
                        string SHIP_TO_ZIP, 
                        string SHIP_TO_COUNTRY_CODE, 
                        string SHIP_TO_COUNTRY_NAME, 
                        string SHIP_TO_TELEPHONE, 
                        string SHIP_TO_CONTACT, 
                        MASTER_WAYBILLRow parentMASTER_WAYBILLRowByMASTER_WAYBILL_HOUSE_WAYBILL) {
                HOUSE_WAYBILLRow rowHOUSE_WAYBILLRow = ((HOUSE_WAYBILLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WAYBILL_NUMBER,
                        HAWB_PALLET_QTY,
                        HAWB_BOX_QTY,
                        HAWB_UNIT_QTY,
                        CONSOL_INVOICE,
                        HAWB_ACT_WEIGHT,
                        HAWB_GROSS_WEIGHT,
                        SHIP_TO_ID,
                        SHIP_TO_NAME,
                        SHIP_TO_NAME_2,
                        SHIP_TO_NAME_3,
                        SHIP_TO_STREET,
                        SHIP_TO_STREET_2,
                        SHIP_TO_CITY,
                        SHIP_TO_STATE,
                        SHIP_TO_ZIP,
                        SHIP_TO_COUNTRY_CODE,
                        SHIP_TO_COUNTRY_NAME,
                        SHIP_TO_TELEPHONE,
                        SHIP_TO_CONTACT,
                        null,
                        null};
                if ((parentMASTER_WAYBILLRowByMASTER_WAYBILL_HOUSE_WAYBILL != null)) {
                    columnValuesArray[21] = parentMASTER_WAYBILLRowByMASTER_WAYBILL_HOUSE_WAYBILL[25];
                }
                rowHOUSE_WAYBILLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHOUSE_WAYBILLRow);
                return rowHOUSE_WAYBILLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HOUSE_WAYBILLDataTable cln = ((HOUSE_WAYBILLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HOUSE_WAYBILLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWAYBILL_NUMBER = base.Columns["WAYBILL_NUMBER"];
                this.columnHAWB_PALLET_QTY = base.Columns["HAWB_PALLET_QTY"];
                this.columnHAWB_BOX_QTY = base.Columns["HAWB_BOX_QTY"];
                this.columnHAWB_UNIT_QTY = base.Columns["HAWB_UNIT_QTY"];
                this.columnCONSOL_INVOICE = base.Columns["CONSOL_INVOICE"];
                this.columnHAWB_ACT_WEIGHT = base.Columns["HAWB_ACT_WEIGHT"];
                this.columnHAWB_GROSS_WEIGHT = base.Columns["HAWB_GROSS_WEIGHT"];
                this.columnSHIP_TO_ID = base.Columns["SHIP_TO_ID"];
                this.columnSHIP_TO_NAME = base.Columns["SHIP_TO_NAME"];
                this.columnSHIP_TO_NAME_2 = base.Columns["SHIP_TO_NAME_2"];
                this.columnSHIP_TO_NAME_3 = base.Columns["SHIP_TO_NAME_3"];
                this.columnSHIP_TO_STREET = base.Columns["SHIP_TO_STREET"];
                this.columnSHIP_TO_STREET_2 = base.Columns["SHIP_TO_STREET_2"];
                this.columnSHIP_TO_CITY = base.Columns["SHIP_TO_CITY"];
                this.columnSHIP_TO_STATE = base.Columns["SHIP_TO_STATE"];
                this.columnSHIP_TO_ZIP = base.Columns["SHIP_TO_ZIP"];
                this.columnSHIP_TO_COUNTRY_CODE = base.Columns["SHIP_TO_COUNTRY_CODE"];
                this.columnSHIP_TO_COUNTRY_NAME = base.Columns["SHIP_TO_COUNTRY_NAME"];
                this.columnSHIP_TO_TELEPHONE = base.Columns["SHIP_TO_TELEPHONE"];
                this.columnSHIP_TO_CONTACT = base.Columns["SHIP_TO_CONTACT"];
                this.columnHOUSE_WAYBILL_Id = base.Columns["HOUSE_WAYBILL_Id"];
                this.columnMASTER_WAYBILL_Id = base.Columns["MASTER_WAYBILL_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWAYBILL_NUMBER = new global::System.Data.DataColumn("WAYBILL_NUMBER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAYBILL_NUMBER);
                this.columnHAWB_PALLET_QTY = new global::System.Data.DataColumn("HAWB_PALLET_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_PALLET_QTY);
                this.columnHAWB_BOX_QTY = new global::System.Data.DataColumn("HAWB_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_BOX_QTY);
                this.columnHAWB_UNIT_QTY = new global::System.Data.DataColumn("HAWB_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_UNIT_QTY);
                this.columnCONSOL_INVOICE = new global::System.Data.DataColumn("CONSOL_INVOICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONSOL_INVOICE);
                this.columnHAWB_ACT_WEIGHT = new global::System.Data.DataColumn("HAWB_ACT_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_ACT_WEIGHT);
                this.columnHAWB_GROSS_WEIGHT = new global::System.Data.DataColumn("HAWB_GROSS_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAWB_GROSS_WEIGHT);
                this.columnSHIP_TO_ID = new global::System.Data.DataColumn("SHIP_TO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_ID);
                this.columnSHIP_TO_NAME = new global::System.Data.DataColumn("SHIP_TO_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME);
                this.columnSHIP_TO_NAME_2 = new global::System.Data.DataColumn("SHIP_TO_NAME_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME_2);
                this.columnSHIP_TO_NAME_3 = new global::System.Data.DataColumn("SHIP_TO_NAME_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_NAME_3);
                this.columnSHIP_TO_STREET = new global::System.Data.DataColumn("SHIP_TO_STREET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STREET);
                this.columnSHIP_TO_STREET_2 = new global::System.Data.DataColumn("SHIP_TO_STREET_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STREET_2);
                this.columnSHIP_TO_CITY = new global::System.Data.DataColumn("SHIP_TO_CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_CITY);
                this.columnSHIP_TO_STATE = new global::System.Data.DataColumn("SHIP_TO_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_STATE);
                this.columnSHIP_TO_ZIP = new global::System.Data.DataColumn("SHIP_TO_ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_ZIP);
                this.columnSHIP_TO_COUNTRY_CODE = new global::System.Data.DataColumn("SHIP_TO_COUNTRY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_COUNTRY_CODE);
                this.columnSHIP_TO_COUNTRY_NAME = new global::System.Data.DataColumn("SHIP_TO_COUNTRY_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_COUNTRY_NAME);
                this.columnSHIP_TO_TELEPHONE = new global::System.Data.DataColumn("SHIP_TO_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_TELEPHONE);
                this.columnSHIP_TO_CONTACT = new global::System.Data.DataColumn("SHIP_TO_CONTACT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_TO_CONTACT);
                this.columnHOUSE_WAYBILL_Id = new global::System.Data.DataColumn("HOUSE_WAYBILL_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnHOUSE_WAYBILL_Id);
                this.columnMASTER_WAYBILL_Id = new global::System.Data.DataColumn("MASTER_WAYBILL_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnMASTER_WAYBILL_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHOUSE_WAYBILL_Id}, true));
                this.columnWAYBILL_NUMBER.AllowDBNull = false;
                this.columnHAWB_PALLET_QTY.AllowDBNull = false;
                this.columnHAWB_BOX_QTY.AllowDBNull = false;
                this.columnHAWB_UNIT_QTY.AllowDBNull = false;
                this.columnCONSOL_INVOICE.AllowDBNull = false;
                this.columnHAWB_ACT_WEIGHT.AllowDBNull = false;
                this.columnHAWB_GROSS_WEIGHT.AllowDBNull = false;
                this.columnSHIP_TO_ID.AllowDBNull = false;
                this.columnSHIP_TO_NAME.AllowDBNull = false;
                this.columnSHIP_TO_NAME_2.AllowDBNull = false;
                this.columnSHIP_TO_NAME_3.AllowDBNull = false;
                this.columnSHIP_TO_STREET.AllowDBNull = false;
                this.columnSHIP_TO_STREET_2.AllowDBNull = false;
                this.columnSHIP_TO_CITY.AllowDBNull = false;
                this.columnSHIP_TO_STATE.AllowDBNull = false;
                this.columnSHIP_TO_ZIP.AllowDBNull = false;
                this.columnSHIP_TO_COUNTRY_CODE.AllowDBNull = false;
                this.columnSHIP_TO_COUNTRY_NAME.AllowDBNull = false;
                this.columnSHIP_TO_TELEPHONE.AllowDBNull = false;
                this.columnSHIP_TO_CONTACT.AllowDBNull = false;
                this.columnHOUSE_WAYBILL_Id.AutoIncrement = true;
                this.columnHOUSE_WAYBILL_Id.AllowDBNull = false;
                this.columnHOUSE_WAYBILL_Id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow NewHOUSE_WAYBILLRow() {
                return ((HOUSE_WAYBILLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HOUSE_WAYBILLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HOUSE_WAYBILLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HOUSE_WAYBILLRowChanged != null)) {
                    this.HOUSE_WAYBILLRowChanged(this, new HOUSE_WAYBILLRowChangeEvent(((HOUSE_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HOUSE_WAYBILLRowChanging != null)) {
                    this.HOUSE_WAYBILLRowChanging(this, new HOUSE_WAYBILLRowChangeEvent(((HOUSE_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HOUSE_WAYBILLRowDeleted != null)) {
                    this.HOUSE_WAYBILLRowDeleted(this, new HOUSE_WAYBILLRowChangeEvent(((HOUSE_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HOUSE_WAYBILLRowDeleting != null)) {
                    this.HOUSE_WAYBILLRowDeleting(this, new HOUSE_WAYBILLRowChangeEvent(((HOUSE_WAYBILLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHOUSE_WAYBILLRow(HOUSE_WAYBILLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HOUSE_WAYBILLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PALLETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPALLET_ID;
            
            private global::System.Data.DataColumn columnPALLET_BOX_QTY;
            
            private global::System.Data.DataColumn columnPALLET_UNIT_QTY;
            
            private global::System.Data.DataColumn columnPALLET_Id_0;
            
            private global::System.Data.DataColumn columnHOUSE_WAYBILL_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETDataTable() {
                this.TableName = "PALLET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PALLETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PALLETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_IDColumn {
                get {
                    return this.columnPALLET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_BOX_QTYColumn {
                get {
                    return this.columnPALLET_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_UNIT_QTYColumn {
                get {
                    return this.columnPALLET_UNIT_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_Id_0Column {
                get {
                    return this.columnPALLET_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUSE_WAYBILL_IdColumn {
                get {
                    return this.columnHOUSE_WAYBILL_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow this[int index] {
                get {
                    return ((PALLETRow)(this.Rows[index]));
                }
            }
            
            public event PALLETRowChangeEventHandler PALLETRowChanging;
            
            public event PALLETRowChangeEventHandler PALLETRowChanged;
            
            public event PALLETRowChangeEventHandler PALLETRowDeleting;
            
            public event PALLETRowChangeEventHandler PALLETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPALLETRow(PALLETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow AddPALLETRow(string PALLET_ID, double PALLET_BOX_QTY, double PALLET_UNIT_QTY, HOUSE_WAYBILLRow parentHOUSE_WAYBILLRowByHOUSE_WAYBILL_PALLET) {
                PALLETRow rowPALLETRow = ((PALLETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PALLET_ID,
                        PALLET_BOX_QTY,
                        PALLET_UNIT_QTY,
                        null,
                        null};
                if ((parentHOUSE_WAYBILLRowByHOUSE_WAYBILL_PALLET != null)) {
                    columnValuesArray[4] = parentHOUSE_WAYBILLRowByHOUSE_WAYBILL_PALLET[20];
                }
                rowPALLETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPALLETRow);
                return rowPALLETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PALLETDataTable cln = ((PALLETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PALLETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPALLET_ID = base.Columns["PALLET_ID"];
                this.columnPALLET_BOX_QTY = base.Columns["PALLET_BOX_QTY"];
                this.columnPALLET_UNIT_QTY = base.Columns["PALLET_UNIT_QTY"];
                this.columnPALLET_Id_0 = base.Columns["PALLET_Id_0"];
                this.columnHOUSE_WAYBILL_Id = base.Columns["HOUSE_WAYBILL_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPALLET_ID = new global::System.Data.DataColumn("PALLET_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALLET_ID);
                this.columnPALLET_BOX_QTY = new global::System.Data.DataColumn("PALLET_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALLET_BOX_QTY);
                this.columnPALLET_UNIT_QTY = new global::System.Data.DataColumn("PALLET_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPALLET_UNIT_QTY);
                this.columnPALLET_Id_0 = new global::System.Data.DataColumn("PALLET_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPALLET_Id_0);
                this.columnHOUSE_WAYBILL_Id = new global::System.Data.DataColumn("HOUSE_WAYBILL_Id", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnHOUSE_WAYBILL_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPALLET_Id_0}, true));
                this.columnPALLET_ID.AllowDBNull = false;
                this.columnPALLET_BOX_QTY.AllowDBNull = false;
                this.columnPALLET_UNIT_QTY.AllowDBNull = false;
                this.columnPALLET_Id_0.AutoIncrement = true;
                this.columnPALLET_Id_0.AllowDBNull = false;
                this.columnPALLET_Id_0.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow NewPALLETRow() {
                return ((PALLETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PALLETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PALLETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PALLETRowChanged != null)) {
                    this.PALLETRowChanged(this, new PALLETRowChangeEvent(((PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PALLETRowChanging != null)) {
                    this.PALLETRowChanging(this, new PALLETRowChangeEvent(((PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PALLETRowDeleted != null)) {
                    this.PALLETRowDeleted(this, new PALLETRowChangeEvent(((PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PALLETRowDeleting != null)) {
                    this.PALLETRowDeleting(this, new PALLETRowChangeEvent(((PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePALLETRow(PALLETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PALLETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_PALLETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnPALLET_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETDataTable() {
                this.TableName = "UDF_PALLET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_PALLETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_PALLETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_Id_0Column {
                get {
                    return this.columnPALLET_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRow this[int index] {
                get {
                    return ((UDF_PALLETRow)(this.Rows[index]));
                }
            }
            
            public event UDF_PALLETRowChangeEventHandler UDF_PALLETRowChanging;
            
            public event UDF_PALLETRowChangeEventHandler UDF_PALLETRowChanged;
            
            public event UDF_PALLETRowChangeEventHandler UDF_PALLETRowDeleting;
            
            public event UDF_PALLETRowChangeEventHandler UDF_PALLETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_PALLETRow(UDF_PALLETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRow AddUDF_PALLETRow(string KEY, string VALUE, PALLETRow parentPALLETRowByPALLET_UDF_PALLET) {
                UDF_PALLETRow rowUDF_PALLETRow = ((UDF_PALLETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentPALLETRowByPALLET_UDF_PALLET != null)) {
                    columnValuesArray[2] = parentPALLETRowByPALLET_UDF_PALLET[3];
                }
                rowUDF_PALLETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_PALLETRow);
                return rowUDF_PALLETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_PALLETDataTable cln = ((UDF_PALLETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_PALLETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnPALLET_Id_0 = base.Columns["PALLET_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnPALLET_Id_0 = new global::System.Data.DataColumn("PALLET_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPALLET_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRow NewUDF_PALLETRow() {
                return ((UDF_PALLETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_PALLETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_PALLETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_PALLETRowChanged != null)) {
                    this.UDF_PALLETRowChanged(this, new UDF_PALLETRowChangeEvent(((UDF_PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_PALLETRowChanging != null)) {
                    this.UDF_PALLETRowChanging(this, new UDF_PALLETRowChangeEvent(((UDF_PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_PALLETRowDeleted != null)) {
                    this.UDF_PALLETRowDeleted(this, new UDF_PALLETRowChangeEvent(((UDF_PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_PALLETRowDeleting != null)) {
                    this.UDF_PALLETRowDeleting(this, new UDF_PALLETRowChangeEvent(((UDF_PALLETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_PALLETRow(UDF_PALLETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_PALLETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBOX_ID;
            
            private global::System.Data.DataColumn columnBOX_UNIT_QTY;
            
            private global::System.Data.DataColumn columnPACK_ID_BOX_QTY;
            
            private global::System.Data.DataColumn columnTRACK_NO_PARCEL;
            
            private global::System.Data.DataColumn columnBOX_WEIGHT;
            
            private global::System.Data.DataColumn columnBOX_WEIGHT_UOM;
            
            private global::System.Data.DataColumn columnPACK_ID;
            
            private global::System.Data.DataColumn columnHP_PN;
            
            private global::System.Data.DataColumn columnPROD_DESC_BASE;
            
            private global::System.Data.DataColumn columnPROD_TYPE;
            
            private global::System.Data.DataColumn columnHP_SO;
            
            private global::System.Data.DataColumn columnSHIP_REF;
            
            private global::System.Data.DataColumn columnREG_CARRIER;
            
            private global::System.Data.DataColumn columnORDER_TYPE;
            
            private global::System.Data.DataColumn columnSALES_CHAN;
            
            private global::System.Data.DataColumn columnSUB_REGION;
            
            private global::System.Data.DataColumn columnDEST_CODE;
            
            private global::System.Data.DataColumn columnAREA_GROUP_ID;
            
            private global::System.Data.DataColumn columnDUTY_CODE;
            
            private global::System.Data.DataColumn columnPREF_GATEWAY;
            
            private global::System.Data.DataColumn columnTRANS_SERV_LEVEL;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            private global::System.Data.DataColumn columnPALLET_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXDataTable() {
                this.TableName = "BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_IDColumn {
                get {
                    return this.columnBOX_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_UNIT_QTYColumn {
                get {
                    return this.columnBOX_UNIT_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_ID_BOX_QTYColumn {
                get {
                    return this.columnPACK_ID_BOX_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRACK_NO_PARCELColumn {
                get {
                    return this.columnTRACK_NO_PARCEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHTColumn {
                get {
                    return this.columnBOX_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_WEIGHT_UOMColumn {
                get {
                    return this.columnBOX_WEIGHT_UOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PACK_IDColumn {
                get {
                    return this.columnPACK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_PNColumn {
                get {
                    return this.columnHP_PN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_DESC_BASEColumn {
                get {
                    return this.columnPROD_DESC_BASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROD_TYPEColumn {
                get {
                    return this.columnPROD_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HP_SOColumn {
                get {
                    return this.columnHP_SO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_REFColumn {
                get {
                    return this.columnSHIP_REF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REG_CARRIERColumn {
                get {
                    return this.columnREG_CARRIER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_TYPEColumn {
                get {
                    return this.columnORDER_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALES_CHANColumn {
                get {
                    return this.columnSALES_CHAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUB_REGIONColumn {
                get {
                    return this.columnSUB_REGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEST_CODEColumn {
                get {
                    return this.columnDEST_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AREA_GROUP_IDColumn {
                get {
                    return this.columnAREA_GROUP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUTY_CODEColumn {
                get {
                    return this.columnDUTY_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREF_GATEWAYColumn {
                get {
                    return this.columnPREF_GATEWAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_SERV_LEVELColumn {
                get {
                    return this.columnTRANS_SERV_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PALLET_Id_0Column {
                get {
                    return this.columnPALLET_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow this[int index] {
                get {
                    return ((BOXRow)(this.Rows[index]));
                }
            }
            
            public event BOXRowChangeEventHandler BOXRowChanging;
            
            public event BOXRowChangeEventHandler BOXRowChanged;
            
            public event BOXRowChangeEventHandler BOXRowDeleting;
            
            public event BOXRowChangeEventHandler BOXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBOXRow(BOXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow AddBOXRow(
                        string BOX_ID, 
                        double BOX_UNIT_QTY, 
                        double PACK_ID_BOX_QTY, 
                        string TRACK_NO_PARCEL, 
                        double BOX_WEIGHT, 
                        string BOX_WEIGHT_UOM, 
                        string PACK_ID, 
                        string HP_PN, 
                        string PROD_DESC_BASE, 
                        string PROD_TYPE, 
                        string HP_SO, 
                        string SHIP_REF, 
                        string REG_CARRIER, 
                        string ORDER_TYPE, 
                        string SALES_CHAN, 
                        string SUB_REGION, 
                        string DEST_CODE, 
                        string AREA_GROUP_ID, 
                        string DUTY_CODE, 
                        string PREF_GATEWAY, 
                        string TRANS_SERV_LEVEL, 
                        PALLETRow parentPALLETRowByPALLET_BOX) {
                BOXRow rowBOXRow = ((BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BOX_ID,
                        BOX_UNIT_QTY,
                        PACK_ID_BOX_QTY,
                        TRACK_NO_PARCEL,
                        BOX_WEIGHT,
                        BOX_WEIGHT_UOM,
                        PACK_ID,
                        HP_PN,
                        PROD_DESC_BASE,
                        PROD_TYPE,
                        HP_SO,
                        SHIP_REF,
                        REG_CARRIER,
                        ORDER_TYPE,
                        SALES_CHAN,
                        SUB_REGION,
                        DEST_CODE,
                        AREA_GROUP_ID,
                        DUTY_CODE,
                        PREF_GATEWAY,
                        TRANS_SERV_LEVEL,
                        null,
                        null};
                if ((parentPALLETRowByPALLET_BOX != null)) {
                    columnValuesArray[22] = parentPALLETRowByPALLET_BOX[3];
                }
                rowBOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBOXRow);
                return rowBOXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BOXDataTable cln = ((BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BOXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBOX_ID = base.Columns["BOX_ID"];
                this.columnBOX_UNIT_QTY = base.Columns["BOX_UNIT_QTY"];
                this.columnPACK_ID_BOX_QTY = base.Columns["PACK_ID_BOX_QTY"];
                this.columnTRACK_NO_PARCEL = base.Columns["TRACK_NO_PARCEL"];
                this.columnBOX_WEIGHT = base.Columns["BOX_WEIGHT"];
                this.columnBOX_WEIGHT_UOM = base.Columns["BOX_WEIGHT_UOM"];
                this.columnPACK_ID = base.Columns["PACK_ID"];
                this.columnHP_PN = base.Columns["HP_PN"];
                this.columnPROD_DESC_BASE = base.Columns["PROD_DESC_BASE"];
                this.columnPROD_TYPE = base.Columns["PROD_TYPE"];
                this.columnHP_SO = base.Columns["HP_SO"];
                this.columnSHIP_REF = base.Columns["SHIP_REF"];
                this.columnREG_CARRIER = base.Columns["REG_CARRIER"];
                this.columnORDER_TYPE = base.Columns["ORDER_TYPE"];
                this.columnSALES_CHAN = base.Columns["SALES_CHAN"];
                this.columnSUB_REGION = base.Columns["SUB_REGION"];
                this.columnDEST_CODE = base.Columns["DEST_CODE"];
                this.columnAREA_GROUP_ID = base.Columns["AREA_GROUP_ID"];
                this.columnDUTY_CODE = base.Columns["DUTY_CODE"];
                this.columnPREF_GATEWAY = base.Columns["PREF_GATEWAY"];
                this.columnTRANS_SERV_LEVEL = base.Columns["TRANS_SERV_LEVEL"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
                this.columnPALLET_Id_0 = base.Columns["PALLET_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBOX_ID = new global::System.Data.DataColumn("BOX_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_ID);
                this.columnBOX_UNIT_QTY = new global::System.Data.DataColumn("BOX_UNIT_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_UNIT_QTY);
                this.columnPACK_ID_BOX_QTY = new global::System.Data.DataColumn("PACK_ID_BOX_QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID_BOX_QTY);
                this.columnTRACK_NO_PARCEL = new global::System.Data.DataColumn("TRACK_NO_PARCEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRACK_NO_PARCEL);
                this.columnBOX_WEIGHT = new global::System.Data.DataColumn("BOX_WEIGHT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT);
                this.columnBOX_WEIGHT_UOM = new global::System.Data.DataColumn("BOX_WEIGHT_UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOX_WEIGHT_UOM);
                this.columnPACK_ID = new global::System.Data.DataColumn("PACK_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPACK_ID);
                this.columnHP_PN = new global::System.Data.DataColumn("HP_PN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_PN);
                this.columnPROD_DESC_BASE = new global::System.Data.DataColumn("PROD_DESC_BASE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_DESC_BASE);
                this.columnPROD_TYPE = new global::System.Data.DataColumn("PROD_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROD_TYPE);
                this.columnHP_SO = new global::System.Data.DataColumn("HP_SO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP_SO);
                this.columnSHIP_REF = new global::System.Data.DataColumn("SHIP_REF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_REF);
                this.columnREG_CARRIER = new global::System.Data.DataColumn("REG_CARRIER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREG_CARRIER);
                this.columnORDER_TYPE = new global::System.Data.DataColumn("ORDER_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_TYPE);
                this.columnSALES_CHAN = new global::System.Data.DataColumn("SALES_CHAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_CHAN);
                this.columnSUB_REGION = new global::System.Data.DataColumn("SUB_REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUB_REGION);
                this.columnDEST_CODE = new global::System.Data.DataColumn("DEST_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEST_CODE);
                this.columnAREA_GROUP_ID = new global::System.Data.DataColumn("AREA_GROUP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAREA_GROUP_ID);
                this.columnDUTY_CODE = new global::System.Data.DataColumn("DUTY_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUTY_CODE);
                this.columnPREF_GATEWAY = new global::System.Data.DataColumn("PREF_GATEWAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREF_GATEWAY);
                this.columnTRANS_SERV_LEVEL = new global::System.Data.DataColumn("TRANS_SERV_LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_SERV_LEVEL);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnPALLET_Id_0 = new global::System.Data.DataColumn("PALLET_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnPALLET_Id_0);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBOX_Id_0}, true));
                this.columnBOX_ID.AllowDBNull = false;
                this.columnBOX_UNIT_QTY.AllowDBNull = false;
                this.columnPACK_ID_BOX_QTY.AllowDBNull = false;
                this.columnTRACK_NO_PARCEL.AllowDBNull = false;
                this.columnBOX_WEIGHT.AllowDBNull = false;
                this.columnBOX_WEIGHT_UOM.AllowDBNull = false;
                this.columnPACK_ID.AllowDBNull = false;
                this.columnHP_PN.AllowDBNull = false;
                this.columnPROD_DESC_BASE.AllowDBNull = false;
                this.columnPROD_TYPE.AllowDBNull = false;
                this.columnHP_SO.AllowDBNull = false;
                this.columnSHIP_REF.AllowDBNull = false;
                this.columnREG_CARRIER.AllowDBNull = false;
                this.columnORDER_TYPE.AllowDBNull = false;
                this.columnSALES_CHAN.AllowDBNull = false;
                this.columnSUB_REGION.AllowDBNull = false;
                this.columnDEST_CODE.AllowDBNull = false;
                this.columnAREA_GROUP_ID.AllowDBNull = false;
                this.columnDUTY_CODE.AllowDBNull = false;
                this.columnPREF_GATEWAY.AllowDBNull = false;
                this.columnTRANS_SERV_LEVEL.AllowDBNull = false;
                this.columnBOX_Id_0.AutoIncrement = true;
                this.columnBOX_Id_0.AllowDBNull = false;
                this.columnBOX_Id_0.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow NewBOXRow() {
                return ((BOXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BOXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BOXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BOXRowChanged != null)) {
                    this.BOXRowChanged(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BOXRowChanging != null)) {
                    this.BOXRowChanging(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BOXRowDeleted != null)) {
                    this.BOXRowDeleted(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BOXRowDeleting != null)) {
                    this.BOXRowDeleting(this, new BOXRowChangeEvent(((BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBOXRow(BOXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SERIAL_NUMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSERIAL_NUM_Column;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMDataTable() {
                this.TableName = "SERIAL_NUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERIAL_NUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SERIAL_NUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERIAL_NUM_ColumnColumn {
                get {
                    return this.columnSERIAL_NUM_Column;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow this[int index] {
                get {
                    return ((SERIAL_NUMRow)(this.Rows[index]));
                }
            }
            
            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowChanging;
            
            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowChanged;
            
            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowDeleting;
            
            public event SERIAL_NUMRowChangeEventHandler SERIAL_NUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSERIAL_NUMRow(SERIAL_NUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow AddSERIAL_NUMRow(string SERIAL_NUM_Column, BOXRow parentBOXRowByBOX_SERIAL_NUM) {
                SERIAL_NUMRow rowSERIAL_NUMRow = ((SERIAL_NUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SERIAL_NUM_Column,
                        null};
                if ((parentBOXRowByBOX_SERIAL_NUM != null)) {
                    columnValuesArray[1] = parentBOXRowByBOX_SERIAL_NUM[21];
                }
                rowSERIAL_NUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSERIAL_NUMRow);
                return rowSERIAL_NUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SERIAL_NUMDataTable cln = ((SERIAL_NUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SERIAL_NUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSERIAL_NUM_Column = base.Columns["SERIAL_NUM_Column"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSERIAL_NUM_Column = new global::System.Data.DataColumn("SERIAL_NUM_Column", typeof(string), null, global::System.Data.MappingType.SimpleContent);
                base.Columns.Add(this.columnSERIAL_NUM_Column);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow NewSERIAL_NUMRow() {
                return ((SERIAL_NUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SERIAL_NUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SERIAL_NUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SERIAL_NUMRowChanged != null)) {
                    this.SERIAL_NUMRowChanged(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SERIAL_NUMRowChanging != null)) {
                    this.SERIAL_NUMRowChanging(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SERIAL_NUMRowDeleted != null)) {
                    this.SERIAL_NUMRowDeleted(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SERIAL_NUMRowDeleting != null)) {
                    this.SERIAL_NUMRowDeleting(this, new SERIAL_NUMRowChangeEvent(((SERIAL_NUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSERIAL_NUMRow(SERIAL_NUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SERIAL_NUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_HEADERDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERDataTable() {
                this.TableName = "UDF_HEADER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_HEADERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow this[int index] {
                get {
                    return ((UDF_HEADERRow)(this.Rows[index]));
                }
            }
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanging;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowChanged;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleting;
            
            public event UDF_HEADERRowChangeEventHandler UDF_HEADERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_HEADERRow(UDF_HEADERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow AddUDF_HEADERRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_HEADER) {
                UDF_HEADERRow rowUDF_HEADERRow = ((UDF_HEADERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_HEADER != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_HEADER[21];
                }
                rowUDF_HEADERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_HEADERRow);
                return rowUDF_HEADERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_HEADERDataTable cln = ((UDF_HEADERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_HEADERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow NewUDF_HEADERRow() {
                return ((UDF_HEADERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_HEADERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_HEADERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_HEADERRowChanged != null)) {
                    this.UDF_HEADERRowChanged(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_HEADERRowChanging != null)) {
                    this.UDF_HEADERRowChanging(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_HEADERRowDeleted != null)) {
                    this.UDF_HEADERRowDeleted(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_HEADERRowDeleting != null)) {
                    this.UDF_HEADERRowDeleting(this, new UDF_HEADERRowChangeEvent(((UDF_HEADERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_HEADERRow(UDF_HEADERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_HEADERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_DETAILDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILDataTable() {
                this.TableName = "UDF_DETAIL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_DETAILDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow this[int index] {
                get {
                    return ((UDF_DETAILRow)(this.Rows[index]));
                }
            }
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanging;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowChanged;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleting;
            
            public event UDF_DETAILRowChangeEventHandler UDF_DETAILRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_DETAILRow(UDF_DETAILRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow AddUDF_DETAILRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_DETAIL) {
                UDF_DETAILRow rowUDF_DETAILRow = ((UDF_DETAILRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_DETAIL != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_DETAIL[21];
                }
                rowUDF_DETAILRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_DETAILRow);
                return rowUDF_DETAILRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_DETAILDataTable cln = ((UDF_DETAILDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_DETAILDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow NewUDF_DETAILRow() {
                return ((UDF_DETAILRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_DETAILRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_DETAILRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_DETAILRowChanged != null)) {
                    this.UDF_DETAILRowChanged(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_DETAILRowChanging != null)) {
                    this.UDF_DETAILRowChanging(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_DETAILRowDeleted != null)) {
                    this.UDF_DETAILRowDeleted(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_DETAILRowDeleting != null)) {
                    this.UDF_DETAILRowDeleting(this, new UDF_DETAILRowChangeEvent(((UDF_DETAILRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_DETAILRow(UDF_DETAILRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_DETAILDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UDF_BOXDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnKEY;
            
            private global::System.Data.DataColumn columnVALUE;
            
            private global::System.Data.DataColumn columnBOX_Id_0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXDataTable() {
                this.TableName = "UDF_BOX";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UDF_BOXDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KEYColumn {
                get {
                    return this.columnKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALUEColumn {
                get {
                    return this.columnVALUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOX_Id_0Column {
                get {
                    return this.columnBOX_Id_0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow this[int index] {
                get {
                    return ((UDF_BOXRow)(this.Rows[index]));
                }
            }
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanging;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowChanged;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleting;
            
            public event UDF_BOXRowChangeEventHandler UDF_BOXRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUDF_BOXRow(UDF_BOXRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow AddUDF_BOXRow(string KEY, string VALUE, BOXRow parentBOXRowByBOX_UDF_BOX) {
                UDF_BOXRow rowUDF_BOXRow = ((UDF_BOXRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KEY,
                        VALUE,
                        null};
                if ((parentBOXRowByBOX_UDF_BOX != null)) {
                    columnValuesArray[2] = parentBOXRowByBOX_UDF_BOX[21];
                }
                rowUDF_BOXRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUDF_BOXRow);
                return rowUDF_BOXRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UDF_BOXDataTable cln = ((UDF_BOXDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UDF_BOXDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKEY = base.Columns["KEY"];
                this.columnVALUE = base.Columns["VALUE"];
                this.columnBOX_Id_0 = base.Columns["BOX_Id_0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKEY = new global::System.Data.DataColumn("KEY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY);
                this.columnVALUE = new global::System.Data.DataColumn("VALUE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUE);
                this.columnBOX_Id_0 = new global::System.Data.DataColumn("BOX_Id_0", typeof(int), null, global::System.Data.MappingType.Hidden);
                base.Columns.Add(this.columnBOX_Id_0);
                this.columnKEY.AllowDBNull = false;
                this.columnVALUE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow NewUDF_BOXRow() {
                return ((UDF_BOXRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UDF_BOXRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UDF_BOXRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UDF_BOXRowChanged != null)) {
                    this.UDF_BOXRowChanged(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UDF_BOXRowChanging != null)) {
                    this.UDF_BOXRowChanging(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UDF_BOXRowDeleted != null)) {
                    this.UDF_BOXRowDeleted(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UDF_BOXRowDeleting != null)) {
                    this.UDF_BOXRowDeleting(this, new UDF_BOXRowChangeEvent(((UDF_BOXRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUDF_BOXRow(UDF_BOXRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MASTER_WAYBILLS ds = new MASTER_WAYBILLS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UDF_BOXDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MASTER_WAYBILLRow : global::System.Data.DataRow {
            
            private MASTER_WAYBILLDataTable tableMASTER_WAYBILL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MASTER_WAYBILLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMASTER_WAYBILL = ((MASTER_WAYBILLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MASTER_WAYBILL_NUMBER {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_NUMBERColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REGION {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.REGIONColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_MODE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_MODEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTL_CARRIER {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.INTL_CARRIERColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.INTL_CARRIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURRENT_DATE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.CURRENT_DATEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.CURRENT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTUAL_SHIPDATE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.ACTUAL_SHIPDATEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.ACTUAL_SHIPDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTAINER_ID {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.CONTAINER_IDColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.CONTAINER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ID {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_IDColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_NAMEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_2 {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_NAME_2Column]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_NAME_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_NAME_3 {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_NAME_3Column]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_NAME_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_STREETColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_STREETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STREET_2 {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_STREET_2Column]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_STREET_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CITY {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_CITYColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_STATE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_STATEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_ZIP {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_ZIPColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_NAME {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_COUNTRY_NAMEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_COUNTRY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_COUNTRY_CODE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_COUNTRY_CODEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_COUNTRY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_CONTACT {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_CONTACTColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_CONTACTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_FROM_TELEPHONE {
                get {
                    return ((string)(this[this.tableMASTER_WAYBILL.SHIP_FROM_TELEPHONEColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.SHIP_FROM_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MASTER_WAYBILL_UNIT_QTY {
                get {
                    return ((double)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_UNIT_QTYColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_UNIT_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MASTER_WAYBILL_BOX_QTY {
                get {
                    return ((double)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_BOX_QTYColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MASTER_WAYBILL_PALLET_QTY {
                get {
                    return ((double)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_PALLET_QTYColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_PALLET_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MASTER_WAYBILL_ACT_WEIGHT {
                get {
                    return ((double)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_ACT_WEIGHTColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_ACT_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MASTER_WAYBILL_GROSS_WEIGHT {
                get {
                    return ((double)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_GROSS_WEIGHTColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_GROSS_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MASTER_WAYBILL_Id {
                get {
                    return ((int)(this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_IdColumn]));
                }
                set {
                    this[this.tableMASTER_WAYBILL.MASTER_WAYBILL_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow[] GetHOUSE_WAYBILLRows() {
                if ((this.Table.ChildRelations["MASTER_WAYBILL_HOUSE_WAYBILL"] == null)) {
                    return new HOUSE_WAYBILLRow[0];
                }
                else {
                    return ((HOUSE_WAYBILLRow[])(base.GetChildRows(this.Table.ChildRelations["MASTER_WAYBILL_HOUSE_WAYBILL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HOUSE_WAYBILLRow : global::System.Data.DataRow {
            
            private HOUSE_WAYBILLDataTable tableHOUSE_WAYBILL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HOUSE_WAYBILLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHOUSE_WAYBILL = ((HOUSE_WAYBILLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAYBILL_NUMBER {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.WAYBILL_NUMBERColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.WAYBILL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_PALLET_QTY {
                get {
                    return ((double)(this[this.tableHOUSE_WAYBILL.HAWB_PALLET_QTYColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HAWB_PALLET_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_BOX_QTY {
                get {
                    return ((double)(this[this.tableHOUSE_WAYBILL.HAWB_BOX_QTYColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HAWB_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_UNIT_QTY {
                get {
                    return ((double)(this[this.tableHOUSE_WAYBILL.HAWB_UNIT_QTYColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HAWB_UNIT_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONSOL_INVOICE {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.CONSOL_INVOICEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.CONSOL_INVOICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_ACT_WEIGHT {
                get {
                    return ((double)(this[this.tableHOUSE_WAYBILL.HAWB_ACT_WEIGHTColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HAWB_ACT_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HAWB_GROSS_WEIGHT {
                get {
                    return ((double)(this[this.tableHOUSE_WAYBILL.HAWB_GROSS_WEIGHTColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HAWB_GROSS_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_ID {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_IDColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_NAMEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME_2 {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_NAME_2Column]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_NAME_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_NAME_3 {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_NAME_3Column]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_NAME_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STREET {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_STREETColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_STREETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STREET_2 {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_STREET_2Column]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_STREET_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_CITY {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_CITYColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_STATE {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_STATEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_ZIP {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_ZIPColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_COUNTRY_CODE {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_COUNTRY_CODEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_COUNTRY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_COUNTRY_NAME {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_COUNTRY_NAMEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_COUNTRY_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_TELEPHONE {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_TELEPHONEColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_TO_CONTACT {
                get {
                    return ((string)(this[this.tableHOUSE_WAYBILL.SHIP_TO_CONTACTColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.SHIP_TO_CONTACTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HOUSE_WAYBILL_Id {
                get {
                    return ((int)(this[this.tableHOUSE_WAYBILL.HOUSE_WAYBILL_IdColumn]));
                }
                set {
                    this[this.tableHOUSE_WAYBILL.HOUSE_WAYBILL_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MASTER_WAYBILL_Id {
                get {
                    try {
                        return ((int)(this[this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'HOUSE_WAYBILL\' 中資料行 \'MASTER_WAYBILL_Id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRow MASTER_WAYBILLRow {
                get {
                    return ((MASTER_WAYBILLRow)(this.GetParentRow(this.Table.ParentRelations["MASTER_WAYBILL_HOUSE_WAYBILL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MASTER_WAYBILL_HOUSE_WAYBILL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMASTER_WAYBILL_IdNull() {
                return this.IsNull(this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMASTER_WAYBILL_IdNull() {
                this[this.tableHOUSE_WAYBILL.MASTER_WAYBILL_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow[] GetPALLETRows() {
                if ((this.Table.ChildRelations["HOUSE_WAYBILL_PALLET"] == null)) {
                    return new PALLETRow[0];
                }
                else {
                    return ((PALLETRow[])(base.GetChildRows(this.Table.ChildRelations["HOUSE_WAYBILL_PALLET"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PALLETRow : global::System.Data.DataRow {
            
            private PALLETDataTable tablePALLET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PALLETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePALLET = ((PALLETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PALLET_ID {
                get {
                    return ((string)(this[this.tablePALLET.PALLET_IDColumn]));
                }
                set {
                    this[this.tablePALLET.PALLET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PALLET_BOX_QTY {
                get {
                    return ((double)(this[this.tablePALLET.PALLET_BOX_QTYColumn]));
                }
                set {
                    this[this.tablePALLET.PALLET_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PALLET_UNIT_QTY {
                get {
                    return ((double)(this[this.tablePALLET.PALLET_UNIT_QTYColumn]));
                }
                set {
                    this[this.tablePALLET.PALLET_UNIT_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PALLET_Id_0 {
                get {
                    return ((int)(this[this.tablePALLET.PALLET_Id_0Column]));
                }
                set {
                    this[this.tablePALLET.PALLET_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HOUSE_WAYBILL_Id {
                get {
                    try {
                        return ((int)(this[this.tablePALLET.HOUSE_WAYBILL_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'PALLET\' 中資料行 \'HOUSE_WAYBILL_Id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePALLET.HOUSE_WAYBILL_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow HOUSE_WAYBILLRow {
                get {
                    return ((HOUSE_WAYBILLRow)(this.GetParentRow(this.Table.ParentRelations["HOUSE_WAYBILL_PALLET"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["HOUSE_WAYBILL_PALLET"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOUSE_WAYBILL_IdNull() {
                return this.IsNull(this.tablePALLET.HOUSE_WAYBILL_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOUSE_WAYBILL_IdNull() {
                this[this.tablePALLET.HOUSE_WAYBILL_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRow[] GetUDF_PALLETRows() {
                if ((this.Table.ChildRelations["PALLET_UDF_PALLET"] == null)) {
                    return new UDF_PALLETRow[0];
                }
                else {
                    return ((UDF_PALLETRow[])(base.GetChildRows(this.Table.ChildRelations["PALLET_UDF_PALLET"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow[] GetBOXRows() {
                if ((this.Table.ChildRelations["PALLET_BOX"] == null)) {
                    return new BOXRow[0];
                }
                else {
                    return ((BOXRow[])(base.GetChildRows(this.Table.ChildRelations["PALLET_BOX"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_PALLETRow : global::System.Data.DataRow {
            
            private UDF_PALLETDataTable tableUDF_PALLET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_PALLETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_PALLET = ((UDF_PALLETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_PALLET.KEYColumn]));
                }
                set {
                    this[this.tableUDF_PALLET.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_PALLET.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_PALLET.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PALLET_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_PALLET.PALLET_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_PALLET\' 中資料行 \'PALLET_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_PALLET.PALLET_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow PALLETRow {
                get {
                    return ((PALLETRow)(this.GetParentRow(this.Table.ParentRelations["PALLET_UDF_PALLET"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PALLET_UDF_PALLET"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPALLET_Id_0Null() {
                return this.IsNull(this.tableUDF_PALLET.PALLET_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPALLET_Id_0Null() {
                this[this.tableUDF_PALLET.PALLET_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BOXRow : global::System.Data.DataRow {
            
            private BOXDataTable tableBOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BOXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBOX = ((BOXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_ID {
                get {
                    return ((string)(this[this.tableBOX.BOX_IDColumn]));
                }
                set {
                    this[this.tableBOX.BOX_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BOX_UNIT_QTY {
                get {
                    return ((double)(this[this.tableBOX.BOX_UNIT_QTYColumn]));
                }
                set {
                    this[this.tableBOX.BOX_UNIT_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PACK_ID_BOX_QTY {
                get {
                    return ((double)(this[this.tableBOX.PACK_ID_BOX_QTYColumn]));
                }
                set {
                    this[this.tableBOX.PACK_ID_BOX_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRACK_NO_PARCEL {
                get {
                    return ((string)(this[this.tableBOX.TRACK_NO_PARCELColumn]));
                }
                set {
                    this[this.tableBOX.TRACK_NO_PARCELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BOX_WEIGHT {
                get {
                    return ((double)(this[this.tableBOX.BOX_WEIGHTColumn]));
                }
                set {
                    this[this.tableBOX.BOX_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOX_WEIGHT_UOM {
                get {
                    return ((string)(this[this.tableBOX.BOX_WEIGHT_UOMColumn]));
                }
                set {
                    this[this.tableBOX.BOX_WEIGHT_UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PACK_ID {
                get {
                    return ((string)(this[this.tableBOX.PACK_IDColumn]));
                }
                set {
                    this[this.tableBOX.PACK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_PN {
                get {
                    return ((string)(this[this.tableBOX.HP_PNColumn]));
                }
                set {
                    this[this.tableBOX.HP_PNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_DESC_BASE {
                get {
                    return ((string)(this[this.tableBOX.PROD_DESC_BASEColumn]));
                }
                set {
                    this[this.tableBOX.PROD_DESC_BASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROD_TYPE {
                get {
                    return ((string)(this[this.tableBOX.PROD_TYPEColumn]));
                }
                set {
                    this[this.tableBOX.PROD_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HP_SO {
                get {
                    return ((string)(this[this.tableBOX.HP_SOColumn]));
                }
                set {
                    this[this.tableBOX.HP_SOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_REF {
                get {
                    return ((string)(this[this.tableBOX.SHIP_REFColumn]));
                }
                set {
                    this[this.tableBOX.SHIP_REFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REG_CARRIER {
                get {
                    return ((string)(this[this.tableBOX.REG_CARRIERColumn]));
                }
                set {
                    this[this.tableBOX.REG_CARRIERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORDER_TYPE {
                get {
                    return ((string)(this[this.tableBOX.ORDER_TYPEColumn]));
                }
                set {
                    this[this.tableBOX.ORDER_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALES_CHAN {
                get {
                    return ((string)(this[this.tableBOX.SALES_CHANColumn]));
                }
                set {
                    this[this.tableBOX.SALES_CHANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SUB_REGION {
                get {
                    return ((string)(this[this.tableBOX.SUB_REGIONColumn]));
                }
                set {
                    this[this.tableBOX.SUB_REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEST_CODE {
                get {
                    return ((string)(this[this.tableBOX.DEST_CODEColumn]));
                }
                set {
                    this[this.tableBOX.DEST_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AREA_GROUP_ID {
                get {
                    return ((string)(this[this.tableBOX.AREA_GROUP_IDColumn]));
                }
                set {
                    this[this.tableBOX.AREA_GROUP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DUTY_CODE {
                get {
                    return ((string)(this[this.tableBOX.DUTY_CODEColumn]));
                }
                set {
                    this[this.tableBOX.DUTY_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREF_GATEWAY {
                get {
                    return ((string)(this[this.tableBOX.PREF_GATEWAYColumn]));
                }
                set {
                    this[this.tableBOX.PREF_GATEWAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_SERV_LEVEL {
                get {
                    return ((string)(this[this.tableBOX.TRANS_SERV_LEVELColumn]));
                }
                set {
                    this[this.tableBOX.TRANS_SERV_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    return ((int)(this[this.tableBOX.BOX_Id_0Column]));
                }
                set {
                    this[this.tableBOX.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PALLET_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableBOX.PALLET_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BOX\' 中資料行 \'PALLET_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBOX.PALLET_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow PALLETRow {
                get {
                    return ((PALLETRow)(this.GetParentRow(this.Table.ParentRelations["PALLET_BOX"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PALLET_BOX"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPALLET_Id_0Null() {
                return this.IsNull(this.tableBOX.PALLET_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPALLET_Id_0Null() {
                this[this.tableBOX.PALLET_Id_0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow[] GetSERIAL_NUMRows() {
                if ((this.Table.ChildRelations["BOX_SERIAL_NUM"] == null)) {
                    return new SERIAL_NUMRow[0];
                }
                else {
                    return ((SERIAL_NUMRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_SERIAL_NUM"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow[] GetUDF_HEADERRows() {
                if ((this.Table.ChildRelations["BOX_UDF_HEADER"] == null)) {
                    return new UDF_HEADERRow[0];
                }
                else {
                    return ((UDF_HEADERRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_HEADER"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow[] GetUDF_DETAILRows() {
                if ((this.Table.ChildRelations["BOX_UDF_DETAIL"] == null)) {
                    return new UDF_DETAILRow[0];
                }
                else {
                    return ((UDF_DETAILRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_DETAIL"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow[] GetUDF_BOXRows() {
                if ((this.Table.ChildRelations["BOX_UDF_BOX"] == null)) {
                    return new UDF_BOXRow[0];
                }
                else {
                    return ((UDF_BOXRow[])(base.GetChildRows(this.Table.ChildRelations["BOX_UDF_BOX"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SERIAL_NUMRow : global::System.Data.DataRow {
            
            private SERIAL_NUMDataTable tableSERIAL_NUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SERIAL_NUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSERIAL_NUM = ((SERIAL_NUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERIAL_NUM_Column {
                get {
                    try {
                        return ((string)(this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SERIAL_NUM\' 中資料行 \'SERIAL_NUM_Column\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableSERIAL_NUM.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SERIAL_NUM\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSERIAL_NUM.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_SERIAL_NUM"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_SERIAL_NUM"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERIAL_NUM_ColumnNull() {
                return this.IsNull(this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERIAL_NUM_ColumnNull() {
                this[this.tableSERIAL_NUM.SERIAL_NUM_ColumnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableSERIAL_NUM.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableSERIAL_NUM.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_HEADERRow : global::System.Data.DataRow {
            
            private UDF_HEADERDataTable tableUDF_HEADER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_HEADERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_HEADER = ((UDF_HEADERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_HEADER.KEYColumn]));
                }
                set {
                    this[this.tableUDF_HEADER.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_HEADER.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_HEADER.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_HEADER.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_HEADER\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_HEADER.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_HEADER"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_HEADER"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_HEADER.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_HEADER.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_DETAILRow : global::System.Data.DataRow {
            
            private UDF_DETAILDataTable tableUDF_DETAIL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_DETAILRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_DETAIL = ((UDF_DETAILDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_DETAIL.KEYColumn]));
                }
                set {
                    this[this.tableUDF_DETAIL.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_DETAIL.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_DETAIL.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_DETAIL.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_DETAIL\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_DETAIL.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_DETAIL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_DETAIL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_DETAIL.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_DETAIL.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UDF_BOXRow : global::System.Data.DataRow {
            
            private UDF_BOXDataTable tableUDF_BOX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UDF_BOXRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUDF_BOX = ((UDF_BOXDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KEY {
                get {
                    return ((string)(this[this.tableUDF_BOX.KEYColumn]));
                }
                set {
                    this[this.tableUDF_BOX.KEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VALUE {
                get {
                    return ((string)(this[this.tableUDF_BOX.VALUEColumn]));
                }
                set {
                    this[this.tableUDF_BOX.VALUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOX_Id_0 {
                get {
                    try {
                        return ((int)(this[this.tableUDF_BOX.BOX_Id_0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'UDF_BOX\' 中資料行 \'BOX_Id_0\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableUDF_BOX.BOX_Id_0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow BOXRow {
                get {
                    return ((BOXRow)(this.GetParentRow(this.Table.ParentRelations["BOX_UDF_BOX"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["BOX_UDF_BOX"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOX_Id_0Null() {
                return this.IsNull(this.tableUDF_BOX.BOX_Id_0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOX_Id_0Null() {
                this[this.tableUDF_BOX.BOX_Id_0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MASTER_WAYBILLRowChangeEvent : global::System.EventArgs {
            
            private MASTER_WAYBILLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRowChangeEvent(MASTER_WAYBILLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MASTER_WAYBILLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HOUSE_WAYBILLRowChangeEvent : global::System.EventArgs {
            
            private HOUSE_WAYBILLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRowChangeEvent(HOUSE_WAYBILLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HOUSE_WAYBILLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PALLETRowChangeEvent : global::System.EventArgs {
            
            private PALLETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRowChangeEvent(PALLETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PALLETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_PALLETRowChangeEvent : global::System.EventArgs {
            
            private UDF_PALLETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRowChangeEvent(UDF_PALLETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_PALLETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BOXRowChangeEvent : global::System.EventArgs {
            
            private BOXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRowChangeEvent(BOXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BOXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SERIAL_NUMRowChangeEvent : global::System.EventArgs {
            
            private SERIAL_NUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRowChangeEvent(SERIAL_NUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SERIAL_NUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_HEADERRowChangeEvent : global::System.EventArgs {
            
            private UDF_HEADERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRowChangeEvent(UDF_HEADERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_HEADERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_DETAILRowChangeEvent : global::System.EventArgs {
            
            private UDF_DETAILRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRowChangeEvent(UDF_DETAILRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_DETAILRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UDF_BOXRowChangeEvent : global::System.EventArgs {
            
            private UDF_BOXRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRowChangeEvent(UDF_BOXRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UDF_BOXRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
