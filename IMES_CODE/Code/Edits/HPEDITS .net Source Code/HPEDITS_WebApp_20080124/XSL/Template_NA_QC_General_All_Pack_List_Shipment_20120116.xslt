<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:param name="ACTUAL_SHIPDATE_MAX" select="'20'"/>
	<xsl:param name="CURRENT_DATE_MAX" select="'20'"/>
	<xsl:param name="CUST_ORD_REF_max" select="'35'"/>
	<xsl:param name="CUST_PO_max" select="'30'"/>
	<xsl:param name="DUTY_CODE_MAX" select="'20'"/>
	<xsl:param name="HP_SO_LINE_ITEM_max" select="'10'"/>
	<xsl:param name="INTL_CARRIER_MAX" select="'20'"/>
	<xsl:param name="PACK_ID_CONS_MAX" select="'20'"/>
	<xsl:param name="PACK_ID_MAX" select="'20'"/>
	<xsl:param name="REG_CARRIER_MAX" select="'20'"/>
	<xsl:param name="RESELLER_NAME_MAX" select="'35'"/>
	<xsl:param name="RETURN_TO_CITY_max" select="'30'"/>
	<xsl:param name="RETURN_TO_COUNTRY_NAME_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_2_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_3_max" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_max" select="'30'"/>
	<xsl:param name="RETURN_TO_STATE_max" select="'3'"/>
	<xsl:param name="RETURN_TO_STREET_2_max" select="'35'"/>
	<xsl:param name="RETURN_TO_STREET_max" select="'35'"/>
	<xsl:param name="RETURN_TO_TELEPHONE_max" select="'30'"/>
	<xsl:param name="RETURN_TO_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_FROM_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_FROM_COUNTRY_NAME_max" select="'13'"/>
	<xsl:param name="SHIP_FROM_NAME_2_MAX" select="'30'"/>
	<xsl:param name="SHIP_FROM_NAME_MAX" select="'30'"/>
	<xsl:param name="SHIP_FROM_STATE_max" select="'3'"/>
	<xsl:param name="SHIP_FROM_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_FROM_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_FROM_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_MODE_MAX" select="'20'"/>
	<xsl:param name="SHIP_TO_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_TO_CONTACT_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_COUNTRY_NAME_MAX" select="'25'"/>
	<xsl:param name="SHIP_TO_ID_MAX" select="'30'"/>
	<xsl:param name="SHIP_TO_NAME_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_3_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_STATE_max" select="'3'"/>
	<xsl:param name="SHIP_TO_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_TELEPHONE_MAX" select="'35'"/>
	<xsl:param name="SHIP_TO_ZIP_MAX" select="'10'"/>
	<xsl:param name="SHIP_VIA_CITY_MAX" select="'30'"/>
	<xsl:param name="SHIP_VIA_COUNTRY_NAME_MAX" select="'25'"/>
	<xsl:param name="SHIP_VIA_NAME_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_NAME_3_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_NAME_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_STATE_MAX" select="'3'"/>
	<xsl:param name="SHIP_VIA_STREET_2_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_STREET_MAX" select="'35'"/>
	<xsl:param name="SHIP_VIA_ZIP_MAX" select="'10'"/>
	<xsl:param name="WAYBILL_NUMBER_MAX" select="'20'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="default-page" page-height="8.27in" page-width="11.69in" margin-left="0.5cm" margin-right="0.5cm">
				<fo:region-body margin-top="7.35cm" margin-bottom="0.5in"/>
				<fo:region-before extent="7.35cm"/>
				<fo:region-after extent="0.5in"/>
			</fo:simple-page-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="default-page" initial-page-number="1" format="1">
				<xsl:call-template name="headerall"/>
				<xsl:call-template name="footerall"/>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<fo:block/>
							<xsl:for-each select="PACK_ID">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="PACK_ID_LINE_ITEM">
									<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" table-layout="fixed" width="100%">
										<fo:table-column column-width="3%"/>
										<fo:table-column column-width="9%"/>
										<fo:table-column column-width="9%"/>
										<fo:table-column column-width="18%"/>
										<fo:table-column column-width="35%"/>
										<fo:table-column column-width="7%"/>
										<fo:table-column column-width="9%"/>
										<fo:table-column column-width="10%"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row background-color="#787878" color="white" text-align="center">
												<fo:table-cell border="1pt" border-color="black" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>NO.</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>PACK ID</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>HP SO#</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>CUSTOMER PO# </xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline>
															<xsl:text>/ BC Client</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline>
															<xsl:text>ORDER REF#</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>PRODUCT DESCRIPTION</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline>
															<xsl:text>PART NUMBER / No de pièce</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>UNIT QTY /</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline>
															<xsl:text>Qté&#160; Unité</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>BOX WEIGHT / Poids Boites </xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline>
																	<xsl:text>KG</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="1pt" border-color="black" border-left-style="none" border-style="solid" padding="0" display-align="before">
													<fo:block>
														<fo:inline>
															<xsl:text>NET WEIGHT /</xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline>
															<xsl:text>Poids Total </xsl:text>
														</fo:inline>
														<fo:block/>
														<fo:inline-container>
															<fo:block>
																<xsl:text>&#x2029;</xsl:text>
															</fo:block>
														</fo:inline-container>
														<fo:block margin="0pt">
															<fo:block>
																<fo:inline>
																	<xsl:text>KG</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:for-each select="PACK_ID_LINE_ITEM">
												<fo:table-row>
													<fo:table-cell border="none" padding="0" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<fo:inline>
																<xsl:value-of select="position()"/>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="PACK_ID">
																	<xsl:for-each select="PACK_ID">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="PACK_ID">
																	<xsl:for-each select="PACK_ID">
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
															<fo:block/>
															<fo:inline font-size="6pt">
																<xsl:text>PACK ID: </xsl:text>
															</fo:inline>
															<xsl:for-each select="$XML">
																<xsl:for-each select="PACK_ID">
																	<xsl:for-each select="PACK_ID">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block font-size="6pt">
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-size="6pt">
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="PACK_ID">
																	<xsl:for-each select="HP_SO">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
															<fo:block/>
															<xsl:if test="string-length(HP_SO_LINE_ITEM) &gt;0">
																<fo:inline>
																	<xsl:text>Item: </xsl:text>
																</fo:inline>
															</xsl:if>
															<fo:inline>
																<xsl:value-of select="substring(  HP_SO_LINE_ITEM  , 1 , $HP_SO_LINE_ITEM_max )"/>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:value-of select="substring(  ../CUST_ORD_REF  , 1 , $CUST_ORD_REF_max )"/>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:value-of select="substring(  ../CUST_PO  , 1 , $CUST_PO_max )"/>
																	</fo:inline>
																</fo:block>
															</fo:block>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" display-align="center">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:for-each select="PROD_TYPE">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:for-each select="PROD_DESC_BASE">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block display-align="before" margin="0pt">
																<fo:block>
																	<xsl:for-each select="HP_PN">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:if test="string-length( HP_PN_COMPONENTS/COMPONENT_UNIT_QTY ) &gt;0">
																<fo:inline>
																	<xsl:text>Above model includes the following integrated components:</xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</xsl:if>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<xsl:if test="HP_PN_COMPONENTS">
																<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" height="7pt" line-height="7pt" padding="0pt" table-layout="fixed" width="100%">
																	<fo:table-column column-width="25%"/>
																	<fo:table-column column-width="70%"/>
																	<fo:table-column column-width="5%"/>
																	<fo:table-body start-indent="0pt">
																		<xsl:for-each select="HP_PN_COMPONENTS">
																			<fo:table-row>
																				<fo:table-cell border="none" padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:if test="string-length(  COMPONENT_UNIT_QTY  ) &gt;0">
																							<fo:inline>
																								<xsl:text>&gt; </xsl:text>
																							</fo:inline>
																							<xsl:for-each select="HP_PN_COMPONENT">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:if>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border="none" padding="2pt" display-align="center">
																					<fo:block>
																						<xsl:if test="string-length(  COMPONENT_UNIT_QTY  ) &gt;0">
																							<xsl:for-each select="PROD_DESC_COMP">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:if>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border="none" padding="2pt" text-align="right" display-align="center">
																					<fo:block>
																						<xsl:if test="string-length( . )  &gt; 0">
																							<xsl:for-each select="COMPONENT_UNIT_QTY">
																								<xsl:variable name="value-of-template">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																							<fo:inline>
																								<xsl:text>EA</xsl:text>
																							</fo:inline>
																						</xsl:if>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</xsl:for-each>
																	</fo:table-body>
																</fo:table>
															</xsl:if>
															<xsl:if test="count( SPECIAL_INSTR_DETAIL)">
																<fo:block/>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:block/>
																		<xsl:if test="string-length(PICKING_INSTR_DETAIL) &gt;0 or string-length(SHIPPING_INSTR_DETAIL) &gt; 0 or string-length(DELIVERY_INSTR_DETAIL) &gt; 0 or string-length(SPECIAL_INSTR_DETAIL) &gt; 0 or string-length(HANDLING_INSTR_DETAIL) &gt; 0">
																			<fo:inline>
																				<xsl:text>Detailed Instructions:</xsl:text>
																			</fo:inline>
																		</xsl:if>
																		<fo:block/>
																		<xsl:for-each select="PICKING_INSTR_DETAIL">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:block/>
																		<xsl:for-each select="SHIPPING_INSTR_DETAIL">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:block/>
																		<xsl:for-each select="DELIVERY_INSTR_DETAIL">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:block/>
																		<xsl:for-each select="SPECIAL_INSTR_DETAIL">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:block/>
																		<xsl:for-each select="HANDLING_INSTR_DETAIL">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</fo:block>
																</fo:block>
															</xsl:if>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" text-align="right" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin-left="100% - 100%" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:for-each select="PACK_ID_LINE_ITEM_UNIT_QTY">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0" text-align="right" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin-left="100% - 100%" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<fo:inline>
																<xsl:value-of select="format-number(number(EXTD_BOX_WEIGHT  div  PACK_ID_LINE_ITEM_BOX_QTY), '##0.00')"/>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="none" padding="0pt" text-align="right" display-align="before">
														<fo:block>
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block height="5pt" line-height="5pt" margin="0pt">
																<fo:block>
																	<fo:inline>
																		<xsl:text>&#160;</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:block>
															<xsl:for-each select="EXTD_BOX_WEIGHT">
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:for-each>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:for-each>
							<fo:block/>
							<fo:block text-align="center">
								<fo:leader leader-pattern="rule" rule-thickness="1pt" leader-length="100%"/>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" border-style="none" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" display-align="before" table-layout="fixed" width="100%">
								<fo:table-column column-width="0.5in"/>
								<fo:table-column column-width="1.2in"/>
								<fo:table-column column-width="1.2in"/>
								<fo:table-column column-width="6.25in"/>
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="none" border-style="none" padding="0pt" display-align="before">
											<fo:block>
												<fo:inline>
													<xsl:text>TOTAL</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="none" border-style="none" padding="0pt" text-align="left" display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin="0pt">
													<fo:block>
														<fo:inline>
															<xsl:text>&#160;&#160; Total Units / Total Unités:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin="0pt">
													<fo:block>
														<fo:inline>
															<xsl:text>=Total Boxes / Total Boites:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" margin="0pt">
													<fo:block>
														<fo:inline>
															<xsl:text>=Total Pallets / Total Palettes:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="none" border-style="none" padding="0pt" text-align="right" display-align="center">
											<fo:block>
												<xsl:for-each select="PACK_ID">
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="PACK_ID_UNIT_QTY">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<xsl:for-each select="PACK_ID_BOX_QTY">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
													<fo:inline-container>
														<fo:block>
															<xsl:text>&#x2029;</xsl:text>
														</fo:block>
													</fo:inline-container>
													<fo:block margin="0pt">
														<fo:block>
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:block>
												</xsl:for-each>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="none" border-style="none" padding="0pt" display-align="before" text-align="right">
											<fo:block>
												<fo:inline>
													<xsl:value-of select="sum(   PACK_ID/PACK_ID_LINE_ITEM/PACK_ID_LINE_ITEM_UNIT_QTY )"/>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="none" border-style="none" padding="0pt" display-align="before" text-align="right">
											<fo:block>
												<fo:inline>
													<xsl:value-of select="format-number(number(sum(   PACK_ID/PACK_ID_LINE_ITEM/EXTD_BOX_WEIGHT   )), '##0.00')"/>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" padding="0pt" table-layout="fixed" width="100%">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-column column-width="30%"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="none" padding="2pt" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell border="none" line-height="0pt" display-align="before" padding="2pt" text-align="left">
											<fo:block>
												<fo:inline>
													<xsl:text>THIS DOCUMENT IS TRUE AND ACCURATE.</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell border="none" border-collapse="collapse" border-style="none" padding="2pt" height="27" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell border="none" height="15pt" padding="2pt" display-align="center">
											<fo:block>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline>
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
									<fo:table-row>
										<fo:table-cell border="none" border-collapse="collapse" border-style="none" padding="2pt" display-align="center">
											<fo:block/>
										</fo:table-cell>
										<fo:table-cell border="none" border-top-color="black" border-top-style="solid" border-top-width="0.5pt" padding="2pt" height="14" display-align="center">
											<fo:block>
												<fo:inline>
													<xsl:text>(Signature)</xsl:text>
												</fo:inline>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" padding="0pt" table-layout="fixed" width="100%">
								<fo:table-column column-width="proportional-column-width(1)"/>
								<fo:table-column column-width="30%"/>
								<fo:table-body start-indent="0pt">
									<fo:table-row>
										<fo:table-cell border="none" border-collapse="collapse" border-style="none" padding="2pt" display-align="center">
											<fo:block>
												<fo:block/>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:block margin="0pt">
													<fo:block>
														<fo:inline>
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:block>
												<xsl:if test="string-length(PACK_ID/PICKING_INSTR_HEAD) &gt;0 or string-length(PACK_ID/SHIPPING_INSTR_HEAD) &gt; 0 or string-length(PACK_ID/DELIVERY_INSTR_HEAD) &gt; 0 or string-length(PACK_ID/SPECIAL_INSTR_HEAD) &gt; 0">
													<fo:block/>
													<fo:block/>
													<xsl:for-each select="PACK_ID">
														<fo:inline font-family="Arial" font-size="8pt" font-weight="bold">
															<xsl:text>SPECIAL INSTRUCTIONS / Instr. spéciales:</xsl:text>
														</fo:inline>
														<xsl:for-each select="PICKING_INSTR_HEAD">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block>
														</xsl:for-each>
														<fo:block/>
														<xsl:for-each select="SHIPPING_INSTR_HEAD">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block>
														</xsl:for-each>
														<fo:block/>
														<xsl:for-each select="DELIVERY_INSTR_HEAD">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block>
														</xsl:for-each>
														<fo:block/>
														<xsl:for-each select="SPECIAL_INSTR_HEAD">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x2029;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:block margin="0pt">
																<fo:block>
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:block>
															</fo:block>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:if>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell border="none" border-style="none" padding="0pt" display-align="center">
											<fo:block>
												<fo:block/>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="headerall">
		<fo:static-content flow-name="xsl-region-before">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="8pt" font-style="normal" font-variant="normal" font-weight="normal" padding="0pt" table-layout="fixed" width="100%">
					<fo:table-column column-width="250"/>
					<fo:table-column column-width="250"/>
					<fo:table-column column-width="125"/>
					<fo:table-column column-width="289"/>
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell border="none" padding="2pt" height="1" display-align="center">
								<fo:block/>
							</fo:table-cell>
							<fo:table-cell border="none" padding="2pt" height="1" display-align="center">
								<fo:block/>
							</fo:table-cell>
							<fo:table-cell border="none" padding="2pt" height="1" display-align="center">
								<fo:block/>
							</fo:table-cell>
							<fo:table-cell border="none" padding="2pt" height="1" display-align="center">
								<fo:block/>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell border="none" font-family="Arial" font-size="12pt" font-style="normal" font-variant="normal" font-weight="bold" line-height="10pt" display-align="center" padding="2pt" height="43" text-align="left">
								<fo:block>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( RESELLER_NAME , 1 , $RESELLER_NAME_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" font-family="Arial" font-size="12pt" font-style="normal" font-variant="normal" font-weight="bold" padding="2pt" height="30" text-align="left" display-align="center">
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<fo:inline>
												<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; PACKING LIST</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<fo:inline>
												<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; Liste de Colisage</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" height="30" text-align="left" display-align="center">
								<fo:block>
									<fo:inline>
										<xsl:text>DATE:&#160; </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( CURRENT_DATE , 1 , $CURRENT_DATE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" padding="2pt" height="30" display-align="center">
								<fo:block>
									<fo:inline>
										<xsl:text>PAGE&#160; </xsl:text>
									</fo:inline>
									<fo:page-number/>
									<fo:inline>
										<xsl:text>&#160; De&#160;&#160;&#160;&#160; </xsl:text>
									</fo:inline>
									<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
									<fo:block/>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell border="none" display-align="before" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" height="934">
								<fo:block>
									<fo:block/>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_MAX )"/>
											</fo:inline>
											<fo:block/>
											<fo:inline>
												<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_MAX )"/>
											</fo:inline>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_FROM_STREET , 1 , $SHIP_FROM_STREET_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_MAX )"/>
													</fo:inline>
													<fo:block/>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
													</fo:inline>
													<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
														<fo:inline>
															<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
														</fo:inline>
													</xsl:if>
													<fo:inline>
														<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:text>&#160; </xsl:text>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline font-weight="bold">
														<xsl:text>SHIP TO / Expédier&#160; À:</xsl:text>
													</fo:inline>
													<fo:inline>
														<xsl:text>&#160; </xsl:text>
													</fo:inline>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_ID , 1 , $SHIP_TO_ID_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_NAME_2 , 1 , $SHIP_TO_NAME_2_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_STREET , 1 , $SHIP_TO_STREET_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
													</fo:inline>
													<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
														<fo:inline>
															<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
														</fo:inline>
														<fo:inline>
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</xsl:if>
													<xsl:if test="string-length(SHIP_TO_ZIP) &gt;0">
														<fo:inline>
															<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_MAX ))"/>
														</fo:inline>
													</xsl:if>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_CONTACT , 1 , $SHIP_TO_CONTACT_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_TO_TELEPHONE , 1 , $SHIP_TO_TELEPHONE_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" font-weight="normal" display-align="before" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" height="934">
								<fo:block>
									<fo:inline>
										<xsl:text>&#160; </xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline font-family="Arial" font-size="8pt" font-weight="bold">
										<xsl:text>SHIP VIA:</xsl:text>
									</fo:inline>
									<fo:block/>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_NAME , 1 , $SHIP_VIA_NAME_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_NAME_2 , 1 , $SHIP_VIA_NAME_2_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_NAME_3 , 1 , $SHIP_VIA_NAME_3_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_STREET , 1 , $SHIP_VIA_STREET_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_STREET_2 , 1 , $SHIP_VIA_STREET_2_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_CITY , 1 , $SHIP_VIA_CITY_MAX )"/>
													</fo:inline>
													<xsl:if test="string-length(SHIP_VIA_STATE) &gt;0">
														<fo:inline>
															<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_VIA_STATE , 1, $SHIP_VIA_STATE_MAX ))"/>
														</fo:inline>
														<fo:inline>
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</xsl:if>
													<xsl:if test="string-length(SHIP_VIA_ZIP) &gt;0">
														<fo:inline>
															<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_VIA_ZIP , 1, $SHIP_VIA_ZIP_MAX ))"/>
														</fo:inline>
													</xsl:if>
												</fo:block>
											</fo:block>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:block margin="0pt">
												<fo:block>
													<fo:inline>
														<xsl:value-of select="substring( SHIP_VIA_COUNTRY_NAME , 1 , $SHIP_VIA_COUNTRY_NAME_MAX )"/>
													</fo:inline>
												</fo:block>
											</fo:block>
										</xsl:for-each>
									</xsl:for-each>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" display-align="before" padding="2pt" height="934">
								<fo:block>
									<fo:inline>
										<xsl:text> CONSOLIDATED PACK ID</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>PACK ID</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>AIR WAYBILL #</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<fo:inline>
												<xsl:text>&#160;</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
									<fo:inline>
										<xsl:text>DUTY CODE</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>INTERNATIONAL CARRIER / FF</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>REGIONAL CARRIER / FF</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP MODE</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP DATE / Date d’envoi</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>SHIP FROM / Expédier De</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" display-align="before" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="2pt" height="934">
								<fo:block>
									<fo:inline>
										<xsl:text> : </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( PACK_ID_CONS , 1 , $PACK_ID_CONS_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( PACK_ID , 1 , $PACK_ID_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block>
											<fo:inline>
												<xsl:text>&#160;</xsl:text>
											</fo:inline>
										</fo:block>
									</fo:block>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring( DUTY_CODE , 1 , $DUTY_CODE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  INTL_CARRIER  , 1 , $INTL_CARRIER_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  REG_CARRIER  , 1 , $REG_CARRIER_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_MODE  , 1 , $SHIP_MODE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  ACTUAL_SHIPDATE  , 1 , $ACTUAL_SHIPDATE_MAX )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block/>
									<fo:inline>
										<xsl:text>: </xsl:text>
									</fo:inline>
									<xsl:for-each select="$XML">
										<xsl:for-each select="PACK_ID">
											<fo:inline>
												<xsl:value-of select="substring(  SHIP_FROM_COUNTRY_NAME  ,1 , $SHIP_FROM_COUNTRY_NAME_max )"/>
											</fo:inline>
										</xsl:for-each>
									</xsl:for-each>
									<fo:inline>
										<xsl:text>&#160;</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="footerall">
		<fo:static-content flow-name="xsl-region-after">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table border="none" border-collapse="collapse" font-family="Arial" font-size="7pt" padding="0pt" table-layout="fixed" width="100%">
					<fo:table-column column-width="15%"/>
					<fo:table-column column-width="60%"/>
					<fo:table-column column-width="150"/>
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell border="none" padding="0" height="30" text-align="left" display-align="center">
								<fo:block>
									<fo:inline>
										<xsl:text>NGLAPKS110909</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" font-size="smaller" padding="0" text-align="left" display-align="center">
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block font-family="Arial Black" font-size="7pt" white-space="pre" white-space-collapse="false" margin="0pt">
										<fo:block>
											<xsl:for-each select="$XML">
												<xsl:for-each select="PACK_ID">
													<xsl:for-each select="UDF_HEADER">
														<xsl:if test="./KEY = &apos;ODM_TEXT2&apos; and string-length(./VALUE)&gt;0">
															<fo:inline font-weight="bold">
																<xsl:value-of select="substring( VALUE , 1 , 80 )"/>
															</fo:inline>
														</xsl:if>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</fo:block>
									</fo:block>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" padding="0" height="30" text-align="right" display-align="center">
								<fo:block>
									<fo:inline>
										<xsl:text>Packing List - CUSTOMER COPY</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell border="none" padding="0" number-columns-spanned="3" display-align="center">
								<fo:block>
									<fo:block text-align="center">
										<fo:leader top="-37pt" leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
									</fo:block>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell border="none" font-size="smaller" padding="0" number-columns-spanned="2" text-align="left" display-align="center">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>Document: C:\Documents and Settings\david_riffel\My Documents\AllmyESG2\Active Projects\Direct Ship Stuff\b-EDITS Docs in HVLS SP\Pack List\Template_NA_General_All_Pack_List_Shipment_20080416.sps</xsl:text>
									</fo:inline>
								</fo:block>
							</fo:table-cell>
							<fo:table-cell border="none" font-size="smaller" padding="0" text-align="right" display-align="center">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>Page: </xsl:text>
									</fo:inline>
									<fo:page-number font-weight="bold"/>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
