<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 sp2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:param name="CUST_ORD_REF_max" select="'30'"/>
	<xsl:param name="CUST_PO_max" select="'30'"/>
	<xsl:param name="DEST_CODE_max" select="'12'"/>
	<xsl:param name="DUTY_CODE_max" select="'12'"/>
	<xsl:param name="HP_Cust_PN_max" select="'30'"/>
	<xsl:param name="HP_PN_max" select="'16'"/>
	<xsl:param name="HP_SO_max" select="'21'"/>
	<xsl:param name="INTL_CARRIER_max" select="'30'"/>
	<xsl:param name="ODM_BARCODE1_max" select="'15'"/>
	<xsl:param name="ODM_TEXT1_max" select="'60'"/>
	<xsl:param name="ODM_TEXT2_max" select="'12'"/>
	<xsl:param name="ODM_TEXT3_max" select="'21'"/>
	<xsl:param name="REG_CARRIER_max" select="'12'"/>
	<xsl:param name="RETURN_TO_CITY" select="'10'"/>
	<xsl:param name="RETURN_TO_CITY_max" select="'40'"/>
	<xsl:param name="RETURN_TO_NAME" select="'35'"/>
	<xsl:param name="RETURN_TO_NAME_2" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_3" select="'30'"/>
	<xsl:param name="RETURN_TO_NAME_max" select="'40'"/>
	<xsl:param name="RETURN_TO_STATE_max" select="'5'"/>
	<xsl:param name="RETURN_TO_STREET" select="'35'"/>
	<xsl:param name="RETURN_TO_STREET_2" select="'30'"/>
	<xsl:param name="RETURN_TO_STREET_max" select="'35'"/>
	<xsl:param name="RETURN_TO_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_FROM_CITY_max" select="'12'"/>
	<xsl:param name="SHIP_FROM_COUNTRY_NAME_max" select="'15'"/>
	<xsl:param name="SHIP_FROM_NAME_2_max" select="'40'"/>
	<xsl:param name="SHIP_FROM_NAME_3_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_NAME_max" select="'30'"/>
	<xsl:param name="SHIP_FROM_STATE_max" select="'8'"/>
	<xsl:param name="SHIP_FROM_STREET_2_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_STREET_max" select="'35'"/>
	<xsl:param name="SHIP_FROM_ZIP_max" select="'10'"/>
	<xsl:param name="SHIP_TO_CITY_max" select="'30'"/>
	<xsl:param name="SHIP_TO_CONTACT_max" select="'35'"/>
	<xsl:param name="SHIP_TO_COUNTRY_NAME_max" select="'24'"/>
	<xsl:param name="SHIP_TO_ID_max" select="'18'"/>
	<xsl:param name="SHIP_TO_NAME_2_max" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_3_max" select="'35'"/>
	<xsl:param name="SHIP_TO_NAME_max" select="'35'"/>
	<xsl:param name="SHIP_TO_STATE_max" select="'16'"/>
	<xsl:param name="SHIP_TO_STREET_2_max" select="'35'"/>
	<xsl:param name="SHIP_TO_STREET_max" select="'35'"/>
	<xsl:param name="SHIP_TO_TELEPHONE_max" select="'18'"/>
	<xsl:param name="SHIP_TO_ZIP_max" select="'15'"/>
	<xsl:param name="STCC_max" select="'15'"/>
	<xsl:param name="SUB_REGION_max" select="'12'"/>
	<xsl:param name="WAREHOUSE_CODE_max" select="'30'"/>
	<xsl:param name="WAYBILL_NUMBER_max" select="'30'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="default-page" page-height="55mm" page-width="127mm" margin-left="0.1cm" margin-right="0.1cm">
				<fo:region-body margin-top="0.05cm" margin-bottom="-0.6cm"/>
			</fo:simple-page-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="default-page" initial-page-number="1" format="1">
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<xsl:for-each select="BOXES">
								<xsl:for-each select="BOX">
									<xsl:choose>
										<xsl:when test="BOX_PACKID_QTY=1 or  BOX_PACKID_QTY =2">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="35%"/>
												<fo:table-column column-width="30%"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="5pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline>
																	<xsl:text>SHIP FROM: </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_3 , 1 , $SHIP_FROM_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_STREET  , 1 , $SHIP_FROM_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="7pt">
																	<xsl:text>SHIP TO: </xsl:text>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_ID  , 1 , $SHIP_TO_ID_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_2  , 1 , $SHIP_TO_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_STREET , 1 , $SHIP_TO_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
																	<fo:inline font-size="7pt">
																		<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_max ))"/>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-size="6pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Customer SKU:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:value-of select="PACK_ID_LINE_ITEM/HP_Cust_PN"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Carrier: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( INTL_CARRIER , 1 , $INTL_CARRIER_max )"/>
																</fo:inline>
																<xsl:if test="string-length(REG_CARRIER) &gt;0">
																	<fo:inline font-size="6pt">
																		<xsl:value-of select="concat(&quot; / &quot;, substring( REG_CARRIER , 1, $REG_CARRIER_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>P/N: </xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>AWB: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-bottom-style="none" border-left-style="none" font-family="Arial" font-size="7pt" font-weight="normal" line-height="8pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="left" display-align="before">
															<fo:block>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text> PACK ID QTY: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin="0pt">
																		<fo:block>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:text>*</xsl:text>
																			</fo:inline>
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:text>*</xsl:text>
																			</fo:inline>
																			<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																			</xsl:if>
																		</fo:block>
																	</fo:block>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin="0pt">
																		<fo:block>
																			<fo:inline>
																				<xsl:text>&#160;</xsl:text>
																			</fo:inline>
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																			</fo:inline>
																			<fo:inline>
																				<xsl:value-of select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY"/>
																			</fo:inline>
																			<fo:inline>
																				<xsl:text>&#160;</xsl:text>
																			</fo:inline>
																		</fo:block>
																	</fo:block>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160; </xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text>BOX ID: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="8pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="right" display-align="before">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:block/>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-family="Arial" font-size="7pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Qty: 1 </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Unit Qty:</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_UNIT_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" border-right-style="none" border-top-style="none" font-family="Arial" font-size="6pt" font-weight="bold" line-height="6pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Sales Order #: </xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:for-each select="HP_SO">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																	<fo:inline>
																		<xsl:text>&#160; </xsl:text>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="none" border-collapse="collapse" border-top-style="none" line-height="0.1pt" number-columns-spanned="2" padding="0" height="1" display-align="center">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block white-space="pre" white-space-collapse="false" margin="0pt">
																	<fo:block>
																		<xsl:for-each select="UDF_HEADER">
																			<xsl:if test="./KEY = &apos;ODM_TEXT1&apos; and string-length(./VALUE)&gt;0">
																				<fo:inline font-family="Arial" font-size="6pt" font-weight="bold">
																					<xsl:value-of select="substring( VALUE , 1 , $ODM_TEXT1_max )"/>
																				</fo:inline>
																			</xsl:if>
																		</xsl:for-each>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="0" display-align="center">
															<fo:block/>
														</fo:table-cell>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="2pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="0" height="1" text-align="right" display-align="before">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>NALTBBOX121213</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:when>
										<xsl:when test="BOX_PACKID_QTY =3 or  BOX_PACKID_QTY =4">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="35%"/>
												<fo:table-column column-width="35%"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="5pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline>
																	<xsl:text>SHIP FROM: </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_3 , 1 , $SHIP_FROM_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_STREET  , 1 , $SHIP_FROM_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="7pt">
																	<xsl:text>SHIP TO: </xsl:text>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_ID  , 1 , $SHIP_TO_ID_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_2  , 1 , $SHIP_TO_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_STREET , 1 , $SHIP_TO_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
																	<fo:inline font-size="7pt">
																		<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_max ))"/>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-size="6pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Customer SKU:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:value-of select="PACK_ID_LINE_ITEM/HP_Cust_PN"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Carrier: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( INTL_CARRIER , 1 , $INTL_CARRIER_max )"/>
																</fo:inline>
																<xsl:if test="string-length(REG_CARRIER) &gt;0">
																	<fo:inline font-size="6pt">
																		<xsl:value-of select="concat(&quot; / &quot;, substring( REG_CARRIER , 1, $REG_CARRIER_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>P/N: </xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>AWB: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-bottom-style="none" border-left-style="none" font-family="Arial" font-size="7pt" font-weight="normal" line-height="10pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="left" display-align="before">
															<fo:block>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text> PACK ID QTY: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="22pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x2029;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:block margin="0pt">
																		<fo:block>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																				<xsl:text>*</xsl:text>
																			</fo:inline>
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block font-family="Free 3 of 9 Extended" font-size="22pt">
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																				<xsl:text>*</xsl:text>
																			</fo:inline>
																			<fo:inline>
																				<xsl:text>&#160;&#160;&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="PACK_ID">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																			<fo:inline>
																				<xsl:text>&#160; </xsl:text>
																			</fo:inline>
																			<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="22pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="22pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																			</xsl:if>
																			<fo:inline>
																				<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
																			</fo:inline>
																			<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																				<xsl:variable name="value-of-template">
																					<xsl:apply-templates/>
																				</xsl:variable>
																				<xsl:choose>
																					<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																						<fo:block>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:block>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:copy-of select="$value-of-template"/>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:for-each>
																		</fo:block>
																	</fo:block>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text> BOX ID: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="8pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="right" display-align="before">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-family="Arial" font-size="7pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Qty: 1 </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Unit Qty:</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_UNIT_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" border-right-style="none" border-top-style="none" font-family="Arial" font-size="6pt" font-weight="bold" line-height="6pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Sales Order #: </xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:for-each select="HP_SO">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																	<fo:inline>
																		<xsl:text>&#160; </xsl:text>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="none" border-collapse="collapse" border-top-style="none" line-height="0.1pt" number-columns-spanned="2" padding="0" height="1" display-align="center">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block white-space="pre" white-space-collapse="false" margin="0pt">
																	<fo:block>
																		<xsl:for-each select="UDF_HEADER">
																			<xsl:if test="./KEY = &apos;ODM_TEXT1&apos; and string-length(./VALUE)&gt;0">
																				<fo:inline font-family="Arial" font-size="6pt" font-weight="bold">
																					<xsl:value-of select="substring( VALUE , 1 , $ODM_TEXT1_max )"/>
																				</fo:inline>
																			</xsl:if>
																		</xsl:for-each>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="0" display-align="center">
															<fo:block/>
														</fo:table-cell>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="2pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="0" height="1" text-align="right" display-align="before">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>NALTBBOX121213</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:when>
										<xsl:when test="BOX_PACKID_QTY =5 or  BOX_PACKID_QTY =6">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="35%"/>
												<fo:table-column column-width="35%"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="5pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline>
																	<xsl:text>SHIP FROM: </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_3 , 1 , $SHIP_FROM_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_STREET  , 1 , $SHIP_FROM_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="7pt">
																	<xsl:text>SHIP TO: </xsl:text>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_ID  , 1 , $SHIP_TO_ID_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_2  , 1 , $SHIP_TO_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_STREET , 1 , $SHIP_TO_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
																	<fo:inline font-size="7pt">
																		<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_max ))"/>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-size="6pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Customer SKU:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:value-of select="PACK_ID_LINE_ITEM/HP_Cust_PN"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Carrier: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( INTL_CARRIER , 1 , $INTL_CARRIER_max )"/>
																</fo:inline>
																<xsl:if test="string-length(REG_CARRIER) &gt;0">
																	<fo:inline font-size="6pt">
																		<xsl:value-of select="concat(&quot; / &quot;, substring( REG_CARRIER , 1, $REG_CARRIER_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>P/N: </xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>AWB: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-bottom-style="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="8pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="left" display-align="before">
															<fo:block>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text> PACK ID QTY: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="18pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position() mod 2 = 1">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																					<fo:inline>
																						<xsl:text>&#160;&#160; </xsl:text>
																					</fo:inline>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																				</xsl:if>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:block>
																	</xsl:if>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text>BOX ID: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="9pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="right" display-align="before">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position() mod 2 = 0">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<fo:inline>
																					<xsl:text>&#160; </xsl:text>
																				</fo:inline>
																				<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																					<fo:inline>
																						<xsl:text>&#160;</xsl:text>
																					</fo:inline>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																				</xsl:if>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Qty: 1 </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Unit Qty:</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_UNIT_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" border-right-style="none" border-top-style="none" font-family="Arial" font-size="6pt" font-weight="bold" line-height="6pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Sales Order #: </xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:for-each select="HP_SO">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																	<fo:inline>
																		<xsl:text>&#160; </xsl:text>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="none" border-collapse="collapse" border-top-style="none" line-height="0.1pt" number-columns-spanned="2" padding="0" height="1" display-align="center">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block white-space="pre" white-space-collapse="false" margin="0pt">
																	<fo:block>
																		<xsl:for-each select="UDF_HEADER">
																			<xsl:if test="./KEY = &apos;ODM_TEXT1&apos; and string-length(./VALUE)&gt;0">
																				<fo:inline font-family="Arial" font-size="6pt" font-weight="bold">
																					<xsl:value-of select="substring( VALUE , 1 , $ODM_TEXT1_max )"/>
																				</fo:inline>
																			</xsl:if>
																		</xsl:for-each>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="0" display-align="center">
															<fo:block/>
														</fo:table-cell>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="2pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="0" height="1" text-align="right" display-align="before">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>NALTBBOX121213</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:when>
										<xsl:when test="BOX_PACKID_QTY =7 or  BOX_PACKID_QTY =8">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="35%"/>
												<fo:table-column column-width="35%"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="5pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline>
																	<xsl:text>SHIP FROM: </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_NAME  , 1 , $SHIP_FROM_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_2 , 1 , $SHIP_FROM_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_NAME_3 , 1 , $SHIP_FROM_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring(  SHIP_FROM_STREET  , 1 , $SHIP_FROM_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_STREET_2 , 1 , $SHIP_FROM_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline>
																	<xsl:value-of select="substring( SHIP_FROM_CITY , 1 , $SHIP_FROM_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_FROM_STATE) &gt;0">
																	<fo:inline>
																		<xsl:value-of select="concat( &quot;, &quot;, substring( SHIP_FROM_STATE , 1, $SHIP_FROM_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline>
																	<xsl:value-of select="concat(  &quot; &quot;, substring( SHIP_FROM_ZIP , 1 , $SHIP_FROM_ZIP_max),  &quot; &quot;, substring(SHIP_FROM_COUNTRY_NAME , 1 , $SHIP_FROM_COUNTRY_NAME_max))"/>
																</fo:inline>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="7pt">
																	<xsl:text>SHIP TO: </xsl:text>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_ID  , 1 , $SHIP_TO_ID_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME  , 1 , $SHIP_TO_NAME_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_2  , 1 , $SHIP_TO_NAME_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_NAME_3  , 1 , $SHIP_TO_NAME_3_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring(  SHIP_TO_STREET , 1 , $SHIP_TO_STREET_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_STREET_2 , 1 , $SHIP_TO_STREET_2_max )"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_CITY , 1 , $SHIP_TO_CITY_max )"/>
																</fo:inline>
																<xsl:if test="string-length(SHIP_TO_STATE) &gt;0">
																	<fo:inline font-size="7pt">
																		<xsl:value-of select="concat(&quot;, &quot;, substring( SHIP_TO_STATE , 1, $SHIP_TO_STATE_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:block/>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="substring( SHIP_TO_COUNTRY_NAME , 1 , $SHIP_TO_COUNTRY_NAME_max )"/>
																</fo:inline>
																<fo:inline font-size="7pt">
																	<xsl:value-of select="concat(&quot;  &quot;, substring( SHIP_TO_ZIP , 1, $SHIP_TO_ZIP_max ))"/>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-size="6pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Customer SKU:</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:value-of select="PACK_ID_LINE_ITEM/HP_Cust_PN"/>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Carrier: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( INTL_CARRIER , 1 , $INTL_CARRIER_max )"/>
																</fo:inline>
																<xsl:if test="string-length(REG_CARRIER) &gt;0">
																	<fo:inline font-size="6pt">
																		<xsl:value-of select="concat(&quot; / &quot;, substring( REG_CARRIER , 1, $REG_CARRIER_max ))"/>
																	</fo:inline>
																</xsl:if>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>P/N: </xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-size="6pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position()=1">
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																		<xsl:for-each select="HP_PN">
																			<xsl:variable name="value-of-template">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																					<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:copy-of select="$value-of-template"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																		<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																			<xsl:text>*</xsl:text>
																		</fo:inline>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>AWB: </xsl:text>
																</fo:inline>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:value-of select="substring( WAYBILL_NUMBER , 1 , $WAYBILL_NUMBER_max )"/>
																</fo:inline>
																<fo:inline font-size="6pt">
																	<xsl:text>&#160; </xsl:text>
																</fo:inline>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-bottom-style="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="6pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="left" display-align="before">
															<fo:block>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text> PACK ID QTY: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																</fo:inline>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_PACKID_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="18pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="18pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position() mod 2 = 1">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																					<fo:inline>
																						<xsl:text>&#160;&#160; </xsl:text>
																					</fo:inline>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																				</xsl:if>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</fo:block>
																		</fo:block>
																	</xsl:if>
																</xsl:for-each>
																<fo:inline>
																	<xsl:text>&#160;</xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-size="7pt" font-weight="bold">
																	<xsl:text>BOX ID: </xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-size="7pt" font-weight="bold">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:block/>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_ID">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
																<fo:inline font-family="Free 3 of 9 Extended" font-size="24pt">
																	<xsl:text>*</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="none" border-left-style="none" font-family="Arial" font-size="6pt" font-weight="normal" line-height="7pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-rows-spanned="2" padding="0" text-align="right" display-align="before">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:if test="position() mod 2 = 0">
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																					<xsl:text>*</xsl:text>
																				</fo:inline>
																				<fo:inline>
																					<xsl:text>&#160; </xsl:text>
																				</fo:inline>
																				<xsl:if test="string-length( PACK_ID_LINE_ITEM_BOX_UNIT_QTY ) &gt;0">
																					<fo:inline>
																						<xsl:text>&#160; </xsl:text>
																					</fo:inline>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																					<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																						<xsl:variable name="value-of-template">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																								<fo:block font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																									<xsl:copy-of select="$value-of-template"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																					<fo:inline font-family="Free 3 of 9 Extended" font-size="20pt">
																						<xsl:text>*</xsl:text>
																					</fo:inline>
																				</xsl:if>
																			</fo:block>
																		</fo:block>
																		<fo:inline-container>
																			<fo:block>
																				<xsl:text>&#x2029;</xsl:text>
																			</fo:block>
																		</fo:inline-container>
																		<fo:block margin="0pt">
																			<fo:block>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																				<xsl:for-each select="PACK_ID_LINE_ITEM_BOX_UNIT_QTY">
																					<xsl:variable name="value-of-template">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																				<fo:inline>
																					<xsl:text>&#160;&#160;&#160;&#160; </xsl:text>
																				</fo:inline>
																			</fo:block>
																		</fo:block>
																	</xsl:if>
																</xsl:for-each>
																<fo:block/>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block margin="0pt">
																	<fo:block>
																		<fo:inline font-family="Arial" font-size="7pt">
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:block>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Qty: 1 </xsl:text>
																</fo:inline>
																<fo:block/>
																<fo:inline font-family="Arial" font-size="7pt">
																	<xsl:text>Box Unit Qty:</xsl:text>
																</fo:inline>
																<xsl:for-each select="BOX_UNIT_QTY">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline font-family="Arial" font-size="7pt">
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" border-right-style="none" border-top-style="none" font-family="Arial" font-size="6pt" font-weight="bold" line-height="6pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" number-columns-spanned="2" padding="0" display-align="before">
															<fo:block>
																<fo:inline font-size="6pt" font-weight="bold">
																	<xsl:text>Sales Order #: </xsl:text>
																</fo:inline>
																<fo:block/>
																<xsl:for-each select="PACK_ID_LINE_ITEM">
																	<xsl:for-each select="HP_SO">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																	<fo:inline>
																		<xsl:text>&#160; </xsl:text>
																	</fo:inline>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell border="none" border-collapse="collapse" border-top-style="none" line-height="0.1pt" number-columns-spanned="2" padding="0" height="1" display-align="center">
															<fo:block>
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x2029;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block white-space="pre" white-space-collapse="false" margin="0pt">
																	<fo:block>
																		<xsl:for-each select="UDF_HEADER">
																			<xsl:if test="./KEY = &apos;ODM_TEXT1&apos; and string-length(./VALUE)&gt;0">
																				<fo:inline font-family="Arial" font-size="6pt" font-weight="bold">
																					<xsl:value-of select="substring( VALUE , 1 , $ODM_TEXT1_max )"/>
																				</fo:inline>
																			</xsl:if>
																		</xsl:for-each>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="0" display-align="center">
															<fo:block/>
														</fo:table-cell>
														<fo:table-cell border-bottom-style="none" border-collapse="collapse" font-family="Arial" font-size="5pt" font-weight="bold" line-height="2pt" white-space-collapse="true" linefeed-treatment="treat-as-space" wrap-option="no-wrap" white-space-treatment="ignore-if-surrounding-linefeed" padding="0" height="1" text-align="right" display-align="before">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>NALTBBOX121213</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:when>
									</xsl:choose>
									<fo:block/>
									<xsl:if test="position() != last()">
										<fo:block break-after="page">
											<fo:leader leader-pattern="space"/>
										</fo:block>
									</xsl:if>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
