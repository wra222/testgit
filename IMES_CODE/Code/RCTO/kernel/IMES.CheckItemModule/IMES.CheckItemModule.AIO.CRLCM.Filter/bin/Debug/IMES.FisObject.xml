<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IMES.FisObject</name>
    </assembly>
    <members>
        <member name="T:IMES.FisObject.Common.MO.MO">
            <summary>
            Product生产订单类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.IncreasePrintedQty(System.Int16)">
            <summary>
            增加已产生ProductID数量
            </summary>
            <param name="byQty">此次增加的数量</param>
            <returns>增加后的数量</returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.DecreasePrintedQty(System.Int16)">
            <summary>
            减少已产生的ProductID数量
            </summary>
            <param name="byQty">此次减少的数量</param>
            <returns>减少后的数量</returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.IncreaseSnoQty(System.Int32)">
            <summary>
            增加已与CustomerSn绑定的Product数量
            </summary>
            <param name="byQty">此次增加的数量</param>
            <returns>增加后的数量</returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.DecreaseSnoQty(System.Int16)">
            <summary>
            减少已与CustomerSn绑定的Product数量
            </summary>
            <param name="byQty">此次减少的数量</param>
            <returns>减少后的数量</returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.MO.GenerateProId(System.Int16)">
            <summary>
            产生指定数量的ProductId
            </summary>
            <param name="qty">产生的数量</param>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.MONO">
            <summary>
             MONO
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Plant">
            <summary>
            Plant
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Model">
            <summary>
            MO所属机型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.CreateDate">
            <summary>
            CreateDate
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.StartDate">
            <summary>
            StartDate
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Qty">
            <summary>
            MO包含的Product数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.SAPStatus">
            <summary>
            Sap status
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.SAPQty">
            <summary>
            Sap Qty
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.PrtQty">
            <summary>
            MO中已产生的ProductID数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.TransferQty">
            <summary>
            MO中已产生的ProductID数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.PoNo">
            <summary>
            PoNo 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.SnoQty">
            <summary>
            MO中已与CustomerSn绑定的Product数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.MO.MO.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.StandardWeight.IModelWeightRepository">
            <summary>
            ModelWeight对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelWeightRepository.GetModelWeightItem(System.String)">
            <summary>
            SELECT [Model],[UnitWeight],FROM [ModelWeight] where [Model]=@model
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelWeightRepository.UpdateModelWeight(IMES.DataModel.ModelWeightInfo,IMES.DataModel.ModelWeightInfo)">
            <summary>
            UPDATE IMES_GetData..ModelWeight SET UnitWeight = @weight, 
            Editor = @editor, Udt = GETDATE() WHERE Model = @model
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonProduct.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonProduct.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.PalletProcess">
            <summary>
            Pallet使用的流程
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PalletProcess.Customer">
            <summary>
            客户别
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PalletProcess.Process">
            <summary>
            流程名字
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PalletProcess.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PalletProcess.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PalletProcess.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPolicy.IPartPolicyRepository.GetNameFromCheckItemType(IMES.DataModel.CheckItemTypeInfo)">
            <summary>
            取得CheckItemType的方法：Select Name from CheckItemType order by Name
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IPart">
            <summary>
             Part接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.AddAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            增加Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.ChangeAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            更新Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.DeleteAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            删除Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.GetAttribute(System.String)">
            <summary>
            获取Part扩展属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.GetProperty(System.String,System.String)">
            <summary>
            根据属性名获取属性值， 属性包括基础属性和扩展属性，仅用于KP类型
            </summary>
            <param name="propertyName">属性名</param>
            <param name="assemblyCode">属性值</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPart.GetAttribute(System.String,System.String)">
            <summary>
            获取Part扩展属性，仅用于KP类型
            </summary>
            <param name="name">属性名</param>
            <param name="assemblyCode">assCode</param>
            <returns>属性值</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.PN">
            <summary>
            PartNumber, Part的唯一性标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.BOMNodeType">
            <summary>
            BomNode type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Type">
            <summary>
            Part具体类型: CPU, DIMM
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.TypeGroup">
            <summary>
            类型分组
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.CustPn">
            <summary>
            Part的CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Descr">
            <summary>
            Part描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.AutoDL">
            <summary>
            AutoDL
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Descr2">
            <summary>
            Part描述信息 2
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPart.Attributes">
            <summary>
            Part属性
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.HDDCopyInfo.IHDDCopyInfoRepository.GetCountByConnectorNo(System.String)">
            <summary>
            獲得Connector使用次數
            HDDCopyInfo.ConnectorID=connetct#
            </summary>
            <param name="connectorNo">connectorNo</param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.IRepairTarget">
            <summary>
             Repair腔醴梓勤砓諉諳
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.GetTestLog">
            <summary>
            腕聆彸祩摩磁﹝籵都蚚衾脤梑麼潰脤杻隅祩陓洘﹝
            </summary>
            <returns>殿隙聆彸祩勤砓蹈桶﹝</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.AddTestLog(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            氝樓聆彸暮翹
            </summary>
            <param name="testLog">聆彸暮翹</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.AddRepair(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            砃翋啣笢氝樓珨沭氝樓峎党暮翹﹝
            </summary>
            <param name="rep">峎党暮翹勤砓</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.AddRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair崝樓珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.RemoveRepairDefect(System.Int32,System.Int32)">
            <summary>
            峈硌隅Repair刉壺珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="repairDefectId">硌隅RepairDefect腔Id</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.UpdateRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair載陔珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect">硌隅RepairDefect</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.GetRepair">
            <summary>
            腕翋啣垀衄峎党暮翹﹝
            </summary>
            <returns>峎党勤砓摩磁</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.GetCurrentRepair">
            <summary>
            腕翋啣絞峎党暮翹﹝
            </summary>
            <returns>絞峎党勤砓</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.GetRepairDefectBySiteComponent(System.String,System.String)">
            <summary>
            鳳硌隅Site+Component腔峎党盪妢
            </summary>
            <param name="site">site</param>
            <param name="component">component</param>
            <returns>峎党盪妢</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.CompleteRepair(System.String,System.String,System.String)">
            <summary>
            complte珨棒峎党
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.ChangePart(System.Int32,IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            蔚硌隅partID勤茼腔Part杸遙
            </summary>
            <param name="partID">硌隅partID</param>
            <param name="newPart">陔Part</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.RemoveRepair(System.Int32)">
            <summary>
            峈硌隅Repair刉壺珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.IRepairTarget.RemoveAllRepair">
            <summary>
            delete all Repair/RepairDefectInfo
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.IRepairTarget.RepairTargetModel">
            <summary>
            RepairTarget儂倰
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.IRepairTarget.IsFirstRepair">
            <summary>
            岆瘁場棒峎党
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.IRepairTarget.LatestFailTestLog">
            <summary>
            郔陔腔聆彸Fail log
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.IRepairTarget.LatestTestLog">
            <summary>
            郔陔腔聆彸log
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight">
            <summary>
            对应FISToSAPPLTWeight表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.PalletNo">
            <summary>
            Pallet序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Weight">
            <summary>
            重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Shipment">
            <summary>
            Shipment号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPPLTWeight.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.StandardWeight.ModelTolerance">
            <summary>
            Model允许的重量误差范围对应ModelTolerance表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.UnitTolerance">
            <summary>
            Unit 误差
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.CartonTolerance">
            <summary>
            Carton 误差
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelTolerance.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductChangeLog">
            <summary>
            Product修改Log
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductChangeLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.ProductID">
            <summary>
            Product Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.Mo">
            <summary>
            Mo of product
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductChangeLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Station.StationType">
            <summary>
            站点类型
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBMO.IMBMO">
            <summary>
            MBMO諉諳
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMO.IncreasePrintedQty(System.Int32)">
            <summary>
            崝樓湖荂翋啣梓杅講
            </summary>
            <param name="byQty">陔崝杅講</param>
            <returns>妗暱崝樓杅講</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMO.DecreasePrintedQty(System.Int32)">
            <summary>
            熬屾湖荂翋啣梓杅講
            </summary>
            <param name="byQty">熬屾杅講</param>
            <returns>妗暱熬屾杅講</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMO.DismantleMB(System.String,System.String)">
            <summary>
            隙彶眒郪蚾腔翋啣﹝眕晞蔚懂笭陔汜莉﹝
            </summary>
            <param name="startMBSn">宎翋啣唗瘍</param>
            <param name="endMBSn">賦旰翋啣唗瘍</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMO.GenerateMB(System.Int32)">
            <summary>
            莉汜翋啣陓洘﹝
            </summary>
            <param name="qty">渾莉汜杅講</param>
            <returns>莉汜腔翋啣唗瘍摩磁</returns>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.MONo">
            <summary>
             MONo
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Family">
            <summary>
             MB Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Model">
            <summary>
             Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Qty">
            <summary>
             Mo婦漪腔Mb軞杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.PrintedQty">
            <summary>
             森MO笢眒莉汜MB唗瘍腔杅講
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Remark">
            <summary>
             Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Status">
            <summary>
             Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Editor">
            <summary>
             Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Cdt">
            <summary>
             Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.IMBMO.Udt">
            <summary>
             Udt
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.WeightLog.IWeightLogRepository">
            <summary>
            WeightLog对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.WeightLog.IWeightLogRepository.GetCountOfFRUWeightLog(System.String)">
            <summary>
            select count(*) from IMES_PAK..FRUWeightLog where SN=''
            </summary>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.WeightLog.IWeightLogRepository.AddOrModifyFRUWeightLog(IMES.DataModel.FRUWeightLog)">
            <summary>
            将记录插入或者update
            没有就插入，有就更新
            insert into IMES_PAK..FRUWeightLog (SN,Weight,Line,Station,Editor,Cdt) Values('','','','','',getdate())
            update IMES_PAK..FRUWeightLog Set Weight='',Cdt=getdate() where SN=''
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.WeightLog.IWeightLogRepository.GetWeightOfFRUWeightLog(System.String)">
            <summary>
            select Weight from IMES_PAK..FRUWeightLog where SN=''
            </summary>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.ShipWay">
            <summary>
            ShipWay
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.RegId">
            <summary>
            RegId
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Type">
             <summary>
            Type
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.StdPltFullQty">
             <summary>
            _StdPltFullQty
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.MaxQty">
             <summary>
            _MaxQty
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.MinQty">
             <summary>
            _MinQty
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.PalletLayer">
             <summary>
            PalletLayer
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Code">
             <summary>
            Code
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.PltWeight">
             <summary>
            _PltWeight
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.MinusPltWeight">
             <summary>
            _MinusPltWeight
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.CheckCode">
             <summary>
            _CheckCode
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.ChepPallet">
             <summary>
            _ChepPallet
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Editor">
             <summary>
            Editor
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.PalletType.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductInfo.#ctor">
            <summary>
            Product的扩展属性
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.ProductID">
            <summary>
            Prodcut Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.InfoType">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.InfoValue">
            <summary>
            属性值
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductInfo.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductAttributeLog">
            <summary>
            Product制程控制状态变更Log
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductAttributeLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.AttributeName">
            <summary>
            AttributeName
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.NewValue">
            <summary>
            New attribute value
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.OldValue">
            <summary>
            Old attribute value
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttributeLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IPartStrategy">
            <summary>
             各种类型Part的Match,Check,Bind策略接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartStrategy.BindTo(IMES.FisObject.Common.Part.IProductPart,IMES.FisObject.Common.Part.IPartOwner)">
            <summary>
            Bind a part to an owner(Prodcut/MB/Pizza)
            </summary>
            <param name="part">Part to be bind</param>
            <param name="owner">Part owner</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartStrategy.Match(System.String,IMES.FisObject.Common.FisBOM.IBOMPart,System.String,System.String,System.Boolean@)">
            <summary>
            Try to match an input to a specified BomPart
            </summary>
            <param name="target">An input string to be matched</param>
            <param name="part">Bom part</param>
            <param name="station">Station</param>
            <param name="valueType">Value type</param>
            <param name="containCheckBit">Whether checkbit is contained in the target string</param>
            <returns>Match result</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartStrategy.Check(IMES.FisObject.Common.FisBOM.IBOMPart,IMES.FisObject.Common.Part.IPartOwner,System.String)">
            <summary>
            Check a specified part; A FisExcption would be thrown out if check failed.
            </summary>
            <param name="part">Bom part</param>
            <param name="owner">Part owner</param>
            <param name="station">Station</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartStrategy.SetPartCheckSetting(System.Collections.Generic.IList{IMES.FisObject.Common.Part.PartCheck})">
            <summary>
            Set PartCheckSetting data to the strategy object
            </summary>
            <param name="setting">PartCheckSetting data</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartStrategy.IfNeedCheck(IMES.FisObject.Common.FisBOM.BOMPart)">
            <summary>
            To check whether a bompart need partcheck according to its checksetting data
            </summary>
            <param name="bomPart">Bom part</param>
            <returns>Whether a check is required</returns>
        </member>
        <member name="T:IMES.FisObject.PAK.Pizza.IPizzaRepository">
            <summary>
            Pizza对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.FillPizzaParts(IMES.FisObject.PAK.Pizza.Pizza)">
            <summary>
            获取Pizaa对象绑定的料
            </summary>
            <param name="currentPizza"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.FillPizzaStatus(IMES.FisObject.PAK.Pizza.Pizza)">
            <summary>
            获取pizza对象的状态
            </summary>
            <param name="currentPizza"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsByPartNoAndValue(System.String,System.String)">
            <summary>
            从Pizza_Part表根据PartNo和Value取多条记录
            </summary>
            <param name="partNo"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsByPartSn(System.String)">
            <summary>
            从Pizza_Part表根据PartSn取多条记录
            </summary>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsCout(System.String)">
            <summary>
            从Pizza_Part表根据PizzaID获取绑定的Part数量
            用在Reprint判断一个Pizza是否有绑定的Parts
            </summary>
            <param name="pizzaID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsByValue(System.String)">
            <summary>
            select * from Pizza_Part where value = @value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetDocCatsFromPakPakRT(System.String)">
            <summary>
            Doc_Type list : select distinct DOC_CAT from [PAK.PAKRT] where DOC_CAT like 'Pack List%' order by DOC_CAT  desc
            </summary>
            <param name="docCat"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetRegionsFromVPakComn">
            <summary>
            Region list : select distinct REGION from v_PAKComn nolock
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetIntlCarrierListFromVPakComn">
            <summary>
            Carrier List : select distinct INTL_CARRIER from v_PAKComn nolock
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDashPakComnByInternalID(System.String)">
            <summary>
            A. 刷入的是DN
             exists (select * from [PAK_PAKComn] nolock where left(InternalID,10)=@DN)
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistVShipmentPakComnByConsolInvoiceOrShipment(System.String)">
            <summary>
            B.刷入的是Shipment
            exists(select * from v_Shipment_PAKComn nolock where CONSOL_INVOICE=@DN or SHIPMENT = @DN)
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistVShipmentPakComnByWaybillNo(System.String)">
            <summary>
            C.输入的是WayBill Number
            exists(select * from v_Shipment_PAKComn nolock where WAYBILL_NUMBER=@DN )
            </summary>
            <param name="waybillNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVShipmentPakComnListByLikeInternalID(System.String)">
            <summary>
            A. 刷入的是DN
            select @shipdate=ACTUAL_SHIPDATE,@PO_NUM = PO_NUM, @deliveryno = InternalID,@shipment = rtrim(CONSOL_INVOICE),@model = Model,@region = REGION,@sales_chan = SALES_CHAN,@order_type = ORDER_TYPE,@intl_carrier = INTL_CARRIER
            from dbo.v_Shipment_PAKComn nolock where left(InternalID,10)=@DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPAKDotPAKEdi850RawByPoNum(System.String)">
            <summary>
            exists(select * from [PAK.PAKEdi850raw] where PO_NUM = @PO_NUM)
            </summary>
            <param name="poNum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVShipmentPakComnByConsolInvoiceOrShipment(System.String)">
            <summary>
            B.刷入的是Shipment
            select distinct InternalID,Model,PO_NUM,ACTUAL_SHIPDATE into #3 from v_Shipment_PAKComn where CONSOL_INVOICE=@DN or SHIPMENT = @DN
            select distinct InternalID,Model,PO_NUM,ACTUAL_SHIPDATE into #3 from v_Shipment_PAKComn where CONSOL_INVOICE=@DN or SHIPMENT = @DN
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPoNumNotInPAKDotPAKEdi850Raw(System.Collections.Generic.IList{System.String})">
            <summary>
            if exists(select * from #3 where PO_NUM not in (select PO_NUM from [PAK.PAKEdi850raw]))
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVShipmentPakComnListByWaybillNo(System.String)">
            <summary>
            C.输入的是WayBill Number
            select distinct InternalID,Model,PO_NUM ,ACTUAL_SHIPDATE  into #1 from v_Shipment_PAKComn where WAYBILL_NUMBER=@DN
            select distinct InternalID,Model,PO_NUM ,ACTUAL_SHIPDATE  into #1 from v_Shipment_PAKComn where WAYBILL_NUMBER=@DN
            </summary>
            <param name="waybillNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPakDashPakComnListByInternalID(System.String)">
            <summary>
            A. 刷入的是DN
            select @instr = INSTR_FLAG from [PAK_PAKComn] nolock where left(InternalID,10)=@DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakEdiInstr(System.String)">
            <summary>
            exists(select * from dbo.PAKEDI_INSTR where PO_NUM = @PO_NUM)
            </summary>
            <param name="poNum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPoNumListFromPakDashPakComn(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            B.刷入的是Shipment
            select distinct PO_NUM into #SInstr from [PAK_PAKComn] nolock where InternalID in (select InternalID from #3) and upper(INSTR_FLAG) = 'X'
            </summary>
            <param name="internalIds"></param>
            <param name="instrFlag"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPoNumNotInPakEdiInstr(System.Collections.Generic.IList{System.String})">
            <summary>
            if exists (select * from #SInstr where PO_NUM not in (select PO_NUM from dbo.PAKEDI_INSTR))
            </summary>
            <param name="instrs"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIDsFromVShipmentPakComnListByLikeInternalID(System.String)">
            <summary>
            依据刷入的code获取数据：
            刷入的是DN：
            select @InternalID = InternalID from v_Shipment_PAKComn nolock where left(InternalID,10)=@DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIDsFromVShipmentPakComnListByConsolInvoiceOrShipment(System.String)">
            <summary>
            刷入的是Shipment：
            select distinct InternalID from v_Shipment_PAKComn where CONSOL_INVOICE=@DN or SHIPMENT = @DN order by InternalID
            select @deliveryno = InternalID from v_Shipment_PAKComn nolock where (CONSOL_INVOICE = @DN or SHIPMENT = @DN)
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIDsFromVShipmentPakComnListByConsolInvoiceOrShipmentAndRegion(System.String,System.String)">
            <summary>
            select @deliveryno = InternalID from v_Shipment_PAKComn nolock where (CONSOL_INVOICE = @DN or SHIPMENT = @DN)and REGION='EMEA'
            </summary>
            <param name="dn"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIDsFromVShipmentPakComnListByWaybillNo(System.String)">
            <summary>
            输入的是WayBill Number
            select distinct InternalID from v_Shipment_PAKComn where WAYBILL_NUMBER=@DN order by InternalID
            </summary>
            <param name="waybillNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetDocSetNumListFromPakDashPakComnByLikeInternalID(System.String)">
            <summary>
             2)得到模板：
             select @doc_set_number = DOC_SET_NUMBER  from [PAK.PAKComn] where left(InternalID,10) = @InternalID的前10位 
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetXslTemplateNameListFromPakDashPakComnByDocCatAndDocSetNumer(System.String,System.String)">
            <summary>
            SELECT @templatename = XSL_TEMPLATE_NAME FROM [PAK.PAKRT] WHERE DOC_CAT = @doctpye AND DOC_SET_NUMBER = @doc_set_number
            </summary>
            <param name="docCat"></param>
            <param name="docSetNumer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVPakComnList(System.String)">
            <summary>
            3)生成pdf文件名：
            select @delivery=rtrim(left(InternalID,10)),@shipment=rtrim(SHIPMENT),@waybill=rtrim(WAYBILL_NUMBER) from [v_PAKComn] where InternalID = @InternalID
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakPackkingDataByDnList(System.Collections.Generic.IList{System.String})">
            <summary>
            exists (select * from PAK_PackkingData nolock where InternalID in @deliverynolist)
            </summary>
            <param name="dnList"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDashPakComnByLikeInternalIDAndModel(System.String,System.String)">
            <summary>
            if exists(select top 1 * from [PAK_PAKComn] nolock where left(InternalID,10)=@DN and Model like 'PO%')
            </summary>
            <param name="internalId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPakPackkingDataListByLikeInternalID(System.String)">
            <summary>
            insert  #DockingPackkingData
            select *  from [10.99.183.29].HP_EDI.dbo.[PAK_PackkingData] where InternalID like @DN+'%'
            if exists (select top 1 * from #DockingPackkingData)
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertForBackupPakPackkingData(System.Collections.Generic.IList{System.String})">
            <summary>
            insert PAK_PackkingData_Del
            select *,getdate() from PAK_PackkingData where InternalID in (select InternalID from #DockingPackkingData)
            </summary>
            <param name="internalIds"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakPackkingData(System.Collections.Generic.IList{System.String})">
            <summary>
            delete from PAK_PackkingData where InternalID in (select InternalID from #DockingPackkingData)
            </summary>
            <param name="internalIds"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertPakPackkingData(System.Collections.Generic.IList{IMES.DataModel.PakPackkingDataInfo})">
            <summary>
            insert PAK_PackkingData select * from #DockingPackkingData
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCountOfPakDashPakComnByLikeInternalID(System.String)">
            <summary>
            只针对刷入的是DN这种情况作此检查：
            select  @qty=sum(convert( NUMERIC(18,0),PACK_ID_UNIT_QTY)) from PAK_PAKComn where left(InternalID,10) = left(@deliveryno,10)
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCountOfPakPackkingDataByLikeInternalID(System.String)">
            <summary>
            select @cqty=count(SERIAL_NUM) from PAK_PackkingData where left(InternalID,10) = left(@deliveryno,10)
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakPackkingData(System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIdsFromVPakComn(System.String,System.DateTime,System.DateTime)">
            <summary>
            select distinct left(a.InternalID,10) from v_PAKComn a,[PAK.PAKEdi850raw] b 
            where a.REGION = @region and a.ACTUAL_SHIPDATE between convert(nvarchar(10),@Cdt,120) 
            and convert(nvarchar(10),@Edt,120)  and a.PO_NUM=b.PO_NUM
            </summary>
            <param name="region"></param>
            <param name="cdt"></param>
            <param name="edt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIdsFromVPakComn(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            select distinct left(a.InternalID,10) from v_PAKComn a,[PAK.PAKEdi850raw] b
            where a.REGION = @region and a.ACTUAL_SHIPDATE between convert(nvarchar(10),@Cdt,120) 
            and convert(nvarchar(10),@Edt,120)  and a.PO_NUM=b.PO_NUM and a.INTL_CARRIER = @carrier
            </summary>
            <param name="region"></param>
            <param name="cdt"></param>
            <param name="edt"></param>
            <param name="intlCarrier"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetDocCatFromPakDotParRt(System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetRegionListFromVPakComn">
            <summary>
            Region list : select distinct REGION from v_PAKComn nolock
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVShipmentPakComnListByInternalID(System.String)">
            <summary>
            select @PO_NUM = PO_NUM, @deliveryno = InternalID,@shipment = rtrim(CONSOL_INVOICE),@model = Model,@region = REGION,@sales_chan = SALES_CHAN,@order_type = ORDER_TYPE,@intl_carrier = INTL_CARRIER 
            from dbo.v_Shipment_PAKComn nolock where InternalID=@DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDotPakEdi850RawByPoNum(System.String)">
            <summary>
            exists(select * from [PAK.PAKEdi850raw] where PO_NUM = @PO_NUM)
            </summary>
            <param name="poNum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInstrFlagListFromPakDotPakComn(System.String)">
            <summary>
            select @instr = INSTR_FLAG from [PAK_PAKComn] nolock where InternalID=@DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertPakSkuMasterWeightFis(IMES.DataModel.PakSkuMasterWeightFisInfo)">
            <summary>
            insert into PAK_SkuMasterWeight_FIS values(@model,@weight,getdate())
            insert into PAK_SkuMasterWeight_FIS values(@model,@weight,getdate())
            INSERT INTO HP_EDI.dbo.PAK_SkuMasterWeight_FIS VALUES(RTRIM(@model),CONVERT(decimal(10,2),@weight),GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetAverageWeightFromPakSkuMasterWeightFis(System.String)">
            <summary>
            其中
            @weight = convert(decimal(10,3), sum(Weight)/count(*)) from PAK_SkuMasterWeight_FIS where Left(Model,4) = left(@model,4)
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetWeightFromPakSkuMasterWeightFis(System.String)">
            <summary>
            select @weight = Weight from PAK_SkuMasterWeight_FIS where Model = @model
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPackIdLineItemBoxQtyFromPakShipmentWeightFis(System.String)">
            <summary>
            select @qty = PACK_ID_LINE_ITEM_BOX_QTY from v_Shipment_PAKComn where InternalID = @deliveryno
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertPakShipmentWeightFis(IMES.DataModel.PakShipmentWeightFisInfo)">
            <summary>
            insert into PAK_ShipmentWeight_FIS values(@DN,'D',convert(decimal(10,3),@qty)*@weight,getdate())
            insert into PAK_ShipmentWeight_FIS values(@shipment,'S',convert(decimal(10,3),@qty)*@weight,getdate())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakShipmentWeightFis(System.String)">
            <summary>
            刷入的是Shipment
            exists(select * from dbo.PAK_ShipmentWeight_FIS where Shipment = @DN)
            exists(select * from PAK_ShipmentWeight_FIS where Shipment = @shipment)
            exists(select * from PAK_ShipmentWeight_FIS where Shipment = left(@DN,10))
            </summary>
            <param name="shipment"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetSumOfPackIdLineItemBoxQtyFromVShipmentPakComn(System.String)">
            <summary>
            select @qty = sum(PACK_ID_LINE_ITEM_BOX_QTY) from [v_Shipment_PAKComn] where CONSOL_INVOICE = @shipment
            </summary>
            <param name="consolInvoice"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertDnPrintList(IMES.DataModel.DnPrintListInfo)">
            <summary>
            insert DN_PrintList(@dn,@editor, Getdate())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateMpBtOrder(IMES.DataModel.MpBtOrderInfo)">
            <summary>
            4. 判断机器是否为BT，并更新相关表格(参考Appendix 2.1)
            1)Update   MP_BTOrder  and 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertFaSnobtdet(IMES.DataModel.FaSnobtdetInfo)">
            <summary>
            Insert  FA_SnoBTDet
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistVShipmentPakComnByConsolInvoiceOrShipmentAndRegion(System.String,System.String)">
            <summary>
            B.刷入的是Shipment
            exists (select * from [v_Shipment_PAKComn] where REGION='EMEA' and (CONSOL_INVOICE = @DN or SHIPMENT = @DN))
            </summary>
            <param name="dn"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistVShipmentPakComnByInternalIDAndRegion(System.String,System.String)">
            <summary>
            A. 刷入的是DN
            exists (select * from [v_Shipment_PAKComn] where REGION='EMEA' and left(InternalID,10)=@DN)
            </summary>
            <param name="internalId"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetConsolInvoiceFromVShipmentPakComn(System.String)">
            <summary>
            A. 刷入的是DN
            select @CONSOL = CONSOL_INVOICE from v_Shipment_PAKComn nolock where left(InternalID,10) = @DN
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIdsFromVShipmentPakComnByConsolInvoice(System.String)">
            <summary>
            select InternalID into #2 from v_Shipment_PAKComn nolock where CONSOL_INVOICE = @CONSOL
            </summary>
            <param name="consolInvoice"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetSumOfPackIdLineItemBoxQtyFromVShipmentPakComn(System.Collections.Generic.IList{System.String})">
            <summary>
            select @qty = sum(PACK_ID_LINE_ITEM_BOX_QTY) from  v_Shipment_PAKComn  where InternalID in (select * from #2)
            select @qty = sum(PACK_ID_LINE_ITEM_BOX_QTY) from [v_Shipment_PAKComn] where InternalID in (select * from #1)
            </summary>
            <param name="internalIds"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCountOfPakPackkingData(System.Collections.Generic.IList{System.String})">
            <summary>
            select @cqty = count(*) from dbo.PAK_PackkingData where InternalID in (select * from #2)
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCountOfPakPackkingDataWithDistinctSerialNum(System.Collections.Generic.IList{System.String})">
            <summary>
            select @cqty = count(distinct a.SERIAL_NUM) from dbo.PAK_PackkingData a,#1 b where a.InternalID = b.InternalID
            </summary>
            <param name="internalIds"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistFisToSpaWeight(System.String)">
            <summary>
            if exists(select * from PAK..FISTOSAP_WEIGHT where [DN/Shipment] = @DN)
            </summary>
            <param name="dnDivShipment"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CopyFisToSapWeightToPakShipmentWeightFis(System.String)">
            <summary>
            insert into PAK_ShipmentWeight_FIS 
            select [DN/Shipment],Status,convert(decimal(10,1),KG),Cdt from PAK..FISTOSAP_WEIGHT where [DN/Shipment] = @DN
            </summary>
            <param name="dnDivShipment"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetInternalIdsFromPakDashPakComnByLikeInternalID(System.String)">
            <summary>
            依据刷入不同的code判断方式不同：
            A. 刷入的是DN
            select @deliveryno = InternalID from [PAK_PAKComn] nolock where left(InternalID,10)=@DN
            </summary>
            <param name="internalIdLike"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPakSkuMasterWeightFisListByLikeModel(System.String)">
            <summary>
            若在PAK_SkuMasterWeight_FIS能找到model前4位一样的数据(left(PAK_SkuMasterWeight_FIS.Model,4)=left(@model,4))时
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertPackinglistRePrint(IMES.DataModel.PackinglistRePrintInfo)">
            <summary>
            insert  into  Packinglist_RePrint values (@DN--刷入的code，ACTUAL_SHIPDATE, @model)
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetAverageWeightFromPakSkuMasterWeightFisByModel(System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistDnPrintList(System.String)">
            <summary>
            exists (select DN from DN_PrintList where DN=@DN)
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistDnPrintList(System.String,System.String)">
            <summary>
            EXISTS (SELECT DN FROM HPEDI..DN_PrintList WHERE DN=@DN AND DOC_CAT = @Doc_Type)
            </summary>
            <param name="dn"></param>
            <param name="docCat"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistModelInPakSkuMasterWeightFis(System.String)">
            <summary>
            model在PAK_SkuMasterWeight_FIS里找到记录的
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsByValueLike(System.Int32,System.String)">
            <summary>
            在Pizza_Part中得到与pizza绑定的part，只获取Pizza_Part.Value是14位且第一位为6的parts
            </summary>
            <param name="valueLength"></param>
            <param name="valuePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetOlymBatteryListByHppn(System.String)">
            <summary>
            在OlymBattery根据HPPN=Pizza_Part.Value的前5位 得到HSSN
            </summary>
            <param name="hppn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetACAdapMaintainListByAssemb(System.String)">
            <summary>
            在ACAdapMaintain根据ASSEMB=Pizza_Part.Value的前5位 得到Vendor和RMN等信息
            </summary>
            <param name="assemb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetVPakComnListByInternalIdOrConsolInvoiceOrWaybillNumber(System.String,System.Int32@)">
             <summary>
             "按照以下条件进行查询：
             left(v_PAKComn.InternalID,10) = @Data or CONSOL_INVOICE = @Data or WAYBILL_NUMBER = @Data
             显示以下字段：
             v_PAKComn. InternalID
             v_PAKComn.CONSOL_INVOICE 
             v_PAKComn.WAYBILL_NUMBER 
             v_PAKComn.INTL_CARRIER  "	
            
             "接口要求：
             入参：string data；
             实现功能：查询DN/Shipment/WaybillNo为输入数据的记录，返回UC所需的四个字段，并按第一个字段（v_PAKComn.InternalID即DeliveryNo）排序"
             </summary>
             <param name="internalId"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDashPakComn(System.String)">
            <summary>
            delete [PAK_PAKComn] where InternalID = @DN
            </summary>
            <param name="internalId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDotPakComn(System.String)">
            <summary>
            delete [PAK.PAKComn]  where InternalID = @DN
            </summary>
            <param name="internalId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDotPakPaltno(System.String)">
            <summary>
            delete [PAK.PAKPaltno] where InternalID = @DN
            </summary>
            <param name="internalId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletetPakSkuMasterWeightFisByModel(System.String)">
            <summary>
            DELETE HP_EDI.dbo.PAK_SkuMasterWeight_FIS WHERE Model = RTRIM(@model)
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertPakPqcLog(IMES.DataModel.PakPqclogInfo)">
            <summary>
            16.INSERT PAK_PQCLog VALUES (@snoid,@model,'PAK','81',GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistMpBtOrder(System.String,System.Int32)">
            <summary>
            if exists (select BT from MP_BTOrder (nolock) where Pno = @pno and Qty-PrtQty >= @minDiff )
            </summary>
            <param name="pno"></param>
            <param name="minDiff"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetMpBtOrderInfoList(System.String,System.Int32)">
            <summary>
            select @bt=BT,@btqty=Qty-PrtQty from MP_BTOrder (nolock) where Pno=@model and Qty-PrtQty>=@minDiff order by REF_DATE desc,ShipDate desc
            </summary>
            <param name="pno"></param>
            <param name="minDiff"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertMpBtOrder(IMES.DataModel.MpBtOrderInfo)">
            <summary>
            insert into FA_SnoBTDet Values (@btsnoid,@bt,@btrm,@user,getdate(),getdate() )
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateForIncreasePrtQty(System.String,System.String,System.Int32)">
            <summary>
            update MP_BTOrder set PrtQty=PrtQty+@count,Udt=getdate() where BT=@bt and Pno=@pno
            </summary>
            <param name="bt"></param>
            <param name="pno"></param>
            <param name="count"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistMpBtOrder(System.String,System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCountofMpBtOrder(System.String,System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetMpBtOrderInfoList(System.String,System.Int32,System.Int32)" -->
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.AddPakDotPakComn(IMES.DataModel.PakDotPakComnInfo)">
            <summary>
            在PAK.PAKComn中增加记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.AddPakDashPakComn(IMES.DataModel.PakDashPakComnInfo)">
            <summary>
            在PAK_PAKComn中增加记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDotPakComn(System.String)">
            <summary>
            查询PAK.PAKComn中是否存在指定InternalID的记录
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDashPakComn(System.String)">
            <summary>
            查询PAK_PAKComn中是否存在指定InternalID的记录
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakDotPakPaltno(System.String)">
            <summary>
            (2).查询PAK.PAKPaltno中是否存在指定InternalID的记录[入参string id，返回值bool]
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.AddPakDotPakPaltnoInfo(IMES.DataModel.PakDotPakPaltnoInfo)">
            <summary>
            (3).在PAK.PAKPaltno中增加记录[入参为新增的DataModel型，返回值void]
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaStatus(System.String)">
            <summary>
            检索与pizza_id相对应的PizzaStatus。
            </summary>
            <param name="pizza_id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPartSnPrefixesFromPizzaPart(System.String[],System.Int32)">
            <summary>
            SELECT DISTINCT LEFT(PartSn,5) 
            FROM IMES_PAK..Pizza_Part
            WHERE PizzaID = @pizzaId
            AND (PartSn LIKE '5%' OR PartSn LIKE 'W%') AND LEN(RTRIM(PartSn))=14
            </summary>
            <param name="partSnPrefixes"></param>
            <param name="lenOfPartSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetACAdapMaintainList(System.String[])">
            <summary>
            SELECT DISTINCT b.*,a.AGENCY,a.SUPPLIER,a.VOLTAGE,a.CUR INTO #2 FROM dbo.ACAdapMaintain a,#ADP b WHERE a.ASSEMB=b.ADP
            </summary>
            <param name="assemb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetMinAndMaxIdOfPakEdiInstr(System.String,System.String,System.String)">
            <summary>
            SELECT @indiaminid=min(ID),@indiamaxid=max(ID) FROM HP_EDI.dbo.PAKEDI_INSTR NOLOCK 
            WHERE PO_NUM=@PO_NUM and FIELDS='KEY_DETAIL_INDIA_SCREEN_DIM' and PO_ITEM=@item
            </summary>
            <param name="poNum"></param>
            <param name="fields"></param>
            <param name="poItem"></param>
            <returns>1st:max; 2nd:min</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPakediInstrInfoListByPoNumAndId(System.String,System.Int32)">
            <summary>
            SELECT @indiascreendetail=isnull([VALUE],'') FROM HP_EDI.dbo.PAKEDI_INSTR NOLOCK WHERE PO_NUM=@PO_NUM and ID=@indiaid
            </summary>
            <param name="poNum"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakediInstrByPoNumAndIdAndValue(System.String,System.Int32)">
            <summary>
            EXISTS(SELECT * FROM HP_EDI.dbo.PAKEDI_INSTR NOLOCK WHERE PO_NUM=@PO_NUM and ID=@indiaid and charindex('1 N',[VALUE])>0)
            </summary>
            <param name="poNum"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPakDashPakComnListByInternalIDAndOrderTypeAndRegions(System.String,System.String,System.String[])">
            <summary>
            SELECT @config=isnull(C48,'') , @po=PO_NUM,@COUNTRY=isnull(UPPER(SHIP_TO_COUNTRY_NAME),'') 
            FROM HP_EDI..PAK_PAKComn (NOLOCK) WHERE InternalID=@dn and ORDER_TYPE='CTO' and REGION in ('SAF','SCN')
            </summary>
            <param name="internalId"></param>
            <param name="orderType"></param>
            <param name="regions"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetProdDescBaseFromPakDotPakEdi850raw(System.String)">
            <summary>
            SELECT DISTINCT @base=PROD_DESC_BASE FROM HP_EDI..[PAK.PAKEdi850raw] (NOLOCK) WHERE PO_NUM=@po
            </summary>
            <param name="poNum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPizzaPartsByValueLike(System.Int32,System.String,System.String)">
            <summary>
            在Pizza_Part中得到与pizza绑定的part，只获取Pizza_Part.Value是14位且第一位为6的parts
            
            14. 基于Pizza ID 取结合Product 的Battery，取结合Product的Battery 数量保存到变量@BatQty
            IMES_PAK..Pizza_Part 表中PartSn 第一码为'6'，长度为14 的记录为Battery
            </summary>
            <param name="valueLength"></param>
            <param name="valuePrefix"></param>
            <param name="pizzaId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetDocSetNumListFromPakDashPakComnByInternalID(System.String)">
            <summary>
            SELECT @setnum=DOC_SET_NUMBER FROM HP_EDI..[PAK.PAKComn] (NOLOCK) WHERE InternalID=@shipment 
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistMeidLogByPltAndStringIdValue(System.String,System.String)">
            <summary>
            EXISTS (SELECT * FROM HP_EDI..MEID_Log WHERE PALLET_ID=rtrim(@plt) AND StringIDValue=@imei)
            </summary>
            <param name="palletId"></param>
            <param name="stringIdValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistMeidLogByPltAndIsPass(System.String,System.Int16)">
            <summary>
            EXISTS (SELECT * FROM HP_EDI..MEID_Log WHERE PALLET_ID=rtrim(@plt) AND IsPass='0')
            </summary>
            <param name="palletId"></param>
            <param name="isPass"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateMeidLogIsPassByPalletIdAndStringIDValue(System.Int16,System.String,System.String)">
            <summary>
            UPDATE HP_EDI..MEID_Log SET IsPass='1' WHERE PALLET_ID=rtrim(@plt) AND StringIDValue=@imei
            </summary>
            <param name="isPass"></param>
            <param name="palletId"></param>
            <param name="stringIdValue"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistPakPackkingDataBySerialNum(System.String)">
            <summary>
            EXISTS (SELECT SERIAL_NUM FROM HP_EDI.dbo.PAK_PackkingData WHERE SERIAL_NUM = @sno)
            </summary>
            <param name="serialNum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.InsertSapWeight(IMES.DataModel.SapWeightInfo)">
            <summary>
            INSERT SAP_WEIGHT 
             SELECT RTRIM(@consolidated),'S',sum(KG) FROM #WT
            INSERT SAP_WEIGHT 
             SELECT LEFT(@dn,10),'D',sum(KG) FROM #WT 
            INSERT SAP_WEIGHT 
             SELECT LEFT(@dn,10),'D',sum(KG) FROM #WT 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetDescrsFromLocalMaintainByTpAndCode(System.String,System.String)">
            <summary>
            SELECT @dockingSW = convert(decimal(5,4), Descr) FROM [10.99.183.29].IES1.dbo.LocalMaintain 
            WHERE Tp='SW' and Code=@dockingModel
            
            这个表与宋杰确认过修改为ModelWeight了，在DB中已存在
            </summary>
            <param name="tp"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateSapWeight(System.Decimal,IMES.DataModel.SapWeightInfo)">
            <summary>
            UPDATE SAP_WEIGHT SET KG=KG+@dockingSW*@dockingQty
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="addingAmount"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakShipmentWeightFisWithShipmentInSapWeight">
            <summary>
            DELETE HP_EDI.dbo.PAK_ShipmentWeight_FIS WHERE Shipment in (SELECT [DN/Shipment] FROM SAP_WEIGHT)
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateMpBtOrder(IMES.DataModel.MpBtOrderInfo,IMES.DataModel.MpBtOrderInfo)">
            <summary>
            Update MP_BTOrder
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.  
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CheckExistMpBtOrder(System.String)">
            <summary>
            IF EXISTS (SELECT 1  FROM [FA].[dbo].[MP_BTOrder] where [Pno]=model# and Qty>PrtQty)
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.UpdateForIncreasePrtQty(IMES.DataModel.MpBtOrderInfo,System.Int32)">
            <summary>
            update MP_BTOrder set PrtQty=PrtQty+@count,Udt=getdate() where BT=@bt and ID=@id
            </summary>
            <param name="condition"></param>
            <param name="count"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetMpBtOrderInfoList(System.String)">
            <summary>
            select @orderqty=qty,@prtqty= PrtQty ,@BT=BT from MP_BTOrder (nolock) where Pno=@model order by REF_DATE desc,ShipDate desc
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.BackUpPizzaStatus(System.String,System.String)">
            <summary>
            备份PizzaStatus，要备份到UnpacPizzaStatus 表
            </summary>
            <param name="pizzaId"></param>
            <param name="uEditor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.CallTemplateCheckLaNew(System.String,System.String)">
            <summary>
            Call SP: op_TemplateCheck_LANEW
            @DN nvarchar(10),@doctpye nvarchar(100) 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetPartNoListFromPizzaPart(System.String[],System.String,System.String,System.String)">
            <summary>
            SELECT a.PartSn 。。 
               FROM Pizza_Part a (nolock), Part b (nolock), PartInfo c (nolock)
               WHERE  a.PizzaID in (@firstPizzaID, @secondPizzaID)
                   AND a.PartNo = b.PartNo
                   AND a.PartNo = c.PartNo
                   AND b.BomNodeType = 'P1'
                   AND c.InfoType = 'DESC'
                   AND c.InfoValue = 'OOA'
            </summary>
            <param name="pizzaIds"></param>
            <param name="bomNodeType"></param>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDashPakComn(System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDotPakComn(System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePakDotPakPaltno(System.Collections.Generic.IList{System.String})" -->
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.DeletePizzaPart(IMES.FisObject.PAK.Pizza.PizzaPart)">
            <summary>
            delete Pizza_Part where PartSn=@coano and PizzaID=@PizzaId
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.FillPizzaLogs(IMES.FisObject.PAK.Pizza.Pizza)">
            <summary>
            获取Pizaa对象Pizza Log
            </summary>
            <param name="currentPizza"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCombinedPartNo(System.String)">
            <summary>
            select distinct PartNo from Pizza_Part where PizzaID=@PizzaID
            </summary>
            <param name="pizzaId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCombinedPartQty(System.String)">
            <summary>
            select count(1)  from Pizza_Part where PizzaID=@PizzaID
            </summary>
            <param name="pizzaId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCombinePartNoQty(System.String)">
            <summary>
            select PartNo, count(1) as qty from Pizza_Part where PizzaID=@PizzaID group by PartNo
            </summary>
            <param name="pizzaId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCombinePizzaByCartonSN(System.String)">
            <summary>
            select * from Pizza where CartonSN=@CartonSN
            </summary>
            <param name="cartonSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.IPizzaRepository.GetCombinePizzaQtyByCartonSN(System.String)">
            <summary>
             select count(CartonSN)  from Pizza where CartonSN=@CartonSN
            </summary>
            <param name="cartonSn"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.FA.Product.Product">
            <summary>
            Product濬ㄛProdcut岆FAㄛPAK腔翋猁紱釬勤砓
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.IProduct">
            <summary>
            Product諉諳
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.CheckItem.ICheckObject">
            <summary>
            可以进行Item Check的检查目标对象接口
            可能的实现类有MB, Product
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.GetModelProperty(System.String)">
            <summary>
            获取Model指定属性
            </summary>
            <param name="item">属性名</param>
            <returns>指定属性</returns>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.SetModelProperty(System.String,System.Object)">
            <summary>
            保存Model指定属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.GetProperty(System.String)">
            <summary>
            获取检查目标对象的基本属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.GetExtendedProperty(System.String)">
            <summary>
            获取检查目标对象的扩展属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.SetProperty(System.String,System.Object)">
            <summary>
            设置检查目标对象的基本属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.SetExtendedProperty(System.String,System.Object,System.String)">
            <summary>
            设置检查目标对象的扩展属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.GetPizzaProperty(System.String)">
            <summary>
            获取检查目标对象的pizza属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.SetPizzaProperty(System.String,System.Object)">
            <summary>
            设置检查目标对象的pizza属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:IMES.FisObject.Common.CheckItem.ICheckObject.FuzzyQueryExtendedProperty(System.String)">
            <summary>
            Fuzzy query from ProductInfo with 'LIKE'
            </summary>
            <param name="condition">query condition such as AST%</param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IPartOwner">
            <summary>
            垀衄迵Part輛俴堂隅腔勤砓剒猁妗珋森諉諳ㄛe.g. Product, MB
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.PartUniqueCheck(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿坳PartOwner堂隅, 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part,Pizza_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.PartUniqueCheckWithoutOwner(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿any PartOwner堂隅(including current owner), 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part, Pizza_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.CheckPartBinded(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            檢查刷入PartNo/PartType/CT/CheckItemType 是否已收集過,若未收集過報錯
            </summary>
            <param name="partType"></param>
            <param name="partNoList"></param>
            <param name="BomNodeType"></param>
            <param name="checkItemType"></param>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.BindPart(System.Collections.Generic.List{IMES.FisObject.Common.Part.IProductPart})">
            <summary>
            蔚Part堂隅善PartOwner勤砓
            跦擂Part濬倰鳳眈茼腔IPartStrategy妗珋ㄛ覃蚚IPartStrategy.BindTo()
            眕妗珋祥肮濬倰Part腔堂隅軀憮
            </summary>
            <param name="parts">猁堂隅腔part蹈桶</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.AddPart(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            婓ProductPart蹈桶笢氝樓硌隅part
            涴岆PartOwner腔蘇俴峈ㄛ硐蔚
            Part等曾堂隅善Owner祥頗渀勤祥
            肮腔Part濬倰輛俴杻忷腔揭燴
            </summary>
            <param name="part">part</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.RemovePart(System.String,System.String)">
            <summary>
            婓Part蹈桶笢刉壺硌隅part
            </summary>
            <param name="partSn">partSn</param>
            <param name="partPn">partPn</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.RemoveAllParts">
            <summary>
            刉壺垀衄腔Parts
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.RemovePartsByType(System.String)">
            <summary>
            刉壺硌隅CheckItemType腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.RemovePartsByBomNodeType(System.String)">
            <summary>
            刉壺硌隅BomNodeType濬倰腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartOwner.GetProductPartByStation(System.String)">
            <summary>
            鳳硌隅桴彶摩腔Part
            </summary>
            <param name="station">station</param>
            <returns>Part蹈桶</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPartOwner.OwnerId">
            <summary>
            key of Owner (productId for Product; mbsn for MB)
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPartOwner.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IPartOwner.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.AddLog(IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            暮翹Product徹桴暮翹
            </summary>
            <param name="log">Product徹桴暮翹</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.GetLatestFailLog">
            <summary>
            Get Latest Fail Log
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.AddChangeLog(IMES.FisObject.FA.Product.ProductChangeLog)">
            <summary>
            暮翹Product党蜊暮翹
            </summary>
            <param name="log">Product党蜊暮翹</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.SetAttributeValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            扢离秶最諷秶袨怓硉
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor">Editor</param>
            <param name="station">Station</param>
            <param name="descr">Description</param>
            <remarks>
            硌隅扽俶眒湔婓寀葡裔埻扽俶硉肮奀暮翹ProductAttributeLogㄛ瘁寀陔崝扽俶
            </remarks>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>殿隙扽俶硉,硌隅扽俶祥湔婓寀殿隙null</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.UpdateStatus(IMES.FisObject.FA.Product.ProductStatus)">
            <summary>
            載陔Product徹桴袨怓
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.AddQCStatus(IMES.FisObject.FA.Product.ProductQCStatus)">
            <summary>
             氝樓QCStatus
            </summary>
            <param name="status">QCStatus</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.UpdateQCStatus(IMES.FisObject.FA.Product.ProductQCStatus)">
            <summary>
            載陔QCStatus
            </summary>
            <param name="status">status</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.ContainHDVD">
            <summary>
            Product 勤茼BOM笢岆瘁婦漪HDVD
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProduct.ToProductInfo">
            <summary>
            蛌遙峈IMES.DataModel.ProductInfo
            </summary>
            <returns>IMES.DataModel.ProductInfo</returns>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProId">
            <summary>
            Product釦囀梓妎,釬峈Product勤砓腔翋瑩
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.Model">
            <summary>
            Product垀扽儂倰靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.PCBID">
            <summary>
            迵Product堂隅腔啣縐ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.MAC">
            <summary>
            迵Product堂隅腔Mac華硊
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.UUID">
            <summary>
            迵Product堂隅腔UUID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ECR">
            <summary>
            Engineer Change Version
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.MBECR">
            <summary>
            MBEcr唳掛
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.CUSTSN">
            <summary>
            Product腔諦誧Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.PizzaID">
            <summary>
            迵Product賦磁腔PizzaID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.PizzaObj">
            <summary>
            迵Product賦磁腔Pizza Object
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.SecondPizzaID">
            <summary>
            迵Product賦磁腔2ndPizzaID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.SecondPizzaObj">
            <summary>
            迵Product賦磁腔2nd Pizza Object
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.MO">
            <summary>
            Product垀扽腔MO
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.UnitWeight">
            <summary>
            Product腔笭講
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.CartonSN">
            <summary>
            Product垀扽腔Carton
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.CartonWeight">
            <summary>
            Product腔Carton笭講
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.DeliveryNo">
            <summary>
            Product垀扽腔Delivery
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.PalletNo">
            <summary>
            Product垀扽腔Pallet
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.PCBModel">
            <summary>
            model of PCB
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.CVSN">
            <summary>
            CVSN
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ModelObj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.Status">
            <summary>
            Pruduct徹桴袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProductParts">
            <summary>
            鳳迵Product堂隅腔垀衄part
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.QCStatus">
            <summary>
            鳳垀衄QCStatus
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProductLogs">
            <summary>
            Product徹桴log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.TestLog">
            <summary>
            Prodcut 聆彸log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.Repairs">
            <summary>
            Product峎党暮翹
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ChangeLogs">
            <summary>
            曹載Log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProductInfoes">
            <summary>
            Product 孺桯扽俶
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProductAttributes">
            <summary>
            Product 秶最諷秶袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.ProductAttributeLogs">
            <summary>
            Product 秶最諷秶袨怓Log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.Customer">
            <summary>
            Product勤茼腔cusomer
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsAvailableForRework">
            <summary>
            岆瘁埰勍酕Rework/Dismantle
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsBT">
            <summary>
            Whether a BT product?
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsCDSI">
            <summary>
            Whether a CDSI product?
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsRCTO">
            <summary>
            whether a RCTO product
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsBindedPo">
            <summary>
            whether bind Po
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.BindPoNo">
            <summary>
            Bindes PoNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsMOPoDevice">
            <summary>
            Mo bind poNo device
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.MOObject">
            <summary>
            MO object
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsBindedUPS">
            <summary>
            whether bind UPSPo
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsUPSDevice">
            <summary>
            whether is UPS Device
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsUPSShipPO">
            <summary>
            whether is UPS Ship PO
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.UPSCombinePO">
            <summary>
            combine UPS PO
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.IProduct.IsCNRS">
            <summary>
            CNRS Device
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="proId">Product Id</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.FillingRepairDefects(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            沓喃Product腔硌隅Repair勤砓腔RepairDefect
            </summary>
            <param name="rep">剒沓喃腔Repair</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.FillingTestLogDefects(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            沓喃硌隅TestLog腔TestLogDefect
            </summary>
            <param name="tstlg">硌隅TestLog</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetRepair">
            <summary>
            腕翋啣垀衄峎党暮翹﹝
            </summary>
            <returns>峎党勤砓摩磁</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddRepair(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            砃翋啣笢氝樓珨沭氝樓峎党暮翹﹝
            </summary>
            <param name="rep">峎党暮翹勤砓</param>
            <returns>Defect瘍</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair崝樓珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.RemoveRepairDefect(System.Int32,System.Int32)">
            <summary>
            峈硌隅Repair刉壺珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="repairDefectId">硌隅RepairDefect腔Id</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.UpdateRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair載陔珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect">硌隅RepairDefect</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetCurrentRepair">
            <summary>
            腕翋啣絞峎党暮翹﹝
            </summary>
            <returns>絞峎党勤砓</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetRepairDefectBySiteComponent(System.String,System.String)">
            <summary>
            鳳硌隅Site+Component腔峎党盪妢
            </summary>
            <param name="site">site</param>
            <param name="component">component</param>
            <returns>峎党盪妢</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.CompleteRepair(System.String,System.String,System.String)">
            <summary>
            complte珨棒峎党
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.ChangePart(System.Int32,IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            蜊Part
            </summary>
            <param name="partID">Part Id</param>
            <param name="newPart">new part</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddLog(IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            暮翹Product徹桴暮翹
            </summary>
            <param name="log">Product徹桴暮翹</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetLatestFailLog">
            <summary>
            Get Latest Fail Log
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddChangeLog(IMES.FisObject.FA.Product.ProductChangeLog)">
            <summary>
            暮翹Product党蜊暮翹
            </summary>
            <param name="log">Product党蜊暮翹</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.SetAttributeValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            扢离秶最諷秶袨怓硉
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor">Editor</param>
            <param name="station">Station</param>
            <param name="descr">Description</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddTestLog(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            氝樓聆彸暮翹
            </summary>
            <param name="testLog">聆彸暮翹</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetTestLog">
            <summary>
            腕聆彸祩摩磁﹝籵都蚚衾脤梑麼潰脤杻隅祩陓洘﹝
            </summary>
            <returns>殿隙聆彸祩勤砓蹈桶﹝</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.UpdateStatus(IMES.FisObject.FA.Product.ProductStatus)">
            <summary>
            載陔Product徹桴袨怓
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddQCStatus(IMES.FisObject.FA.Product.ProductQCStatus)">
            <summary>
             氝樓QCStatus
            </summary>
            <param name="status">QCStatus</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.UpdateQCStatus(IMES.FisObject.FA.Product.ProductQCStatus)">
            <summary>
            載陔QCStatus
            </summary>
            <param name="status">status</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.ContainHDVD">
            <summary>
            Product 勤茼BOM笢岆瘁婦漪HDVD
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.ToProductInfo">
            <summary>
            蛌遙峈IMES.DataModel.ProductInfo
            </summary>
            <returns>IMES.DataModel.ProductInfo</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetModelProperty(System.String)">
            <summary>
            鳳Model硌隅扽俶
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.SetModelProperty(System.String,System.Object)">
            <summary>
            悵湔Model硌隅扽俶
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔價掛扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetExtendedProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔孺桯扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.FuzzyQueryExtendedProperty(System.String)">
            <summary>
            Fuzzy query from ProductInfo with 'LIKE'
            </summary>
            <param name="condition">query condition such as AST%</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.IsLike(System.String,System.String)">
            <summary>
            趼睫揹岆瘁睫磁SQL籵饜睫桶湛宒(LIKE)
            </summary>
            <param name="sqlWildcardStr">SQL籵饜睫桶湛宒</param>
            <param name="strToCmp">猁潰脤腔趼睫揹</param>
            <returns>LIKE迵瘁</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.SetProperty(System.String,System.Object)">
            <summary>
            扢离潰脤醴梓勤砓腔價掛扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.SetExtendedProperty(System.String,System.Object,System.String)">
            <summary>
            扢离潰脤醴梓勤砓腔孺桯扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetPizzaProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔pizza扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.SetPizzaProperty(System.String,System.Object)">
            <summary>
            扢离潰脤醴梓勤砓腔pizza扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.PartUniqueCheck(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿坳PartOwner堂隅, 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.PartUniqueCheckWithoutOwner(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿any PartOwner堂隅(including current owner), 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part, Pizza_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.CheckPartBinded(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            檢查刷入PartNo/PartType/CT/CheckItemType 是否已收集過,若未收集過報錯
            </summary>
            <param name="partType"></param>
            <param name="partNoList"></param>
            <param name="BomNodeType"></param>
            <param name="checkItemType"></param>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.BindPart(System.Collections.Generic.List{IMES.FisObject.Common.Part.IProductPart})">
            <summary>
            蔚Part堂隅善PartOwner勤砓
            跦擂Part濬倰鳳眈茼腔IPartStrategy妗珋ㄛ覃蚚IPartStrategy.BindTo()
            眕妗珋祥肮濬倰Part腔堂隅軀憮
            </summary>
            <param name="parts">猁堂隅腔part蹈桶</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.AddPart(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            婓ProductPart蹈桶笢氝樓硌隅part
            涴岆PartOwner腔蘇俴峈ㄛ硐蔚
            Part等曾堂隅善Owner祥頗渀勤祥
            肮腔Part濬倰輛俴杻忷腔揭燴
            </summary>
            <param name="part">part</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.RemovePart(System.String,System.String)">
            <summary>
            婓ProductPart蹈桶笢刉壺硌隅part
            </summary>
            <param name="partSn">partSn</param>
            <param name="partPn">partPn</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.RemoveAllParts">
            <summary>
            刉壺垀衄腔Parts
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.RemovePartsByType(System.String)">
            <summary>
            刉壺硌隅CheckItemType腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.RemovePartsByBomNodeType(System.String)">
            <summary>
            刉壺硌隅BomNodeType濬倰腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.Product.GetProductPartByStation(System.String)">
            <summary>
            鳳硌隅Station彶摩腔Part
            </summary>
            <param name="station">Station</param>
            <returns>Part蹈桶</returns>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.CVSN">
            <summary>
            CVSN
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProId">
            <summary>
            Product釦囀梓妎,釬峈Product勤砓腔翋瑩
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Model">
            <summary>
            Product垀扽儂倰靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.PCBID">
            <summary>
            迵Product堂隅腔啣縐ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.MAC">
            <summary>
            迵Product堂隅腔Mac華硊
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.UUID">
            <summary>
            迵Product堂隅腔UUID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ECR">
            <summary>
            Engineer Change Version
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.MBECR">
            <summary>
            IEC唳掛
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.CUSTSN">
            <summary>
            Product腔諦誧Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.PizzaID">
            <summary>
            迵Product賦磁腔Pizza
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.MO">
            <summary>
            Product垀扽腔MO
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.UnitWeight">
            <summary>
            Product腔笭講
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.CartonSN">
            <summary>
            Product垀扽腔Carton
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.CartonWeight">
            <summary>
            Product腔Carton笭講
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.DeliveryNo">
            <summary>
            Product垀扽腔Delivery
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.PalletNo">
            <summary>
            Product垀扽腔Pallet
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.PCBModel">
            <summary>
            model of PCB
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.PizzaObj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ModelObj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Status">
            <summary>
            Pruduct徹桴袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProductParts">
            <summary>
            鳳迵Product堂隅腔垀衄part
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.QCStatus">
            <summary>
            鳳垀衄QCStatus
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProductLogs">
            <summary>
            鳳迵Product堂隅腔垀衄log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.TestLog">
            <summary>
            腕聆彸祩摩磁﹝籵都蚚衾脤梑麼潰脤杻隅祩陓洘﹝
            </summary>
            <returns>殿隙聆彸祩勤砓蹈桶﹝</returns>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Repairs">
            <summary>
            腕翋啣垀衄峎党暮翹﹝
            </summary>
            <returns>峎党勤砓摩磁</returns>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ChangeLogs">
            <summary>
            曹載Log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProductInfoes">
            <summary>
            Product 孺桯扽俶
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProductAttributes">
            <summary>
            Product 秶最諷秶袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.ProductAttributeLogs">
            <summary>
            Product 秶最諷秶袨怓Log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Customer">
            <summary>
            Product勤茼腔cusomer
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsAvailableForRework">
            <summary>
            岆瘁埰勍酕Rework/Dismantle
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsBT">
            <summary>
            Whether a BT product?
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsCNRS">
            <summary>
            CNRS Device
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsBindedPo">
            <summary>
            is bined PoNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.BindPoNo">
            <summary>
            Bindes PoNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsMOPoDevice">
            <summary>
            Mo bind poNo device
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.MOObject">
            <summary>
            MO object
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.RepairTargetModel">
            <summary>
            RepairTarget儂倰
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsFirstRepair">
            <summary>
            岆瘁場棒峎党
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.LatestTestLog">
            <summary>
            郔陔腔聆彸log
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.BoxId">
            <summary>
            Box晤瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.MbSn">
            <summary>
            翋啣唗瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsBindedUPS">
            <summary>
            whether bind UPSPo
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsUPSDevice">
            <summary>
            whether is UPS Device
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.IsUPSShipPO">
            <summary>
            whether is UPS Ship PO
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.Product.UPSCombinePO">
            <summary>
            combine UPS PO
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Paking.IPakingRepository.GetDocTypeByDOCCAT">
            <summary>
            Doc_Type list : select distinct DOC_CAT from [PAK.PAKRT] where DOC_CAT like 'Pack List%' order by DOC_CAT  desc
            </summary>
            <param name="DOCCAT"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Paking.IPakingRepository.GetRegions">
            <summary>
            Region list : select distinct REGION from v_PAKComn nolock
            </summary>
            <returns></returns>
        </member>
        <member name="P:IMES.FisObject.PAK.Paking.PAK_PAKComn.id">
            <summary>
            Pallet序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Paking.PAK_PAKComn.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.IGiftRepository.FillGiftParts(IMES.FisObject.PAK.FRU.FRUGift)">
            <summary>
            俀樓婥GiftPart
            </summary>
            <param name="gift"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.IGiftRepository.GetCountOfFRUGift(System.String)">
            <summary>
            select count(*) from IMES_PAK..FRUGift where ID=''
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.FRUWeight.#ctor(System.String,System.String,System.Decimal,System.String,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.FRUWeight.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.FRUCarton.#ctor(System.String,System.String,System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.FRUCarton.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductQCStatus">
            <summary>
             product抽样结果记录
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductQCStatus.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductQCStatus.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.ProductID">
            <summary>
            ProductID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Model">
            <summary>
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductQCStatus.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartTypeDescription">
            <summary>
            Part类型的描述，一个part类型可能存在多个不同的描述
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartTypeDescription.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id"></param>
            <param name="partType"></param>
            <param name="description"></param>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeDescription.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeDescription.PartType">
            <summary>
            Part类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeDescription.Description">
            <summary>
            类型描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeDescription.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartStrategyConfig.PartStrategySettingConstant">
            <summary>
            PartStrategySetting常量
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy">
            <summary>
             各种类型Part的Match,Check,Bind策略接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.BindTo(IMES.FisObject.Common.FisBOM.PartUnit,IMES.FisObject.Common.Part.IPartOwner,System.String,System.String,System.String)">
            <summary>
            Bind a part to an owner(Prodcut/MB/Pizza)
            </summary>
            <param name="part">Part to be bind</param>
            <param name="owner">Part owner</param>
            <param name="station">station</param>
            <param name="editor">Editor</param>
            <param name="key"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.BindTo(IMES.FisObject.Common.FisBOM.PartUnit,IMES.FisObject.Common.Part.IPartOwner,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Bind a part to an owner(Prodcut/MB/Pizza)
            </summary>
            <param name="part">Part to be bind</param>
            <param name="owner">Part owner</param>
            <param name="station">station</param>
            <param name="editor">Editor</param>
            <param name="key"></param>
            <param name="needCommonSaveRule"></param>
            <param name="needSaveRule"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.Match(System.String,IMES.FisObject.Common.FisBOM.IFlatBOMItem,System.String)">
            <summary>
            Try to match an input to a specified BomPart
            </summary>
            <param name="subject">An input string to be matched</param>
            <param name="bomItem">bomItem</param>
            <param name="station">Station</param>
            <returns>Match result</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.Check(IMES.FisObject.Common.FisBOM.PartUnit,IMES.FisObject.Common.FisBOM.IFlatBOMItem,IMES.FisObject.Common.Part.IPartOwner,System.String,IMES.FisObject.Common.FisBOM.IFlatBOM)">
            <summary>
            Check a specified part; A FisExcption would be thrown out if check failed.
            </summary>
            <param name="pu">pu</param>
            <param name="item">Bom part</param>
            <param name="owner">Part owner</param>
            <param name="station">Station</param>
            <param name="bom">bom</param>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.NeedUniqueCheck">
            <summary>
            To check whether a PartCheckType need unique check according to its checksetting data
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.NeedPartForbidCheck">
            <summary>
            To check whether a PartCheckType need forbid check according to its checksetting data
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.NeedDefectComponentCheck">
            <summary>
            To check whether a PartCheckType need defect component check according to its checksetting data
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.RepairPartType">
            <summary>
            To repair part Type according to its checksetting data
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.IPartPolicy.NeedCommonSave">
            <summary>
            To check whether a PartCheckType need common save
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetFloorList">
            <summary>
            取得Floor信息列表
            </summary>
            <returns>Floor信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetQCStatisticList(System.String,System.String)">
            <summary>
            Get QC Statistic from database
            </summary>
            <param name="pdLine">PdLine</param>
            <returns>QC Statistic Info List</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetFisErrorCode(System.String,System.String)">
            <summary>
            取得異常描述信息
            </summary>
            <param name="errCode">錯誤代碼</param>
            <param name="lang">所用語言</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAllCacheUpdate(System.String,System.String,System.String[])">
            <summary>
            獲取CACHE_UPDATE表中的所有Update=0的記錄
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddCacheUpdate(IMES.DataModel.CacheUpdateInfo)">
            <summary>
            增加一个CACHE_UPDATE信息
            </summary>
            <param name="cacheUpdateInfo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.DeleteCacheUpdate(IMES.DataModel.CacheUpdateInfo)">
             <summary>
             并非真正删除数据，更新CACHE_UPDATE表中指定id对应的一條記錄set Updated = 1, CacheServerIP = [Current IP], Udt = GetDate()
                 涉及表:CACHE_UPDATE
                 主鍵:無
             </summary>
             <returns>
            </returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.DeleteCacheUpdateByIPAddressAndAppName(System.String,System.String)">
            <summary>
            //并非真正删除数据，更新CACHE_UPDATE表中指定ip和appName的一條記錄set Updated = 1, Udt = GetDate()
            //2012.05.09 YWH: 真正删除数据
            </summary>
            <param name="IP"></param>
            <param name="appName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetCustomerInfo(System.String)">
            <summary>
            根据customerId获得customer信息
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetCustomerList">
            <summary>
            取得所有Customer的列表 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfo(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得Alarm信息 (单个)
            ICT Input/SA Test Station/FA Test Station需要处理Alarm数据，调用SP
            </summary>
            <param name="sn"></param>
            <param name="family"></param>
            <param name="model"></param>
            <param name="station"></param>
            <param name="pdline"></param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoBatch(System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            获得Alarm信息 (多个)
            ICT Input/SA Test Station/FA Test Station需要处理Alarm数据，调用SP
            </summary>
            <param name="sn"></param>
            <param name="family"></param>
            <param name="model"></param>
            <param name="station"></param>
            <param name="pdline"></param>
            <param name="defectList"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GenerateVirtualMoBOM(System.String,System.Int32,System.String)">
            <summary>
            生成VirtualMOBOM
            </summary>
            <param name="model"></param>
            <param name="limitCount"></param>
            <param name="mo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.SaveModelBOMAs(System.String,System.String,System.String)">
            <summary>
            ModelBOM另存为
            </summary>
            <param name="oldCode"></param>
            <param name="newCode"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddReturnRepair(IMES.FisObject.Common.Repair.ReturnRepair)">
            <summary>
            新增ReturnRepair
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.TransferIMESPCAToFISOnLine(System.String,System.String)">
            <summary>
            调用SP: TransferIMESPCAToFISOnLine
            </summary>
            <param name="pcbno"></param>
            <param name="wc"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.UpdateOldSysStatus(System.String)">
            <summary>
            调用存储过程[UpdateOldSysStatus] 完成半制资料迁移
            </summary>
            <param name="pcbno">MB号</param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.PrintLabel_TouchPadTPCBLabel(System.String,System.String,System.String)">
            <summary>
            调用SP: op_PrintLabel_TouchPadTPCBLabel
            </summary>
            <param name="tpcb"></param>
            <param name="touchpad"></param>
            <param name="vcode"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetPilotRunPrintInfoListByModel(System.String)">
            <summary>
            SELECT a.Family, a.Build, a.SKU, a.Type, a.Descr
            FROM PilotRunPrintInfo a, PilotRunPrintType b
            WHERE Model = @Model AND a.Type = b.Type
            ORDER BY b.ID
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.getAllFieldNameInTable(System.String,System.String)">
            <summary>
            根据数据库表名称，取得该表中所有的字段名称
            </summary>
            <param name="catalogName"></param>
            <param name="strTableName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddAlarmSetting(IMES.DataModel.AlarmSettingInfo)">
            <summary>
            3. 新增AlarmSetting记录
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmSettings(IMES.DataModel.AlarmSettingInfo,IMES.DataModel.AlarmSettingInfo)" -->
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.UpdateAlarmSetting(IMES.DataModel.AlarmSettingInfo,IMES.DataModel.AlarmSettingInfo)">
            <summary>
            7. 更新AlarmSetting表数据 void UpdateAlarmSetting(AlarmSetting alarm_setting)
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.UpdateAlarmInfo(IMES.DataModel.AlarmInfo,IMES.DataModel.AlarmInfo)">
            <summary>
            修改报警记录（Alarm）的信息
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoByConditions(IMES.DataModel.AlarmQueryCondition)" -->
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoList(System.String)">
            <summary>
            Status=@status的记录,按照Alarm发出的时间排序
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoList(System.String,System.Int32)">
            <summary>
            daysCount天内发生的Status=@status的记录,按照Alarm发出的时间排序
            </summary>
            <param name="status"></param>
            <param name="daysCount"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoList(IMES.DataModel.AlarmInfo)">
            <summary>
            Almighty
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Misc.IMiscRepository.GetAlarmInfoList(IMES.DataModel.AlarmInfo,System.DateTime,System.DateTime)" -->
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetFaiInfoByLikes(System.DateTime,System.String,System.String,System.String)">
            <summary>
            Select * from FAI_INFO 
            where FIN_Time>=[FIN_Time] 
            and IECPN like [IECPN]+‘%’ 
            and HPQPN like [HPQPN]+’%’ 
            and SNO like  [SNO] +‘%’
            Order by Cdt
            </summary>
            <param name="finTime"></param>
            <param name="iecpnPrefix"></param>
            <param name="hpqpnPrefix"></param>
            <param name="snoPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddFaiInfo(IMES.DataModel.FaiInfo)">
            <summary>
            FAI_INFO增
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.ModifyFaiInfo(IMES.DataModel.FaiInfo,IMES.DataModel.FaiInfo)">
            <summary>
            FAI_INFO改
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetFaiInfoList(IMES.DataModel.FaiInfo)">
            <summary>
            FAI_INFO查
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.RemoveFaiInfoList(IMES.DataModel.FaiInfo)">
            <summary>
            FAI_INFO删
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddDOAMBListInfo(IMES.DataModel.DOAMBListInfo)">
            <summary>
            DOAMBList增
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetReworkList">
            <summary>
            取得database FA的Rework表的所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GenerateVirtualMoBOMForMaintain(System.String,System.Int32,System.String)">
            <summary>
            调用SP: GenerateVirtualMoBOMForMaintain
            </summary>
            <param name="model"></param>
            <param name="limitCount"></param>
            <param name="mo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetBuildList">
            <summary>
            SELECT Build FROM PilotRunPrintBuild ORDER BY Build
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddBuild(System.String,System.String)">
            <summary>
            IF NOT EXISTS(SELECT * FROM PilotRunPrintBuild WHERE Build = @Build)
                    INSERT INTO [PilotRunPrintBuild]([Build],[Editor],[Cdt])
                             VALUES(@Build, @Editor, GETDATE())
            </summary>
            <param name="Build"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.IsBuildInUse(System.String)">
            <summary>
            判断Build是否正在被使用
            IF EXISTS(SELECT * FROM [PilotRunPrintInfo] where [Build]= 'Build')
            返回true
            否则false
            </summary>
            <param name="Build"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.DeleteBuild(System.String)">
            <summary>
            DELETE FROM PilotRunPrintBuild WHERE Build = @Build
            </summary>
            <param name="build"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetPrintTypeList">
            <summary>
            SELECT [Type] FROM PilotRunPrintType ORDER BY [Type]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddPrintType(System.String)">
            <summary>
            IF NOT EXISTS(SELECT * FROM PilotRunPrintType WHERE Type = @Type)
                     INSERT INTO PilotRunPrintType([Type])
                               VALUES(@Type...
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.IsPrintTypeInUse(System.String)">
            <summary>
            判断type是否正在被使用
            IF EXISTS( SELECT *  FROM [PilotRunPrintInfo] WHERE [Type]='type')
            返回true
            否则false
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.DeletePrintType(System.String)">
            <summary>
            DELETE FROM PilotRunPrintType WHERE Type = @Type
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.IsBuildExist(System.String)">
            <summary>
            判断是否存在Build
            IF EXISTS( SELECT *  FROM [PilotRunPrintBuild] WHERE [Build]='Build')
            返回true
            否则false
            </summary>
            <param name="Build"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.IsPrintTypeExist(System.String)">
            <summary>
            判断是否存在PrintType
            IF EXISTS( SELECT * FROM [PilotRunPrintType] WHERE [Type]='Type')
            返回true
            否则false
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.BSUpdate(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            UPDATE PilotRunPrintInfo SET Family = @Family, Build = @Build, SKU = @SKU, Editor = @Editor, Udt = GETDATE() WHERE Model = @Model
            </summary>
            <param name="family"></param>
            <param name="build"></param>
            <param name="sku"></param>
            <param name="model"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetPrintInfoList(System.String)">
            <summary>
            SELECT a.Family, a.Model, a.Build, a.SKU, a.[Type], a.Descr as [Description], a.Editor, a.Cdt, a.Udt, a.ID 
                     FROM PilotRunPrintInfo a, PilotRunPrintType b
                     WHERE a.Model = @Model AND a.Type = b.Type ORDER BY b.ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.IsExistPrintInfo(System.String,System.String)">
            <summary>
            判断是否存在相同Model和Type的记录
            IF EXISTS(SELECT * FROM PilotRunPrintInfo WHERE Model = @Model AND Type = @Type)
            返回true
            否则false
            </summary>
            <param name="model"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.UpdatePrintInfo(System.Int32,System.String,System.String)">
            <summary>
            UPDATE PilotRunPrintInfo SET Descr = @Description, Editor = @Editor, Udt = GETDATE() WHERE ID=id
            </summary>
            <param name="id"></param>
            <param name="description"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.AddPrintInfo(IMES.DataModel.PilotRunPrintInfo)">
            <summary>
            INSERT INTO [PilotRunPrintInfo]([Family],[Model],[Build],[SKU],[Type],[Descr],[Editor],[Cdt],[Udt])
            VALUES (@Family, @Model, @Build, @SKU, @Type, @Description, @Editor, GETDATE(), GETDATE())
            需要在返回的ITEM的ID中填上当前新加入的记录的ID
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.DeletePrintInfo(System.Int32)">
            <summary>
            DELETE FROM PilotRunPrintInfo WHERE ID=id
            </summary>
            <param name="id"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Misc.IMiscRepository.GetQCStatisticList(System.String)" -->
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetDataByCondition``2(``1,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="condition"></param>
            <param name="isAndCondition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetData``2(``1)">
            <summary>
            select * from table
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetData``2(``1,System.String[])">
            <summary>
            Select field1, field2 from table
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="condition">條件</param>
            <param name="columnNames">列舉Table column name</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetData``2(``1,System.String,System.String[])">
            <summary>
            select distinct/count/sum field from table
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="condition"></param>
            <param name="sqlFunction">null/distinct/count/sum</param>
            <param name="columnNames"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Misc.IMiscRepository.GetDataByList``2(``1,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            where cloumnName in (......)
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="R"></typeparam>
            <param name="condition">只能有一欄</param>
            <param name="columnName"></param>
            <param name="inputList"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Line.LineSpeed">
            <summary>
            線速設置
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.Station">
            <summary>
            Line Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.AliasLine">
            <summary>
            AliasLine
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.LimitSpeed">
            <summary>
            LimeSpeed
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.IsCheckPass">
            <summary>
            PassLimitSpeed
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.IsHoldStation">
            <summary>
            IsHoldStation
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.Parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineSpeed.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Line.LineEx">
            <summary>
            可設置Alias Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Line">
            <summary>
            Line Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.AliasLine">
            <summary>
            AliasLine
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.AvgSpeed">
            <summary>
            AvgSpeed
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.AvgManPower">
            <summary>
            AvgManPower
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.AvgStationQty">
            <summary>
            AvgStationQty
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Owner">
            <summary>
            OWner
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.IEOwner">
            <summary>
            OWner
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.LineEx.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBMO.IMBMORepository">
            <summary>
            用于访问MBMO对象的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetUnfinishedMOByModel(System.String)">
            <summary>
            根据主板型号，取得未完成的制造订单列表。
            </summary>
            <param name="model">主板型号</param>
            <returns>未完成制造订单对象集合</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetUnfinishedMO">
            <summary>
            取得所有未完成的制造订单
            </summary>
            <returns>未完成制造订单对象集合</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMaxMO(System.String)">
            <summary>
            根据前缀获取最大MO
            </summary>
            <param name="preStr">前缀</param>
            <returns>最大MO</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.SetMaxMO(System.Boolean,IMES.FisObject.PCA.MBMO.IMBMO)">
            <summary>
            更新MO最大号(NumControl)
            </summary>
            <param name="isExperiment">是否为试产</param>
            <param name="maxMO">MO最大号</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetUnfinishedMOToday">
            <summary>
            获取当天产生的未生成所有MBSn的MBMO
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.UpdateSMTMOPrtQtyForInc(System.String,System.Int32)">
            <summary>
            更新指定mo的printedQty, 在其上加指定的值, 直接写db
            </summary>
            <param name="mo">mo</param>
            <param name="prtQtyInc">需要加的數量</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSMTMOList(System.String)">
            <summary>
            根据111阶ID获得SMTMO列表
            </summary>
            <param name="_111LevelId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSMTMOInfo(System.String)">
            <summary>
            根据SMTMO ID获得SMTMO信息
            </summary>
            <param name="SMTMOId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSMTMOInfos" -->
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetModelsByFamilyWithMO(System.String)">
            <summary>
            Select DISTINCT Model.Model from Model,MO 
            Where Model.Family=@family and MO.Model=Model.Model 
            and MO.Status='H' and MO.Qty>MO.Print_Qty and  MO.SAPStatus=''
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetModelsByFamilyWithMORecentOneMonth(System.String)">
            <summary>
            Select DISTINCT Model.Model from Model,MO 
            Where Model.Family=@family and MO.Model=Model.Model 
            and MO.Status='H' and MO.Qty>MO.Print_Qty and  MO.SAPStatus='' AND MO.Udt>dateadd(day,-30,getdate())
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetFamilysByCustomerWithMORecentOneMonth(System.String)">
            <summary>
            根据Customer获得Family列表 (最近一个月以内的)
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMOsRecentOneMonthByModel(System.String)">
            <summary>
            Select MO from MO 
            Where Model= @model 
            and Qty-Print_Qty > 0 and  Status='H' and Udt>dateadd(day,-30,getdate()) 
            and  MO.SAPStatus='' order by MO
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMOsRecentOneMonthByModelRegardlessUdt(System.String)">
            <summary>
            SELECT [MO] FROM [IMES2012_GetData].[dbo].[MO] where [SAPStatus]='' and [Qty]>[Print_Qty] and [Status ]='H' and [Model]=model# Order By MO
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.DeleteSMTMO(System.Collections.Generic.IList{System.String})">
            <summary>
            根据MoList删除MO,返回其中不符合删除条件的MO列表
            实现逻辑：
                    1.delete from SMTMO WHERE Charindex(SMTMO,@SMTMOS,0)>0 and PrintQty = 0
                    2.select distinct SMTMO from SMTMO WHERE Charindex(SMTMO,@SMTMOS,0)>0 
            </summary>
            <param name="moList"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSMTMOListFor002(System.String)" -->
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMBCountByMOAndStatusStation(System.String)">
            <summary>
            select count(*) from PCB a inner join PCBStatus b on 
            a.PCBNo = b.PCBNo where a.SMTMO=@smtmo and Status='1' and  
            (b.Station='30' or b.Station='8G')
            </summary>
            <param name="smtMo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMBCountByMO(System.String)">
            <summary>
            select count(*) from PCB where a.SMTMO=@smtmo
            两个数相等返回ture
            </summary>
            <param name="smtMo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMOsRecentOneMonthByModelConsiderStartDate(System.String)">
            <summary>
            Select MO from MO 
            Where Model= @model 
            and Qty-Print_Qty > 0 and  Status='H' and Udt>dateadd(day,-30,getdate()) 
            and MO.SAPStatus='' and StartDate>dateadd(day,-3,getdate()) order by MO
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSmtMoListByPno(System.String)" -->
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSmtmoInfoList(IMES.DataModel.SmtmoInfo)">
            <summary>
            4.Get[MO Qty and Remain Qty]
            SELECT Qty , PrintQty 
            FROM IMES_PCA..SMTMO WHERE SMTMO = @SMTMO
            
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSmtmoInfoListToday" -->
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetModelListFromMo(System.String)">
            <summary>
            SELECT [Model]
              FROM [Model],[MO] 
            where Model.Model=MO.Model 
            and Family=@family 
            and Model.[Status]=1 
            and [SAPStatus]='' 
            and [Qty]>[Print_Qty] 
            and MO.[Status]='H' 
            and Convert(varchar(8),MO.Udt,112)>convert(varchar(8),dateadd(day,-10,getdate()),112) 
            and Convert(varchar(8),MO.StartDate,112)>Convert(varchar(8),dateadd(day,-3,getdate()),112) 
            ORDER By [Model]
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.AddRctombmaintainInfo(IMES.DataModel.RctombmaintainInfo)">
            <summary>
            3.RCTOMBMaintain表中添加一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.DeleteRctombmaintainInfo(IMES.DataModel.RctombmaintainInfo)">
            <summary>
            4.删除RCTOMBMaintain选中记录：
            DELETE FROM RCTOMBMaintain 
            WHERE Code = @code and Family=@family and Type=@type
            </summary>
            <param name="condition"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetMoModelInfoListFromMoModel(System.String,System.String,System.String,System.DateTime,System.DateTime,System.String)" -->
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetRctombmaintainInfoList(IMES.DataModel.RctombmaintainInfo)">
            <summary>
            Almighty
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetModelListWithMoExcel(System.String,System.String,System.String)">
            <summary>
              select c.Model from MO a, MO_Excel b, Model c
              where a.Model = b.Model
              and a.Model = c.Model 
              and a.Qty > a.Print_Qty
              and a.Status = 'H'
              and c.Family = '@Family'
              and left(b.Line,1) = LEFT('@Line',1)
              and b.Qty > b.PrintQty
              order by c.Model
            </summary>
            <param name="status"></param>
            <param name="family"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.IncreasePrintQtyForMoExcel(System.Int32,System.String,System.String)">
            <summary>
            2.新提供接口：Update MO_Excel Set PrintQty = PrintQty + [UI 打印的Qty]
            Where left(b.Line,1) = LEFT('@Line',1)
            And Model = [@Model]
            </summary>
            <param name="qty"></param>
            <param name="line"></param>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.IMBMORepository.GetSmtmoInfoListByDay(System.Int32,System.String)">
            <summary>
            抓取與今天差天數的STMO
            </summary>
            <param name="diffDayswithToday"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductStatus">
            <summary>
            product腔徹桴袨怓ㄛ蜊濬俇植扽衾Product濬ㄛ妗瞰祥茼迕燭Product濬奧湔婓˙
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductStatus.#ctor">
            <summary>
             Product袨怓
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductStatus.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,IMES.FisObject.Common.Station.StationStatus)">
            <summary>
            蘇凳婖滲杅
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductStatus.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime,IMES.FisObject.Common.Station.StationStatus)">
            <summary>
            蘇凳婖滲杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.ProId">
            <summary>
            Product Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.StationId">
            <summary>
            Product冪徹腔桴桴瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Line">
            <summary>
            Product垀婓盄梗
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.ReworkCode">
            <summary>
            Rework code
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.TestFailCount">
            <summary>
            TestFailCount
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Editor">
            <summary>
            紱釬Product腔埜馱晤瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Udt">
            <summary>
            Product袨怓腔載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Cdt">
            <summary>
            Product袨怓暮翹腔斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Status">
            <summary>
            Product婓桴腔揭燴賦彆
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductStatus.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductLog">
            <summary>
            Product腔徹桴暮翹ㄛ蜆濬妗瞰祥頗迕燭Product勤砓等黃湔婓˙
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.ProductID">
            <summary>
            Product ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Id">
            <summary>
            Log腔ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Model">
            <summary>
            Product儂倰
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Station">
            <summary>
            Product冪徹腔Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Status">
            <summary>
            Product婓蜆Station揭燴腔賦彆
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Line">
            <summary>
            Product垀婓腔Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Editor">
            <summary>
            婓蜆桴揭燴Product腔埜馱晤瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Cdt">
            <summary>
            Product俇傖議桴腔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductLog.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.IPalletWeightRepository">
            <summary>
            PalletWeight对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletWeightRepository.GetPltWeight(System.String,System.String,System.Int16)">
            <summary>
            获得PalletWeight列表
            </summary>
            <param name="family"></param>
            <param name="region"></param>
            <param name="qty"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletWeightRepository.GetWeightOfFRUFISToSAPWeight(System.String)">
            <summary>
            select Weight from IMES_PAK..FRUFISToSAPWeight where Shipment=''
            </summary>
            <param name="shipment"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletWeightRepository.AddOrModifyFRUFISToSAPWeight(IMES.DataModel.FRUFISToSAPWeight)">
            <summary>
            将记录插入或者update
            没有就插入，有就更新
            insert into IMES_PAK..FRUFISToSAPWeight (Shipment,[Type],Weight,Status,Cdt) Values('','','','',getdate())
            update IMES_PAK..FRUFISToSAPWeight Set Weight='',Cdt=getdate() where Shipment=''
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletWeightRepository.GetPltWeightByCondition(IMES.DataModel.PalletWeightInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.FRUID">
            <summary>
            Carton ID/Gift ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.PartID">
            <summary>
            Pn/GiftID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.Value">
            <summary>
            Part Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.IFRUPart.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.FRUPart.#ctor(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.FRUPart.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Station.IStationRepository">
            <summary>
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationList(IMES.FisObject.Common.Station.StationType)">
            <summary>
            根据StationType获得Station列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetFATestStationList">
            <summary>
            取得FA测试站信息列表
            </summary>
            <returns>测试站信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetSATestStationList">
            <summary>
            取得SA测试站信息列表
            </summary>
            <returns>测试站信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetTestStationListFor023">
            <summary>
            Station.Descr where Descr like ‘%Test %’ and Stage_Station.StageID=’FA’
            如与上面GetTestStationList(string type)重复请告知207006
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.TransToDesc(System.String)">
            <summary>
            获得Station的描述
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetLightNoStationList(System.String)">
            <summary>
            24) 新增 
            SELECT [Station],[Name],[Descr] 
            FROM [Station] where rtrim([StationType])=@type
            order by Station
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationListFromStation(System.String)">
            <summary>
            SELECT Descr FROM Station WHERE StationType = 'PAKKitting' ORDER BY Descr
            </summary>
            <param name="stationType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetDefectCodeStationList(IMES.DataModel.DefectCodeStationInfo)">
            <summary>
            根据条件删除，实体对象，给哪个赋值即使用哪个作条件，条件之间的关系是AND
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetDefectCodeStationList2(IMES.DataModel.DefectCodeStationInfo)">
            <summary>
            select a.* , pres.Name as preName,curs.Name as curName ,nxts.Name as nxtName,dc.Descr as dfDescr
            from [DefectCode_Station] as a
            join Station as pres on pres.Station = a.PRE_STN
            join Station as curs on curs.Station = a.CRT_STN
            join Station as nxts on nxts.Station = a.NXT_STN
            join DefectCode as dc on dc.Defect = a.Defect
            order by a.PRE_STN,a.CRT_STN,a.Defect
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.CheckStationExistByName(System.String)">
            <summary>
            存在返回true
            SQL: select * from station where name=[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationItemByName(System.String)">
            <summary>
            SQL: select * from station where name=[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationItemByStationID(System.String)">
            <summary>
            SQL: select * from station where stationID=[sataion]
            </summary>
            <param name="staion"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationInfoListByNotLikeStationType(System.String)">
            <summary>
            取得Station的方法：Select Station, Name from Station where StationType not like‘SA%’order by Station
            </summary>
            <param name="exceptStationTypePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationCheckInfoList(IMES.DataModel.StationCheckInfo)">
            <summary>
            StationCheck表的查接口
            (按Station、Line、CheckItem Type栏位排序)
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.InsertStationCheckInfo(IMES.DataModel.StationCheckInfo)">
            <summary>
            StationCheck表的增接口
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.UpdateStationCheckInfo(IMES.DataModel.StationCheckInfo,IMES.DataModel.StationCheckInfo)">
            <summary>
            StationCheck表的改接口
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.DeleteStationCheckInfo(IMES.DataModel.StationCheckInfo)">
            <summary>
            StationCheck表的删接口
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationOrderByStation">
            <summary>
            Select Station ,...,Name from Station order by Station
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationList">
            <summary>
            27)SELECT [Station]
            FROM [IMES_GetData_Datamaintain].[dbo].[Station]
            ORDER BY [Station]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.GetStationInfoList">
            <summary>
            SELECT [Station]
                  ,[StationType]
                  ,[OperationObject]
                  ,[Descr]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
              FROM [IMES_GetData_Datamaintain].[dbo].[Station]
            order by [Station]
            需要按照Code栏位进行排序.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.DeleteStation(System.String)">
            <summary>
            DELETE FROM [Station]
                  WHERE Station='station'
            </summary>
            <param name="station"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.IsExistStation(System.String)">
            <summary>
            IF EXISTS(
            SELECT [Station]     
              FROM [Station]
            where Station ='station'
            )
            set @return='True'
            ELSE
            set @return='False'
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.AddStation(IMES.FisObject.Common.Station.Station)">
            <summary>
            新增Station
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Station.IStationRepository.UpdateStation(IMES.FisObject.Common.Station.Station,System.String)">
            <summary>
            修改Station
            </summary>
            <param name="item"></param>
            <param name="oldStationId"></param>
        </member>
        <member name="T:IMES.FisObject.FA.LCM.LCMME">
            <summary>
            LCM与ME绑定关系实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.LCMME.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.LCMME.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.LCMSn">
            <summary>
            LCM sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.MESn">
            <summary>
            Me sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.METype">
            <summary>
            Me type
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCMME.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TPCB.ITPCBInfoRepository">
            <summary>
            TPCB 的Repository接口
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetFamilyList" -->
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetTypeList(System.String)">
            <summary>
            根据下拉框选择的family，取得Type下拉框信息
            SELECT '' as [Type] UNION
            SELECT DISTINCT RTRIM(Type) as [Type]
            FROM TPCB WHERE Family = @Family AND PdLine = 'TPCB' ORDER BY [Type]
            </summary>
            <param name="family">family</param>
            <returns>Type</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetPartNoList(System.String,System.String)">
            <summary>
            根据下拉框选择的family和type, 取得PartNo下拉框信息
            SELECT '' as [Part No] UNION
            SELECT DISTINCT RTRIM(PartNo) as [Part No]
            FROM TPCB	WHERE Family = @Family AND Type = @Type AND PdLine = 'TPCB'	ORDER BY [Part No]
            </summary>
            <param name="family">family</param>
            <param name="type">type</param>
            <returns>PartNo</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetDCode(System.String,System.String)">
            <summary>
            根据下拉框选择的family和partno, 取得PartNo下拉框信息
            SELECT RTRIM(Dcode) as [Date Code]
            FROM TPCB WHERE Family = @Family AND PartNo = @PartNo AND PdLine = 'TPCB'
            </summary>
            <param name="family">family</param>
            <param name="partno">partno</param>
            <returns>DCode</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetVendorSN(System.String,System.String)">
            <summary>
            根据下拉框选择的family和partno, 取得PartNo下拉框信息
            SELECT RTRIM(Vendor) as [Vendor SN]
            FROM TPCB WHERE Family = @Family AND PartNo = @PartNo AND PdLine = 'TPCB'
            </summary>
            <param name="family">family</param>
            <param name="partno">partno</param>
            <returns>VendorSN</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.Query(System.String,System.String)">
            <summary>
            显示全部TPCBInfo数据相关信息
            SELECT RTRIM(Family) as Family, RTRIM(PdLine) as [PdLine], 
            RTRIM(Type) as [Type],RTRIM(PartNo) as [Part No], 
            RTRIM(Vendor) as Vendor, 
            RTRIM(Dcode) as [Date Code],
            RTRIM(Editor) as Editor, 
            Cdt as [Create Date]	
            FROM TPCB 
            WHERE Family = @Family AND PdLine = @PdLine ORDER BY Type, PartNo
            </summary>
            <param name="family">family</param>
            <param name="pdline">pdline</param>
            <returns>返回TPCBInfo信息</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.Query(System.String,System.String,System.String)">
            <summary>
            显示全部TPCBInfo数据相关信息
            SELECT RTRIM(Family) as Family, RTRIM(PdLine) as [PdLine], 
            RTRIM(Type) as [Type],RTRIM(PartNo) as [Part No], 
            RTRIM(Vendor) as Vendor, 
            RTRIM(Dcode) as [Date Code],
            RTRIM(Editor) as Editor, 
            Cdt as [Create Date]	
            FROM TPCB 
            WHERE Family = @Family AND PdLine = @PdLine AND PartNo = @PartNo ORDER BY Type, PartNo
            </summary>
            <param name="family">family</param>
            <param name="pdline">pdline</param>
            <param name="partNo">partNo</param>
            <returns>返回TPCBInfo信息</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.SaveTPCB(IMES.DataModel.TPCBInfo)">
            <summary>
            【保存】或【更新】TPCBInfo信息
            IIF EXISTS(SELECT * FROM TPCB WHERE Family = @Family AND PdLine = @PdLine AND PartNo = @PartNo)
            UPDATE TPCB SET Dcode = @Dcode, Editor = @Editor, Udt = GETDATE()
            WHERE Family = @Family AND PdLine = @PdLine AND PartNo = @PartNo
            ELSE
            INSERT INTO [TPCB]([Family],[PdLine],[Type],[PartNo],[Vendor],[Dcode],[Editor],[Cdt])
            VALUES (@Family, @PdLine, @Type, @PartNo, @Vendor, @Dcode, @Editor, GETDATE())
            </summary>
            <param name="value">value</param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.DeleteTPCB(System.String,System.String,System.String)">
            <summary>
            根据vcode号，删除vcode数据相关信息
            DELETE FROM TPCB WHERE Family = @Family AND PdLine = @PdLine AND PartNo = @PartNo
            </summary>
            <param name="family">family</param>
            <param name="pdline">pdline</param>
            <param name="partno">partno</param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.SaveTPCBDet(System.String,System.String,System.String,System.String)">
            <summary>
            【保存】TPCBDet信息
            INSERT INTO [TPCBDet]([Code],[Type],[PartNo],[Vendor],[Dcode],[Editor],[Cdt])
            SELECT @TPCBCode, Type, PartNo, Vendor, Dcode, @Editor, GETDATE()
            FROM TPCB 
            WHERE Family = @Family AND PdLine = @PdLine
            </summary>
            <param name="tpcbCode">tpcbCode</param>
            <param name="family">family</param>
            <param name="pdline">pdline</param>
            <param name="editor">editor</param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.CheckTPCBDet(System.String,System.String)">
            <summary>
            在保存前，检查TPCBDet信息是否重复
            </summary>
            <param name="tpcbCode">tpcbCode</param>
            <param name="editor">editor</param>
            <returns>返回存在信息</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetTpcbList">
            <summary>
            SQL语句：
            SELECT ID,Family, Type as [Type], PartNo as [Part No], Vendor as [Vendor SN], Editor, Cdt as [Create Date], Udt
                     FROM IMES_FA..TPCB
                     WHERE PdLine = 'TPCB'
                     ORDER BY Family, Type, PartNo, Vendor
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetTpcbList(System.String)" -->
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.SaveTPCBInfo(IMES.DataModel.TPCBInfo)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为之前提到的TPCBInfo结构类型。
            SQL语句：
            IF EXISTS(SELECT * FROM [IMES_FA].[dbo].[TPCB]
                     WHERE PdLine = 'TPCB'
                               AND Family = @Family
                               AND PartNo = @PartNo)
                     UPDATE [IMES_FA].[dbo].[TPCB] 
                               SET Vendor = @VendorSN,
                                        Editor = @Editor,
                                        Udt = GETDATE()
                               WHERE PdLine = 'TPCB'
                                        AND Family = @Family
                                        AND PartNo = @PartNo
            ELSE
                     INSERT INTO [IMES_FA].[dbo].[TPCB]([Family],[PdLine],[Type],[PartNo],[Vendor],[Dcode],[Editor],[Cdt])
                               VALUES (@Family, 'TPCB', @Type, @PartNo, @VendorSN, '', @Editor, GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.GetID(System.String,System.String)">
            <summary>
            返回值和参数说明：
            返回值为int类型，对应数据库TPCB表中的主键ID
            参数为之前提到的TPCBInfo结构类型
            SQL语句：
            SELECT ID
            FROM [IMES_FA].[dbo].[TPCB]
            WHERE PdLine = 'TPCB'
                    AND Family = @Family
                    AND PartNo = @PartNo
            </summary>
            <param name="family"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.DeleteTPCBInfo(System.String,System.String)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为两个字符串类型，分别对应数据库中TPCB表中的Family和PartNo字段；
            SQL语句：
            DELETE FROM [IMES_FA].[dbo].[TPCB]
                     WHERE PdLine = 'TPCB'
                               AND Family = @Family
                               AND PartNo = @PartNo
            </summary>
            <param name="family"></param>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.CheckHasList(System.String,System.String)">
            <summary>
            返回值和参数说明：
            返回值仍然为以TPCBInfo结构类型为泛型参数的IList；
            参数为两个字符串，分别对应数据库TPCB表中的Family和PartNo字段。
            SQL语句：
            SELECT * FROM [IMES_FA].[dbo].[TPCB]
                     WHERE PdLine = 'TPCB'
                               AND Family = @Family
                               AND PartNo = @PartNo
            </summary>
            <param name="family"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.CheckSameList(IMES.DataModel.TPCBInfo)">
            <summary>
            返回值和参数说明：
            返回值是以TPCBInfo结构类型为泛型参数的IList；
            参数同样是TPCBInfo结构类型，在SQL语句中只用到其中的Family，Type和PartNo字段。
            SQL语句：
            SELECT * FROM [IMES_FA].[dbo].[TPCB]
            WHERE PdLine = 'TPCB'
                     AND Family = @Family
                     AND Type = @Type
                     AND PartNo = @PartNo
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.UpdateTPCBInfo(IMES.DataModel.TPCBInfo)">
            <summary>
            返回值和参数说明：
            无返回值
            参数为TPCBInfo结构类型
            SQL语句：
            IF EXISTS(SELECT * FROM [IMES_FA].[dbo].[TPCB]
                     WHERE PdLine = 'TPCB'
                               AND Family = @Family
                               AND PartNo = @PartNo)
                    UPDATE [IMES_FA].[dbo].[TPCB] 
                               SET Vendor = @VendorSN,
                                    Type=@Type,
                                    Editor = @Editor,
                                    Udt = GETDATE()
                               WHERE PdLine = 'TPCB'
                                    AND Family = @Family
                                    AND PartNo = @PartNo
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.InsertTPCBInfo(IMES.DataModel.TPCBInfo)">
            <summary>
            返回值和参数说明：
            无返回值
            参数为TPCBInfo结构类型
            SQL语句：
            INSERT INTO [IMES_FA].[dbo].[TPCB]([Family],[PdLine],[Type],[PartNo],[Vendor],[Dcode],[Editor],[Cdt])
            VALUES (@Family, 'TPCB', @Type, @PartNo, @VendorSN, '', @Editor, GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBInfoRepository.CheckExistsRecord(System.String,System.String)">
            <summary>
            返回值和参数说明：
            返回值为代表记录条数的Int值
            参数为两个字符串类型的值，分别对应[IMES_FA].[dbo].[TPCB]表内的Family和PartNo字段。
            SQL语句：
            SELECT COUNT(*) FROM [IMES_FA].[dbo].[TPCB]
            WHERE  PdLine = 'TPCB' AND [Family]=@Family AND [PartNo]=@PartNo
            </summary>
            <param name="family"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.PrintItem.LabelType">
            <summary>
            勤茼LabelType桶
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.LabelType.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.LblType">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Description">
            <summary>
            LabelType鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.PrintMode">
            <summary>
            PrintMode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.RuleMode">
            <summary>
            RuleMode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Templates">
            <summary>
            森Label褫蚚腔耀啣
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.LabelType.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IOSWINRepository.GetOSWINByModelBOM(System.String)">
            <summary>
            select a.*
                from OSWIN a
                inner join ModelBOM b on  b.Component like '%' +a.Zmode
                 where b.Material = @model 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectList(System.String)">
            <summary>
            根据type获得DefectCode列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectInfo(System.String)">
            <summary>
            根据defectId获得DefectCode
            </summary>
            <param name="defectId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetSubDefectList">
            <summary>
            获得SubDefectCode列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.TransToDesc(System.String)">
            <summary>
            获得DefectCode的描述信息
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectCodeList(System.String)">
            <summary>
            参数为字符串类型，对应DefectCode表中的Type字段。
            SQL语句：
            SELECT * 
            FROM IMES_GetData..DefectCode
                     WHERE Type = @Type
                     ORDER BY Type, Defect
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefect(System.String,System.String)">
            <summary>
            返回值为字符串类型，对应DefectCode表中的主键Defect
            参数为两个字符串类型，分别对应数据库DefectCode表中的type ,defect
            SQL语句：
            SELECT Defect
            FROM IMES_GetData..DefectCode
            WHERE Type = @Type AND Defect = @Defect
            </summary>
            <param name="type"></param>
            <param name="defect"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.DeleteDefectCode(System.String,System.String)">
            <summary>
            参数为两个字符串类型，分别数据库DefectCode表中的Type和Defect字段
            SQL语句：
            DELETE FROM IMES_GetData..DefectCode WHERE Type = @Type AND Defect = @Defect
            </summary>
            <param name="type"></param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.UpdateDefectCode(IMES.DataModel.DefectCodeInfo)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为IMES.DataModel.DefectCodeInfo结构
            SQL语句：
            IF EXISTS(SELECT * FROM IMES_GetData..DefectCode WHERE Defect = @Defect)
                     UPDATE IMES_GetData..DefectCode SET Descr = @Descr, EngDescr=@EngDescr, Editor = @Editor, Udt = GETDATE()
                               WHERE Defect = @Defect
            </summary>
            <param name="dfc"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.InsertDefectCode(IMES.DataModel.DefectCodeInfo)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为IMES.DataModel.DefectCodeInfo结构
            SQsL语句：
            INSERT IMES_GetData..DefectCode (Defect, Type, Descr, Editor, Cdt, Udt)
                               VALUES(@Defect, @Type, @Descr, @Editor, GETDATE(), GETDATE())
            </summary>
            <param name="dfc"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.CheckExistsRecord(System.String)">
            <summary>
            返回值和参数说明：
            返回值为代表记录条数的Int值
            参数为字符串类型，对应数据库DefectCode表中的[Defect]字段
            SQL语句：
            SELECT COUNT(*)  FROM [IMES_GetData_Datamaintain].[dbo].[DefectCode]
              WHERE  [Defect]=@Defect
            </summary>
            <param name="Defect"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectCodeList">
            <summary>
            返回值和参数说明:
            返回值为IMES.DataMoedl.DefectInfo的列表,无参数;
            SQL语句:
            SELECT * 
            FROM IMES_GetData..DefectCode
            ORDER BY Type, Defect
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetSQEDefectCTNoInfo(System.String)">
            <summary>
            1.取得所输CTNo相关的不良记录信息
            select a.Line,b.Defect,b.Cause,b.Cdt,b.Udt
            from KeyPartRepair a(nolock), KeyPartRepair_DefectInfo b(nolock) 
            where a.ID=b.ProductRepairID and b.VendorCT=left(@sn,14)
            union
            select '',MpDefect,'',Udt,Udt from IqcCause1(nolock) where CtLabel=@sn
            </summary>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetPartTypeSQEDefectReport(System.String)">
            <summary>
            2.取得partType的方法
            select left(rtrim(b.Descr),3) as Descr from KeyPartRepair_DefectInfo a(nolock), Part b(nolock),ModelBom c(nolock) 
            where left(a.VendorCT,5)=c.Component and a.VendorCT=left(@sn,14) and c.Material=b.PartNo
            union
            select left(rtrim(b.Descr),3) as Descr from IqcCause1 a(nolock), Part b(nolock),ModelBom c(nolock) where left
            (a.CtLabel,5)=c.Component and a.CtLabel=@sn and c.Material=b.PartNo
            </summary>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetSQEDefectProductRepairInfo(System.String)">
            <summary>
            3.获取ProductRepair_DefectInfo 数据
            select
            DefectCode,Cause,Obligation,Component,MajorPart,Remark,VendorCT,
            Editor,Cdt,Udt
            where VendorCT=@sn
            </summary>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.AddIqcKp(IMES.DataModel.IqcKpDef)">
            <summary>
            4.添加一条IqcKp数据
            </summary>
            <param name="iqcKp"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetIqcKpByTypeCtLabelAndDefect(System.String,System.String,System.String)">
            <summary>
            5.查找IqcKp数据，返回其list
            select * from IqcKp 
            where tp=@tp and CtLabel=@CtLabel and Defect=@Defect
            </summary>
            <param name="tp"></param>
            <param name="ctLabel"></param>
            <param name="defect"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetIqcKpByTypeCtLabelAndDefect(System.String,System.String,System.String,System.String)">
            <summary>
            6.查找IqcKp数据，返回其list
            select * from IqcKp 
            where tp=@tp and CtLabel=@CtLabel and Defect=@Defect and Cause = @Cause
            </summary>
            <param name="tp"></param>
            <param name="ctLabel"></param>
            <param name="defect"></param>
            <param name="cause"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.UpdateIqcKp(IMES.DataModel.IqcKpDef,IMES.DataModel.IqcKpDef)">
            <summary>
            7.更新IqcKp数据；
            UPDATE IMES2012_FA.dbo.IqcKp
            SET CtLabel = @CtLabel
            ,Model = @Model
            ,Tp = @Tp
            ,Defect = @Defect
            ,Cause = @Cause,
            ,Location = @Location
            ,Obligation = @Obligation
            ,Remark = @Remark
            ,Result = @Result
            ,Editor = @Editor
            ,Cdt = @Cdt
            ,Udt = @Udt
            WHERE CtLabel = CtLabel and Tp = tp and Defect = defect
            
            （setValue哪个字段赋值就有更新哪个字段;condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.）
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefecSQEDefectInfo(System.String)">
            <summary>
            8.根据type获取Defect数据
            Select * from DefectCode where Type=@type order by Defect
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectCode">
            <summary>
            1.获取defectCode的列表
            select distinct Defect from DefectCode order by Defect
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.GetDefectCodeLst">
            <summary>
            3.获取defect列表
            select * from DefectCode order by Defect
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectRepository.DeleteDefectCode(System.String)">
            <summary>
            4.根据defect删除defect数据
            delete from defectCode where Defect = @defect
            </summary>
            <param name="defect"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Defect.IDefectRepository.CheckIfIqcCauseExist(IMES.DataModel.IqcCause1Info)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Defect.IDefectRepository.UpdateUDTofIqcCause(IMES.DataModel.IqcCause1Info,IMES.DataModel.IqcCause1Info)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Defect.IDefectRepository.AddIqcCause(IMES.DataModel.IqcCause1Info)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Defect.IDefectRepository.GetIqcCause1InfoList(IMES.DataModel.IqcCause1Info)" -->
        <member name="T:IMES.FisObject.Common.FisBOM.IBOMPart">
            <summary>
             BOM中Part的Interface
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMPart.Match(System.String,System.String,System.String)">
            <summary>
            将指定字符串与此Part进行Match
            </summary>
            <param name="target">指定字符串</param>
            <param name="station">当前Station</param>
            <param name="valueType">需要匹配的Part属性类别</param>
            <returns>是否匹配</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMPart.Check(IMES.FisObject.Common.Part.IPartOwner,System.String)">
            <summary>
            Part检查，通常包括唯一性检查等
            </summary>
            <param name="owner">owner</param>
            <param name="station">station</param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMPart.CheckHold(System.String,System.String)">
            <summary>
            检查Part是否被Hold
            </summary>
            <param name="family">family</param>
            <param name="model">model</param>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IBOMPart.Part">
            <summary>
            Part
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog">
            <summary>
            BoxerBookData业务对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.ID">
            <summary>
            自增ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.PCBNo">
            <summary>
            主板序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.TestCase">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.LineNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.WC">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.IsPass">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.Descr">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.ErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.TestTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.ProductID">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.SerialNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.CartonSn">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.DateManufactured">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.MACAddress">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.IMEI">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.IMSI">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.EventType">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.DeviceAttribute">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.Platform">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.ICCID">
             <summary>
            
             </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.EAN" -->
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.ModelNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.PalletSerialNo">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.PublicKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.PrivateKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MBLog">
            <summary>
            主板日志值对象。代表一条主板日志。
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBLog.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.PCBID">
            <summary>
            Log所属MB
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.Model">
            <summary>
            MB机型
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.StationID">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.Status">
            <summary>
            过站结果1=PASS,0=FAIL
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.LineID">
            <summary>
            所属Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBChangeLog.IMBChangeLogRepository.GetMBChangeLogs(IMES.FisObject.PCA.MBChangeLog.MBChangeLog)">
            <summary>
            Select * from Change_PCB nolock where OldPCBNo = @OldMBSno or NewPCBNo = @NewMBSno
            
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是OR关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.PAK.StandardWeight.ModelWeight">
            <summary>
            Model的标准重量对应ModelWeight表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.UnitWeight">
            <summary>
            Unit重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.CartonWeight">
            <summary>
            Caton 重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.SendStatus">
            <summary>
            Send SAP Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.StandardWeight.ModelWeight.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.COA.COAStatus">
            <summary>
            COA状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.COASN">
            <summary>
            COA序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.IECPN">
            <summary>
            料号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.LineID">
            <summary>
            产线
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAStatus.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.DeliveryCarton.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.DeliveryCarton.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.CartonSSCC.CartonSSCC">
            <summary>
            CartonSSCC数据
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.#ctor">
            <summary>
            CartonSSCC数据
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
            CartonSSCC数据
            </summary>
            <param name="cartonSN"></param>
            <param name="sscc"></param>
            <param name="editor"></param>
            <param name="cdt"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.CartonSN" -->
        <member name="P:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.SSCC">
            <summary>
            生成的SSCC号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.CartonSSCC.CartonSSCC.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.RunInTimeControl">
            <summary>
            RunInTimeControl表对应实体
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Hour">
            <summary>
            Hour
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.TestStation">
            <summary>
            TestStation
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.RunInTimeControl.ControlType">
            <summary>
            ControlType
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.ReprintLog.ReprintLog">
            <summary>
            重印Log类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.ReprintLog.ReprintLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.LabelName">
            <summary>
            Label名称
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.BegNo">
            <summary>
            开始号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.EndNo">
            <summary>
            结束号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.Descr">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.Reason">
            <summary>
            重印原因
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.Editor">
            <summary>
            重印原因
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.ReprintLog.ReprintLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartTypeMapping">
            <summary>
            Fis PartType与SAP PartType映射关系
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.SAPType">
            <summary>
            Sap part type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.FISType">
            <summary>
            Fis part type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeMapping.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartStrategyConfig.PartStrategyMappingElement">
            <summary>
            配置文件中自定义的Element类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialLot.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialLot.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialLot.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Line.ILineRepository.GetPdLineList(System.String,System.String)" -->
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetAllPdLineListByCust(System.String)">
            <summary>
            Get PdLine List by customerId
            </summary>
            <param name="customerId"></param>
            <returns>PdLine Info List</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetAllPdLineListByStage(System.String)">
            <summary>
            select * from Line where Stage=stage order by Line
            </summary>
            <param name="stage"></param>
            <returns>PdLine Info List</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLineByCustomerAndStage(System.String,System.String)">
            <summary>
            SELECT [Line] AS Code, [Descr] as Line
            FROM IMES_GetData..Line
            WHERE Stage = @Stage
            and CustomerID = @Customer
            ORDER BY Code
            </summary>
            <param name="customer"></param>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetDOAListListByDn(IMES.DataModel.DOAListInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.UpdateDOAList(IMES.DataModel.PoDataInfo,IMES.DataModel.PoDataInfo)">
            <summary>
             setValue哪个字段赋值就有更新哪个字段
             condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLinesByStage(System.String)">
            <summary>
            SELECT [Line] FROM [IMES2012_GetData].[dbo].[Line] Where [Stage]='FA' Order By  [Line]
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetPdLineListByStageAndCustomer(System.String,System.String)">
            <summary>
            SELECT [Line] AS Code, [Descr] as Line FROM IMES_GetData..Line WHERE Stage=@Stage and CustomerID=@Customer ORDER BY Code
            </summary>
            <param name="stage"></param>
            <param name="customer"></param>
            <returns>PdLine Info List</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetStationListByLineAndStationType(System.String,System.String,System.String)">
            <summary>
            SELECT distinct a.Station, a.Descr
            FROM IMES2012_GetData..Station a(nolock),IMES2012_GetData..Line_Station b(nolock)
            Where a.Station = b.Station 
            and rtrim(a.StationType) = 'SATest' 
            and b.Status='1' 
            and b.Line = [PdLine]
            Order By a.Station,a.Descr
            </summary>
            <param name="line"></param>
            <param name="stationType"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLineListByStationAndCustomer(System.String,System.String)">
            <summary>
            SELECT a.[Line] AS Code, [Descr] as Line
            FROM IMES_GetData..Line_Station a, IMES_GetData..Line b
            WHERE a.Station = @Station
               and a.Line = b.Line
               and CustomerID = @Customer
            ORDER BY [Descr]
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLinePrefixListByStage(System.String)">
            <summary>
            Select distinct (left(Line, 1)) as Line from Line where Stage=’SA’order by left(Line, 1)
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLinePrefixListByStages(System.String[])">
            <summary>
            取得Line的方法：Select distinct(left(Line, 1)) as Line from Line where Stage=’FA’or Stage=’PAK’order by left(Line, 1)
            </summary>
            <param name="stages"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLinePrefixListByStages(System.String[],System.String)">
            <summary>
            取得Line的方法：select distinct LEFT(Line,1) from Line  where (Stage = 'FA' or Stage = 'PAK') and CustomerID = @Customer order by LEFT(Line,1)
            </summary>
            <param name="stages"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetPaLineStationListByLine(System.String)">
            <summary>
            1根据Line检索Line_Station 
            参考sql:Status返回0，1就可以，不需转换为Pass，Fail。
            select a.ID,a.Station,b.StationType,a.Status,b.Descr,a.Editor,a.Cdt,a.Udt  
            from Line_Station a join Station b on a.Station=b.Station  
            where a.Line=? 
            Order by a.Cdt
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetAllStage">
            <summary>
            2取得全部的Stage 
            参考sql:
            select Stage from Stage order by Stage 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLineByCustAndStage(System.String,System.String)">
            <summary>
            3取得PdLine
            参考sql: 
            select Line from Line where CustomerID=? and Stage=? order by Line 
            </summary>
            <param name="Cust"></param>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.DeleteLineStationByID(System.Int32)">
            <summary>
            4删除line和Station的关系
            参考sql:
            delete Line_Station where ID=? 
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.IFLineStationIsExists(System.String,System.String)">
            <summary>
            5判断line和Station的关系是否已经存在
            参考sql:
            select * from Line_Station where Line=? and Station=? 
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.AddLineStation(IMES.DataModel.LineStation)">
            <summary>
            6添加LineStation,返回新纪录的ID
            参考sql:
            insert Line_Station(Line,Station,Status,Editor,Cdt,Udt) values(?,?,?,?,?,?)
            </summary>
            <param name="lineStation"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.UpdateLineStation(IMES.DataModel.LineStation)">
            <summary>
            7更新LineStation纪录
            参考sql:
            update Line_Station set Line=?,Station=?,Status=?,Editor=?,Udt=? where ID=?
            </summary>
            <param name="lineStation"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetLineInfoList(System.String,System.String)">
            <summary>
            SELECT [Line]
                 ,[Descr]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
                  ,[CustomerID]
                  ,[Stage]
              FROM [IMES_GetData_Datamaintain].[dbo].[Line]
            where [CustomerID]='CustomerID' AND [Stage]='stage'
            order by [Line]
            </summary>
            <param name="customer"></param>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.GetStageList">
            <summary>
            SELECT [Stage]
              FROM [IMES_GetData_Datamaintain].[dbo].[Stage]
            order by [Stage]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.DeleteLine(System.String)">
            <summary>
            DELETE FROM [Line]
                  WHERE Line='line'
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.IsExistLine(System.String)">
            <summary>
            IF EXISTS(
            SELECT [Line]
                    FROM [IMES_GetData_Datamaintain].[dbo].[Line]
            where [Line]='line'
            )
            set @return='True'
            ELSE
            set @return='False'
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.AddLine(IMES.FisObject.Common.Line.Line)">
            <summary>
            新增Line
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.UpdateLine(IMES.FisObject.Common.Line.Line,System.String)">
            <summary>
            更新Line
            </summary>
            <param name="item"></param>
            <param name="oldLineId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Line.ILineRepository.IsExistLineDescr(System.String)">
            <summary>
            1) 
            IF EXISTS(
            SELECT [Line] 
            FROM [iMES2012].[dbo].[Line]
            where [Descr]='Descr'
            )
            set @return='True'
            ELSE
            set @return='False'
            </summary>
            <param name="descr"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Line.ILineRepository.IsExistLineDescrExceptLine(System.String,System.String)" -->
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetParentBomNode(System.String)">
            <summary>
            蚕跤隅腔part腕善虜BOM誹萸
            </summary>
            <param name="pn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetParentBomNodeByPnListAndBomNodeType(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            蚕跤隅腔pnList腕善BomNodeType=bomNodeType腔虜BOM誹萸
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetAllACAdaptor">
            <summary>
            1,脤戙垀衄腔湔婓腔Ac Adaptor暮翹:
            sql:select * from AcAdapMaintain order by Assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetACAdaptorByAssembly(System.String)">
            <summary>
            2,偌桽Assembly脤梑饜腔Ac Adaptor
            sql:select * from AcAdapMaintain where Assembly like "'"+Assembly+"%'" order by Assembly
            </summary>
            <param name="Assembly"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.DeleteSelectedACAdaptor(System.Int32)">
            <summary>
            3,刉壺恁笢Ac adaptor暮翹:
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.AddOneAcAdaptor(IMES.DataModel.ACAdaptor)">
            <summary>
            4,氝樓珨沭陔腔AC adaptor暮翹 
            sql:insert into AcAdapMaintain values (?,?,?,?,?); item
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.UpdateOneAcAdaptor(IMES.DataModel.ACAdaptor)">
            <summary>
            5,載陔珨沭暮翹:
            </summary>
            <param name="newItem"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetAllGrades">
            <summary>
            脤戙垀衄Grade
            SQL:select * from HP_Grade order by family,Series
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetGradesByFamily(System.String)">
            <summary>
            脤戙垀衄Grade 偌桽Family
            select * from HP_Grade where family= [family]
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.AddSelectedGrade(IMES.DataModel.GradeInfo)">
            <summary>
            氝樓Grade
            insert into hp_grade valus [grade]
            ID蚕GradeInfo砓隙
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.DeleteSelectedGrade(System.Int32)">
            <summary>
            刉壺恁笢腔Grade
            delete from hp_grade where id=[id]
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.UpdateSelectedGrade(IMES.DataModel.GradeInfo)">
            <summary>
            載陔恁笢腔Grade
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetAllBTOceanOrder">
            <summary>
            鳳垀衄BTOceanOrder杅擂
            1. Bt_Seashipmentsku
            偌桽model趼僇齬唗
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetListByPdLineAndModel(System.String,System.String)">
            <summary>
            跦擂pdline睿model鳳BTOceanOrder杅擂
            2. Bt_Seashipmentsku
            </summary>
            <param name="pdLine"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.AddBTOceanOrder(IMES.DataModel.BTOceanOrder)">
            <summary>
            氝樓珨沭BTOceanOrder杅擂
            3. Bt_Seashipmentsku
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.DeleteBTOceanOrderByPdlineAndModel(System.String,System.String)">
            <summary>
            刉壺珨沭BTOceanOrder杅擂
            4. Bt_Seashipmentsku
            </summary>
            <param name="pdLine"></param>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.UpdateBTOceanOrderbyPdlineAndModel(IMES.DataModel.BTOceanOrder,System.String,System.String)">
            <summary>
            党蜊珨沭BTOceanOrder杅擂
            5. Bt_Seashipmentsku
            </summary>
            <param name="obj"></param>
            <param name="pdLine"></param>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetTPsFromDescType">
            <summary>
            1﹜腕DescType桶笢腔垀衄TP硉ㄛ偌趼睫唗齬蹈
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetBOMDescrsByTp(System.String)">
            <summary>
            2﹜跦擂Tp腕勤茼腔BOM Description杅擂腔list(偌Code戲弇齬唗)
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetBOMDescrsByCode(System.String)">
            <summary>
            3﹜跦擂code腕BOM Description腔暮翹杅擂
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.UpdateBOMDescrById(IMES.DataModel.DescTypeInfo)">
            <summary>
            4﹜跦擂id[彆桶羶衄id憩粒蚚Code]党蜊BOM Description暮翹
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.InsertBOMDescr(IMES.DataModel.DescTypeInfo)">
            <summary>
            5﹜氝樓BOM Description
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.DeleteBOMDescrById(System.Int32)">
            <summary>
            6﹜跦擂id[彆桶羶衄id憩粒蚚Code]刉壺BOM Description
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.FindBOMDescrById(System.Int32)">
            <summary>
            7﹜跦擂id[彆桶羶衄id憩粒蚚Code]脤梑珨沭BOM Description暮翹
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPnListByModelAndBomNodeType(System.String,System.String)">
            <summary>
            SELECT B.[PartNo]
            FROM [IMES_GetData].[dbo].[ModelBOM] A,Part B     
            where A.[Material]=Model and A.[Component]=B.[PartNo] and B.BomNodeType='MB'
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPnListByModelAndBomNodeType(System.String,System.String,System.String)">
            <summary>
            SELECT B.[PartNo]
            FROM [IMES_GetData].[dbo].[ModelBOM] A,Part B     
            where A.[Material]=Model and A.[Component]=B.[PartNo] and B.BomNodeType='MB'and Descr='Anatel label'
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPnListByModelAndBomNodeTypeAndDescr(System.String,System.String,System.String)">
            <summary>
            select * from ModelBOM a (nolock), Part b (nolock) 
            where a.Material = @Model
                and a.Component = b.PartNo
                and b.BomNodeType = 'P1'
                and b.Descr LIKE 'ECOA%
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <param name="descr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetCTOBomDescr(System.String,System.String)">
            <summary>
            腕暮翹腔Descr趼僇硉
            </summary>
            <param name="mpno"></param>
            <param name="spno"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetCTOBomList(System.String,System.String)" -->
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetOsCodeFromBomCode(System.String)">
            <summary>
            SELECT @syscode=os_code FROM Bom_Code (nolock) WHERE part_number=@Pno
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetGradesBySeries(System.String)">
            <summary>
            SELECT @grade=Grade,@energia=Energia,@espera=Espera FROM HP_Grade WHERE Series=@series
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetDescriptionOfDescTypeListByTpAndCode(System.String,System.String)">
            <summary>
            SELECT @u=RTRIM([USER].dbo.GetStr(Description,'U=')), 
             @i=RTRIM([USER].dbo.GetStr(Description,'I=')) 
            FROM IMES_GetData..DescType (NOLOCK) 
            WHERE Tp='AD' AND Code=RTRIM(@family)
            </summary>
            <param name="tp"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetMaterialByComponent(System.String)">
            <summary>
            SELECT [Material]
            FROM [IMES2012_GetData].[dbo].[ModelBOM]
            WHERE [Component]=@partNo
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPartInfoValueListByModelAndBomNodeTypeAndInfoType(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            SELECT PartInfo.InfoValue 
            FROM [IMES_GetData].[dbo].[ModelBOM] a,Part b,PartInfo c
            where a.[Material]=@model 
            and a.[Component]=b.[PartNo] 
            and b.BomNodeType=@bomNodeType 
            and b.[PartNo]=c.PartNo 
            and c.InfoType=@infoType 
            and b.[PartNo] not in (select d.PartNo from PartInfo d where d.PartNo=b.[PartNo] and d.InfoType=@notEqInfoType and d.InfoValue=@notEqInfoValue)
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckExistModelBOMByMaterialAndPartDescrLike(System.String,System.String)">
            <summary>
            彆BOM笢湔婓WWAN寀湖荂
            If exist(SELECT [ID] FROM [ModelBOM] a, Part b where a.Material=@material  and  a.Component=b.PartNo and b.Descr like '%'' + @descrInStr + %')
            </summary>
            <param name="material"></param>
            <param name="descrInStr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPartInfoValueListByModelAndBomNodeTypeAndInfoTypes(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            select distinct d.InfoValue from ModelBOM a, Part b, PartInfo c, PartInfo d
                where a.Material = @Model 
                and a.Component = b.PartNo
                and b.PartNo = c.PartNo 
                and b.PartNo = d.PartNo 
                and b.BomNodeType = 'MB' --@bomNodeType
                and c.InfoType = 'VGA'   --@infoType
                and c.InfoValue = 'SV'   --@infoValue
                and d.InfoType = 'MB'    --@infoType2
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <param name="infoType2"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetPartInfoValueListByModelAndBomNodeTypeAndInfoType(System.String,System.String,System.String)">
            <summary>
            select distinct d.InfoValue from ModelBOM a, Part b, PartInfo d
                where a.Material = @Model 
                and a.Component = b.PartNo
                and b.PartNo = d.PartNo 
                and b.BomNodeType = 'MB'    --@bomNodeType
                and d.InfoType = 'MB'       --@infoType
            </summary>
            <param name="model"></param>
            <param name="bomNodeType"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetAllPartCollectionStation">
            <summary>
            select distinct Station from StationCheck
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetESOPListByModel(System.String)" -->
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetModelBomList(System.String,System.String)">
            <summary>
            1ㄘ怀統杅ㄩinfotypeㄛinfovalue
            SELECT a.Material as MPno, a.Component as SPno
            FROM ModelBOM a, PartInfo b
            WHERE a.Component = b.PartNo
                  AND b.InfoType = 'VendorCode'
                  AND b.InfoValue LIKE '%' + LEFT(@VendorCT, 5) + '%'
            </summary>
            <param name="infoType"></param>
            <param name="vendorCT"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetHpWwanlabelInfoByModuleNoPrefix(System.String)">
            <summary>
            SELECT * FROM HP_WWANLabel NOLOCK WHERE LEFT(ModuleNo, CHARINDEX('-', ModuleNo)-1) = @wwanKPAS
            </summary>
            <param name="wwanKpas"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckExistMaterialByPno(System.String)">
            <summary>
            SELECT COUNT(1) FROM [192.168.147.6,998].HPIMES.dbo.ModelBOM nolock , [192.168.147.6,998].HPIMES.dbo.PAK_CHN_TW_Light nolock ON Component=PartNo WHERE Material=@Pno 
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckIfExistProductPartWithBom(System.String,System.String,System.String)">
            <summary>
            select * from ModelBOM a
            inner join Part b
            on a.Component = b.PartNo 
            and b.Descr = @descr
            left join Product_Part c
            on b.PartNo = c.PartNo 
            and c.ProductID = @productId 
            where a.Material = @model 
            and c.PartSn is null
            and a.Flag = 1
            and b.Flag = 1 
            </summary>
            <param name="descr"></param>
            <param name="model"></param>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckIfExistModelBomWithPart(System.String,System.String,System.String)">
            <summary>
            Exists(select b.PartNo from ModelBOM a, Part b where a.Component = b.PartNo 
            and (b.Descr like '%WWAN%' or b.Descr like '%WIRELESS%') and a.Material=#product.Model)
            </summary>
            <param name="descrLike1"></param>
            <param name="descrLike2"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckIfExistDoubleBomWithPart(System.String,System.String,System.String,System.String)">
            <summary>
             for RCTO
            </summary>
            <param name="model"></param>
            <param name="descrLike"></param>
            <param name="bomNodeType"></param>
            <param name="bomNodeType2"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.CheckIfExistProductPartWithBomForRCTO(System.String,System.String,System.String)">
            <summary>
            select * from ModelBOM a
            inner join Part b
            on a.Component = b.PartNo 
            and b.Descr = @descr
            left join Product_Part c
            on b.PartNo = c.PartNo 
            and c.ProductID = @productId 
            where a.Material = @model 
            and c.PartSn is null
            and a.Flag = 1
            and b.Flag = 1 
            </summary>
            <param name="descr"></param>
            <param name="model"></param>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.GetAssetPartNo(System.String,System.Collections.Generic.IList{System.String})">
             <summary>
             select a.Component
            from ModelBOM a, 
                 Part b,
                 @ASTType c
            where a.Component = b.PartNo and
                  b.PartType = c.data and
                  a.Material = 'PCBC114KD24Y' and
                  a.Component like '2TG%'  and
                  b.Flag=1
             </summary>
             <param name="model"></param>
             <param name="?"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IBOMRepository.WhereUsedComponent(System.String)">
            <summary>
            select Material from ModelBom where Component=@Component and flag=1 order by Cdt
            </summary>
            <param name="coponent"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetCauseList(System.String,System.String)">
            <summary>
            获得Cause列表
            </summary>
            <param name="customer"></param>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetMajorPartList(System.String)">
            <summary>
            获得MajorPart列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetComponentList(System.String)">
            <summary>
            获得Component列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetObligationList(System.String)">
            <summary>
            获得Obligation列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetResponsibilityList(System.String)">
            <summary>
            获得Responsibility列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.Get4MList(System.String)">
            <summary>
            获得4M列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetCoverList(System.String)">
            <summary>
            获得Cover列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetUncoverList(System.String)">
            <summary>
            获得Uncover列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetTrackingStatusList(System.String)">
            <summary>
            获得TrackingStatus列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetDistributionList(System.String)">
            <summary>
            获得Distribution列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetMarkList(System.String)">
            <summary>
            获得Mark列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.FindDefectInfoesByType(System.String)">
            <summary>
            根据Type获得DefectInfo列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.FindDefectInfoesByType(System.String,System.String)">
            <summary>
            根据Type和Customer获得DefectInfo列表
            </summary>
            <param name="type"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.TransToDesc(System.String,System.String)">
            <summary>
            获得DefectInfo的描述信息
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetRepairInfoByCondition(System.String)">
            <summary>
            1,根据Type查询符合条件的Repair Info 信息
            SQL:SELECT Code, Descr, Editor, Cdt, Udt FROM IMES_GetData..DefectInfo WHERE Type=@Type ORDER BY Code
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Defect.IDefectInfoRepository.AddRepairInfoItem(IMES.DataModel.DefectInfoDef)" -->
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.CheckExistDefectInfo(System.String,System.String)">
            <summary>
            SQL:IF EXISTS(SELECT * FROM IMES_GetData..DefectInfo WHERE Type = @Type AND Code = @Code)
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.UpdateRepairInfoItem(IMES.DataModel.DefectInfoDef,System.String,System.String)">
            <summary>
            3,更新一条记录
            UPDATE IMES_GetData..DefectInfo SET Description = @Descr, Editor = @Editor, Udt = GETDATE()
            WHERE Type = @Type AND Code = @Code
            </summary>
            <param name="item"></param>
            <param name="code"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.RemoveRepairInfoItem(System.String,System.String)">
            <summary>
            4,删除选中的记录
            SQL:DELETE FROM IMES_GetData..DefectInfo WHERE Type = @Type AND Code= @Code
            </summary>
            <param name="code"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetCountOfRepairInfoByTypeAndCode(System.String,System.String)">
            <summary>
            返回查询记录的个数
            SQL:SELECT count(*) FROM IMES_GetData..DefectInfo WHERE Type = @Type AND Code = @Code
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetDefectInfoByTypeAndCode(System.String,System.String)">
            <summary>
            SELECT * FROM IMES_GetData..DefectInfo WHERE Type = @Type AND Code = @Code
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.GetDefectInfo">
            <summary>
            2.获取defectinfo的defect列表
            select distinct Code from DefectInfo order by Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.UpdateRepairInfoItemById(IMES.DataModel.DefectInfoDef,System.Int32)">
            <summary>
             update DefectInfo where Id=@Id
            </summary>
            <param name="item"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.RemoveRepairInfoItemById(System.Int32)">
            <summary>
            Delete DefectInfo where Id=@Id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.IDefectInfoRepository.CheckExistDefectInfo(System.String,System.String,System.String)">
            <summary>
            CheckExist by type and code and CustomerId
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Defect.DefectInfo">
            <summary>
            DefectInfo蚚衾桶尨Defect笚晚腔眈壽杅擂ㄛ煦峈狟蹈濬倰ㄩComponent,Obligation,Cause,MajorPart,Distribution,Responsibility,4M,TrackingStation,Cover,Uncover
            跪笱濬倰腔賦凳眈肮ㄛ湔溫婓肮珨table笢ㄛ秪森蚚肮珨跺濬桶尨˙
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.Type">
            <summary>
            杅擂濬倰ㄛ毓峓ㄩComponent,Obligation,Cause,MajorPart,Distribution,Responsibility,4M,TrackingStation,Cover,Uncover
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.Code">
            <summary>
            趼睫測鎢
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.Description">
            <summary>
            鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.CustomerId">
            <summary>
            垀扽諦誧
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.EngDescription">
            <summary>
            English 鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.DefectInfo.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Defect.DefectInfo.DefectInfoType">
            <summary>
            DefectInfo濬倰
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.PCBVersion.PCBVersion.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.PCBVersion.PCBVersion.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.PCBVersion.PCBVersion.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pizza.PizzaStatus">
            <summary>
            Pizza状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.PizzaID">
            <summary>
            PizzaID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.LineID">
            <summary>
            产线
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.StationID">
            <summary>
            站别
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaStatus.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.DN.DeliveryPallet">
            <summary>
            Delivery和Pallet绑定关系表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.DeliveryQty">
            <summary>
            DN在该Pallet上包含的箱數数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.DeviceQty">
            <summary>
            DN在该Pallet上包含的机器数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.PalletType">
            <summary>
            DN在该Pallet 的 PalletType = ZP /ZC 
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.ID">
            <summary>
            自增ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.DeliveryID">
            <summary>
            Delivery No.
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.PalletID">
            <summary>
            栈板号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.ShipmentID">
            <summary>
            shipment
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryPallet.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.COA.COAReceive">
            <summary>
            对应COAReceive表,产线接收到的COA记录
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.BegSN">
            <summary>
            开始号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.EndSN">
            <summary>
            结束号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.PO">
            <summary>
            PO
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.CustPN">
            <summary>
            客户PN
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.IECPN">
            <summary>
            IECPN
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.MSPN">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Descr">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.ShipDate">
            <summary>
            出货日期
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Qty">
            <summary>
            数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Cust">
            <summary>
            客户
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Upload">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COAReceive.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Model.ModelInfo">
            <summary>
            Model腔孺桯扽俶濬
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.ModelName">
            <summary>
            ModelName
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Name">
            <summary>
            孺桯扽俶腔靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Value">
            <summary>
            孺桯扽俶腔硉
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Description">
            <summary>
            孺桯扽俶腔鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Editor">
            <summary>
            峎誘埜馱瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.ModelInfo.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TestLog.TestLog">
            <summary>
            测试Log类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLog.#ctor(System.Int32,System.String,System.String,System.String,System.String,IMES.FisObject.Common.TestLog.TestLog.TestLogStatus,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLog.#ctor(System.Int32,System.String,System.String,System.String,System.String,IMES.FisObject.Common.TestLog.TestLog.TestLogStatus,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLog.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{IMES.FisObject.Common.TestLog.TestLogDefect},IMES.FisObject.Common.TestLog.TestLog.TestLogStatus,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLog.AddTestLogDefect(IMES.FisObject.Common.TestLog.TestLogDefect)">
            <summary>
            为测试log增加defect
            </summary>
            <param name="tldfct">defect</param>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Sn">
            <summary>
            product/Mb标识 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.FixtureId">
            <summary>
            测试使用的Fixture
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Station">
            <summary>
            测试Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Status">
            <summary>
            测试结果
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.JoinID">
            <summary>
            JoinID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.ActionName">
            <summary>
            ActionName
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.ErrorCode">
            <summary>
            ErrorCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Descr">
            <summary>
            Descr
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Defects">
            <summary>
            TestLogDefect
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TestLog.TestLog.TestLogStatus">
            <summary>
            测试结果
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.PrintLog.PrintLog">
            <summary>
            PrintLog业务对象
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.PrintLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Name">
            <summary>
            序号种类
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.BeginNo">
            <summary>
            开始号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.EndNo">
            <summary>
            结束号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Descr">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.LabelTemplate">
            <summary>
            LabelTemplate
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintLog.PrintLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.PrintItem.PrintTemplate">
            <summary>
            打印模板
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.PrintTemplate.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.Piece">
            <summary>
            打印张数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.TemplateName">
            <summary>
            模板名字
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.LblType">
            <summary>
            Label Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.SpName">
            <summary>
            存储过程名字
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PrintItem.PrintTemplate.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.PrintItem.ILabelTypeRepository">
            <summary>
            用于访问LabelType对象的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplateList(System.String)">
            <summary>
            取得所有可用的打印模板
            </summary>
            <param name="stationId">站点标识</param>
            <param name="labelType">标签类型</param>
            <returns>可用的打印模板列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintMode(System.String)">
            <summary>
            取得LabelType的打印模式(Template/Batch: "1" / "0")
            </summary>
            <param name="stationId">站点标识</param>
            <param name="labelType">标签类型</param>
            <returns>打印模式</returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetRuleMode(System.String)">
            <summary>
            取得LabelType的Rule模式
            </summary>
            <param name="stationId">站点标识</param>
            <param name="labelType">标签类型</param>
            <returns>Rule模式</returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintLabelTypeList(System.String)">
            <summary>
            获取指定station可能打印的LabelType
            </summary>
            <param name="station">station</param>
            <returns>指定station可能打印的LabelType</returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.FillTemplates(IMES.FisObject.Common.PrintItem.LabelType)">
            <summary>
            根据LabelType获取Templates
            </summary>
            <param name="lblType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelTypesByStation(System.String)">
            <summary>
            根据station获取LabelType列表
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplate(System.String)">
            <summary>
            根据templateName获取PrintTemplate
            (For Both Runtime And Maintain)
            </summary>
            <param name="templateName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplate(System.String,System.String)">
            <summary>
             根据LabelType aand TemplateName获取PrintTemplate
            </summary>
            <param name="labelType"></param>
            <param name="templateName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplate(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            调用[IMES_GetData]中的存储过程IMES_GetTemplate获取模板
            </summary>
            <param name="labelType"></param>
            <param name="model"></param>
            <param name="mo"></param>
            <param name="dn"></param>
            <param name="partno"></param>
            <param name="rulemode"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetMainBat(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            bat打印时,根据存储过程名字和参数执行存储过程,获取主Bat
            </summary>
            <param name="currentSPName">存储过程名字</param>
            <param name="parameterKeys">存储过程需要的参数名字</param>
            <param name="parameterValues">存储过程需要的参数值</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetMainBat(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            call bat sp 
            </summary>
            <param name="currentSPName"></param>
            <param name="parameterKeys"></param>
            <param name="parameterValues"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelTypeList">
            <summary>
            取LabelType表的记录，栏位包括LabelType、PrintMode、RuleMode、Description、Editor、Cdt、Udt
            按LabelType列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.CheckExistedLabelType(System.String)">
            <summary>
            返回在LabelType表中等于LabelType的数量 
            参考sql如下：
            select count(*) from LabelType where LabelType=?
            </summary>
            <param name="strLabelType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.AddLabelType(IMES.FisObject.Common.PrintItem.LabelType)">
            <summary>
            新增LabelType
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.SaveLabelType(IMES.FisObject.Common.PrintItem.LabelType)">
            <summary>
            修改LabelType
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeleteLabelType(IMES.FisObject.Common.PrintItem.LabelType)">
            <summary>
            删除LabelType
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplateListByLabelType(System.String)">
            <summary>
            栏位包括Template Name、Piece、SP Name、Description、Editor、Cdt、Udt
            按Template Name列的字符序排序
            </summary>
            <param name="strLabelType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.CheckExistedTemplateName(System.String)">
            <summary>
            返回在PrintTemplate表中等于TemplateName的数量 
            参考sql如下：
            select count(*) from PrintTemplate where TemplateName=?
            </summary>
            <param name="strTemplateName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.AddPrintTemplate(IMES.FisObject.Common.PrintItem.PrintTemplate)">
            <summary>
            新增PrintTemplate
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.SavePrintTemplate(IMES.FisObject.Common.PrintItem.PrintTemplate)">
            <summary>
            修改PrintTemplate
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeletePrintTemplate(IMES.FisObject.Common.PrintItem.PrintTemplate)">
            <summary>
            删除PrintTemplate
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPCodeByLabelType(System.String)">
            <summary>
            参考sql如下：
            select PCode from PCode_LabelType where LabelType=?
            </summary>
            <param name="strLabelType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.SavePCode(IMES.DataModel.PCodeLabelType)">
            <summary>
             向PCode_LabelType表中保存记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelRuleByTemplateName(System.String)">
            <summary>
            参考sql如下：
            select * from LabelRule where TemplateName=?
            </summary>
            <param name="strTemplateName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.AddLabelRule(IMES.DataModel.LabelRule)">
            <summary>
            新增LabelRule
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeleteLabelRule(IMES.DataModel.LabelRule)">
            <summary>
            删除LabelRule
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelRuleSetByRuleID(System.Int32)">
            <summary>
            栏位包括ID、Mode、Attribute、Value、Editor、Cdt、Udt
            按Mode列的字符序排序
            参考sql如下：
            select * from LabelRuleSet where RuleID=?
            </summary>
            <param name="RuleID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.CheckExistedAttributeName(System.Int32,System.String,System.String)">
            <summary>
            返回在PrintTemplate表中等于TemplateName的数量 
            参考sql如下：
            select count(*) from LabelRuleSet where RuleID = ? and Mode = ? and AttributeName=?
            </summary>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.AddLabelRuleSet(IMES.DataModel.LabelRuleSet)">
            <summary>
            新增LabelRuleSet
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.SaveLabelRuleSet(IMES.DataModel.LabelRuleSet)">
            <summary>
            修改LabelRuleSet
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeleteLabelRuleSet(IMES.DataModel.LabelRuleSet)">
            <summary>
            删除LabelRuleSet
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeletePCodeByLabelType(System.String)">
            <summary>
            参考sql如下：
            DELETE FROM PCode_LabelType WHERE LabelType=?
            </summary>
            <param name="strLabelType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelRuleByRuleID(System.Int32)">
            <summary>
            根据ID查找LabelRule
            </summary>
            <param name="ruleId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetLabelRuleSetByID(System.Int32)">
            <summary>
            根据ID查找LabelRuleSet
            </summary>
            <param name="ruleSetId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetAllOfflineLabelSetting">
            <summary>
            1 获取所有OfflineLabelSetting数据
            select * from OfflineLabelSetting order by FileName
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetOfflineLabelSetting(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.AddOfflineLabelSetting(IMES.DataModel.OfflineLableSettingDef)" -->
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.UpdateOfflineLabelSetting(IMES.DataModel.OfflineLableSettingDef,System.String)">
            <summary>
            4 修改OfflineLabelSetting数据
            update OfflineLabelSetting
            set
            FileName =@FileName ,
            Description=@Description,
            LabelSpec=@LabelSpec,
            Param1=@Param1,
            Param2=@Param2,
            Param3=@Param3,
            Param4=@Param4,
            Param5=@Param5,
            Param6=@Param6,
            Param7=@Param7,
            Param8=@Param8,
            Editor=@Editor,
            Cdt=@Cdt,
            Udt=@Udt
            where FileName = oldFileName
            </summary>
            <param name="obj"></param>
            <param name="oldFileName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.DeleteOfflineLabelSetting(IMES.DataModel.OfflineLableSettingDef)">
            <summary>
            5 根据指定条件，删除OfflineLabelSetting数据
            delete from OfflineLabelSetting
            where FileName = @FileName
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetPrintTemplateListByLabelType(IMES.DataModel.PrintTemplateEntity)">
            <summary>
            1.获取数据时添加layout字段对应数据
            SELECT TemplateName,LabelType,Piece,SpName,Laytout,Description,Editor,Cdt,Udt FROM PrintTemplate WHERE 
            LabelType=@LabelType ORDER BY TemplateName
            
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="strLabelType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.UpdatePrintTemplate(IMES.DataModel.PrintTemplateEntity,IMES.DataModel.PrintTemplateEntity)">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.PrintItem.ILabelTypeRepository.GetBartendarNameValueInfo(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.List{System.String}})">
            <summary>
            Bartendar Label call sp return Name/Value List
            </summary>
            <param name="currentSPName">sp name</param>
            <param name="parameterKeys">sp parameter name</param>
            <param name="parameterValues">sp parameter value</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Match(System.String,System.String)">
            <summary>
            try to match a string
            </summary>
            <param name="target">剒猁輛俴match腔趼睫揹</param>
            <param name="station">絞Station</param>
            <returns>match善腔part</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Check(IMES.FisObject.Common.FisBOM.PartUnit,IMES.FisObject.Common.Part.IPartOwner,System.String,IMES.FisObject.Common.FisBOM.IFlatBOM)">
            <summary>
            勤饜傖髡腔Part輛俴BOMItem撰梗腔Check
            潰脤Part迵BomItem笢眒芃蹋腔潭俶脹
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IFlatBOMItem.AddCheckedPart(IMES.FisObject.Common.FisBOM.PartUnit)">
            <summary>
            蔚硌隅Part釬峈CheckedPart崝樓善BOMItem笢
            彆BOMItem眒雛剒猁纔珛昢祑都
            </summary>
            <param name="pu">猁氝樓腔Part</param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IFlatBOMItem.AddStationPreCheckedPart(IMES.FisObject.Common.FisBOM.PartUnit)">
            <summary>
            蔚硌隅Part釬峈CheckedPart崝樓善BOMItem笢
            彆BOMItem眒雛剒猁纔珛昢祑都
            </summary>
            <param name="pu">猁氝樓腔Part</param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.IFlatBOMItem.IsFull">
            <summary>
            岆瘁眒芃雛
            </summary>
            <returns>岆瘁眒芃雛</returns>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.CheckItemType">
            <summary>
            CheckItemType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Qty">
            <summary>
            猁芃腔Part杅講
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.PartNoItem">
            <summary>
            UI 桶跡PartNo戲弇珆尨囀
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Tp">
            <summary>
            BomNodeType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Descr">
            <summary>
            UI 桶跡Description戲弇珆尨囀
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.AlterParts">
            <summary>
            鼠蚚蹋蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.PrecheckedPart">
            <summary>
            絞桴眳眒冪堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.CheckedPart">
            <summary>
            絞桴堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.StationPreCheckedPart">
            <summary>
            絞桴眳誹萸堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.IFlatBOMItem.GUID">
            <summary>
            CheckItem 唯一識別碼
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MBStatus">
            <summary>
            翋啣袨怓硉濬﹝桶尨珨跺翋啣腔絞袨怓﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBStatus.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBStatus.#ctor(System.String,System.String,IMES.FisObject.PCA.MB.MBStatusEnum,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="pcbid"></param>
            <param name="station"></param>
            <param name="status"></param>
            <param name="testFailCount"></param>
            <param name="editor"></param>
            <param name="line"></param>
            <param name="udt"></param>
            <param name="cdt"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBStatus.#ctor(System.String,System.String,IMES.FisObject.PCA.MB.MBStatusEnum,System.Int32,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Pcbid">
            <summary>
            Pcbid
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.TestFailCount">
            <summary>
            TestFailCount
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBStatus.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MBStatusEnum">
            <summary>
            翋啣袨怓繹撼硉﹝
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pizza.Pizza">
            <summary>
            Pizza类
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.UpdatePizzaStatus(IMES.FisObject.PAK.Pizza.PizzaStatus)">
            <summary>
            更新PizzaStatus状态
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.PartUniqueCheck(System.String,System.String)">
            <summary>
            检查指定part是否已经和其它PartOwner绑定, 只按照通用规则检查，
            即认为已绑定Part都存放在Product_Part, PCB_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.PartUniqueCheckWithoutOwner(System.String,System.String)">
            <summary>
            检查指定part是否已经和any PartOwner绑定(including current owner), 只按照通用规则检查，
            即认为已绑定Part都存放在Product_Part, PCB_Part, Pizza_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.CheckPartBinded(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            檢查刷入PartNo/PartType/CT/CheckItemType 是否已收集過,若未收集過報錯
            </summary>
            <param name="partType"></param>
            <param name="partNoList"></param>
            <param name="BomNodeType"></param>
            <param name="checkItemType"></param>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.BindPart(System.Collections.Generic.List{IMES.FisObject.Common.Part.IProductPart})">
            <summary>
            将Part绑定到PartOwner对象
            根据Part类型获取相应的IPartStrategy实现，调用IPartStrategy.BindTo()
            以实现不同类型Part的绑定逻辑
            </summary>
            <param name="parts">要绑定的part列表</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.AddPart(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            在ProductPart列表中添加指定part
            这是PartOwner的默认行为，只将
            Part单纯绑定到Owner不会针对不
            同的Part类型进行特殊的处理
            </summary>
            <param name="part">part</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.RemovePart(System.String,System.String)">
            <summary>
            在ProductPart列表中删除指定part
            </summary>
            <param name="partSn">part Sn</param>
            <param name="partPn">partPn Sn</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.RemovePartsByType(System.String)">
            <summary>
            删除指定CheckItemType的Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.RemovePartsByBomNodeType(System.String)">
            <summary>
            删除指定BomNodeType类型的Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.RemoveAllParts">
            <summary>
            删除料
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.Pizza.GetProductPartByStation(System.String)">
            <summary>
            根据站别获取绑定的料
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="F:IMES.FisObject.PAK.Pizza.Pizza._logs">
            <summary>
            取得检查条目。检查条目通过界面维护并存储在数据库中。
            </summary>
            <param name="customer">客户标识(字符串)</param>
            <param name="station">站标识(字符串)</param>
            <returns>检查条目对象集合</returns>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.BindProduct">
            <summary>
            Pizza号码绑定的Product对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.PizzaID">
            <summary>
            Pizza号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.MMIID">
            <summary>
            MMI号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Customer">
            <summary>
            Pizza号码绑定的Product对象的Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Family">
            <summary>
            Pizza号码绑定的Product对象的Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Model">
            <summary>
            Pizza号码绑定的Product对象的Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.CartonSN">
            <summary>
            CartonSN号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Remark">
            <summary>
            Remark号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Status">
            <summary>
            Pizza过站状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.PizzaParts">
            <summary>
            获取与PizzaParts绑定的所有part
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.Pizza.PizzaLogs">
            <summary>
            获取与PizzaLog绑定的所有part
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.BoxerBookData.BoxerBookData">
            <summary>
            BoxerBookData业务对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.id">
            <summary>
            自增ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.MBNo">
            <summary>
            主板序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.TCaseNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.TLineNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.TStatNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.IsPass">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.Desc">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.ErrorCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.datetime">
            <summary>
            
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.PID">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.SerialNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.CartonSN">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.DateManufactured">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.PublicKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.MACAddress">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.IMEI">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.IMSI">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.PrivateKey">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.EventType">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.DeviceAttribute">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.Platform">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.ICCID">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.EAN">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.ModelNumber">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.PalletSerialNo">
             <summary>
            
             </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BoxerBookData.BoxerBookData.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Family">
            <summary>
            Family:可填入: 空白
                      Family
                      Model
                    ProductID 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Category">
             <summary>
            Category
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.TimeOut">
             <summary>
            _TimeOut
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.StopTime">
             <summary>
            _StopTime
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.DefectCode">
             <summary>
            _DefectCode
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.HoldStation">
             <summary>
            _HoldStation
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.HoldStatus">
            <summary>
             HoldStatus
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.ExceptStation">
            <summary>
              ExceptStation 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Editor">
             <summary>
            Editor
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.QTime.QTime.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.ProcessStation">
            <summary>
            站流程的设定条目, 每个条目定义指定站在成功或失败条件下的下一站
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Process.ProcessStation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.ProcessID">
            <summary>
            所属的Process
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.PreStation">
            <summary>
            当前站
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.StationID">
            <summary>
            下一站
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.Status">
            <summary>
            上一站处理结果: 1, pass; 0, fail
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessStation.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartTypeAttribute">
            <summary>
            Part类型属性，定义一个PartType默认的扩展属性集合
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.PartType">
            <summary>
            Part类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.Code">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.Description">
            <summary>
            属性描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartTypeAttribute.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartType">
            <summary>
            Part类型
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartType.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.PartTypeName">
            <summary>
            Part 类型名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.PartTypeGroup">
            <summary>
            Part大类别
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartType.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartInfo">
            <summary>
            Part的扩展属性类，该类实例不能脱离Part对象单独存在,且该类的对象为只读对象
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartInfo.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="id"></param>
            <param name="pn"></param>
            <param name="infotype"></param>
            <param name="infovalue"></param>
            <param name="editor"></param>
            <param name="cdt"></param>
            <param name="udt"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.ID">
            <summary>
            扩展属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.PN">
            <summary>
            Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.InfoType">
            <summary>
            扩展属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.InfoValue">
            <summary>
            扩展属性值
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.Editor">
            <summary>
            数据维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartInfo.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Family">
            <summary>
            _Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Zmode">
            <summary>
            Zmod
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.OS">
             <summary>
            _OS
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.AV">
             <summary>
            _AV
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Image">
             <summary>
            _Image
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.BomZmode">
             <summary>
            _BomZmode
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Editor">
             <summary>
            Editor
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.OSWIN.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo">
            <summary>
             HDDCopy对应实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.CopyMachineId">
            <summary>
            CopyMachineId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.ConnectorId">
            <summary>
            ConnectorId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.SourceHdd">
            <summary>
            SourceHdd
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.HddNo">
            <summary>
            HddNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.HDDCopyInfo.HDDCopyInfo.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBModel.IMBModelRepository">
            <summary>
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBModelByMBCode(System.String)">
            <summary>
            取得同一主板代码的所有主板型号对象
            </summary>
            <param name="mbCode">主板代码</param>
            <returns>主板型号对象集合</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.getTypeByModel(System.String)">
            <summary>
            根据part no获得part表中的part type
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.getEcrVersionsByEcrAndMbcode(System.String,System.String)">
            <summary>
            Get [Cust Version]/[IEC Version] by ECR, MB_Code, then Display (WHERE MBCode = @MBCode AND RIGHT(ECR, 2) = RIGHT(@UIEcr, 2))
            </summary>
            <param name="ecr"></param>
            <param name="mbcode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBCodeListFromEcrVersion">
            <summary>
            从EcrVersion中获得MBCode列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.IsEcrExistInEcrVersion(System.String)">
            <summary>
            判断EcrVersion是否存在
            </summary>
            <param name="ecr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.FillMBCodeObj(IMES.FisObject.PCA.MBModel.MBModel)">
            <summary>
            Lazy load of MBCode of MBModel
            </summary>
            <param name="mbModel"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.AddSmtctInfo(IMES.DataModel.SmtctInfo)">
            <summary>
            insert into SMTCT
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.DeleteSmtctInfo(IMES.DataModel.SmtctInfo)">
            <summary>
            delete  SMTCT
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.UpdateSmtctInfo(IMES.DataModel.SmtctInfo,IMES.DataModel.SmtctInfo)">
            <summary>
            update SMTCT
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetSmtctInfoList(IMES.DataModel.SmtctInfo)">
            <summary>
            select * from SMTCT  order by Family
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.FillFamilyObj(IMES.FisObject.PCA.MBModel.MBModel)">
            <summary>
            
            </summary>
            <param name="mbModel"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBFamilyList">
            <summary>
            获得MBFamily列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBModelList">
            <summary>
            获得MBModel列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetAllUniteMB">
            <summary>
            1.获取所有Unite MB记录
            select * from MBCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetLstByMB(System.String)">
            <summary>
            2.根据MBCode获取Unite MB记录
            </summary>
            <param name="MBCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.AddUniteMB(IMES.FisObject.PCA.MBModel.MBCode)">
            <summary>
            3.添加一条Unite MB记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.DeleteUniteMB(System.String)">
            <summary>
            4.删除一条Unite MB记录
            </summary>
            <param name="mbCode"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.UpdateUniteMB(IMES.FisObject.PCA.MBModel.MBCode,System.String)">
            <summary>
            5.修改一条Unite MB记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBCodeList">
            <summary>
            取得主板代码集合
            </summary>
            <returns>主板代码集合</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBCodeAndMdlList">
            <summary>
            取得主板代码和MDL組合集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.GetMBCodeAndMdlListExceptPrinted">
            <summary>
            取得主板代码和MDL組合集合,不算打印完毕的
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.Get111LevelList(System.String)">
            <summary>
            Get 111 Level List from database
            </summary>
            <param name="mbCodeId">MB_CODE Identifier</param>
            <returns>111 Level Info List</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.Get111LevelListExceptPrinted(System.String)">
            <summary>
            Get 111 Level List from database, not including printed
            </summary>
            <param name="mbCodeId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.IMBModelRepository.Get1397LevelList(System.String)">
            <summary>
            取得1397阶信息列表
            </summary>
            <param name="familyId">Family标识</param>
            <returns>1397阶信息列表</returns>
        </member>
        <member name="T:IMES.FisObject.PAK.Pizza.PizzaPart">
            <summary>
            Pizza绑定的料
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.PizzaID">
            <summary>
            PizzaID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.PartNo">
            <summary>
            PartID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.PartType">
            <summary>
            Part Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.BomNodeType">
            <summary>
            BomNodeType
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.CheckItemType">
            <summary>
            CheckItemType
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaPart.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.Pallet">
            <summary>
            Pallet类
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.Pallet.AddLog(IMES.FisObject.PAK.Pallet.PalletLog)">
            <summary>
            用来记录Pallet过站Log
            </summary>
            <param name="log">Pallet过站记录</param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.Pallet.IsPalletFull(System.String)">
            <summary>
            判断一个Pallet上的所有DN是不是都已经做完
            </summary>
            <param name="exceptDn">当前完成DeliveryPallet的DN的号码</param>
            <returns></returns>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.PalletNo">
            <summary>
            Pallet序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.UCC">
            <summary>
            UCC Code
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.PalletModel">
            <summary>
            PalletModel
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Station">
            <summary>
            站别
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Length">
            <summary>
            栈板长
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Width">
            <summary>
            栈板宽
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Height">
            <summary>
            栈板高
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Weight">
            <summary>
            栈板重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Floor">
            <summary>
            Floor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.PalletLogs">
            <summary>
            获取与Pallet绑定的所有log
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.Pallet.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.DN.IDeliveryRepository">
            <summary>
            Delivery对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetBolNo">
            <summary>
            获取符合出货条件的BolNo列表
            Status为00
            Delivery表中Shipdate大于等于当前日期减五天
            </summary>
            <returns>符合出货条件的BOL码集合</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNByBolNo(System.String)">
            <summary>
            根据BolNo获取DN
            且DN对应的Model是出整機的（看Model表ShipType栏位是PC）
            Status为00
            Delivery表中Shipdate大于等于当前日期减五天
            </summary>
            <param name="bolNo">BOL码</param>
            <returns>DN集合</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryNoListFor054">
            <summary>
            获取可以做Pallet Data Collection TRO的DeliveryNo列表
            Delivery表中Shipdate大于等于当前日期减五天,
            且Model的Region是TRO,
            ShipType是整机
            Status为00或82
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryNoListFor053(System.String)">
            <summary>
            获取可以做CombingPOInCarton的DeliveryNo列表
            获取Model与输入Model相同，
            ShipDate大于等于当前日期减五天，
            状态为可以结合的(00)DN列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.FillDnPalletList(IMES.FisObject.PAK.DN.Delivery)">
            <summary>
            根据DN获取其绑定的Pallet列表
            </summary>
            <param name="delivery"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryInfoValueByTypeAndModelPrefix(System.String,System.String,System.DateTime)">
            <summary>
            select distinct b.InfoValue from IMES_PAK..Delivery a,IMES_PAK..DeliveryInfo b where a.DeliveryNo = b.DeliveryNo and b.InfoType='RedShipment' and left(a.Model,2)='60' and a.ShipDate=’’order by b.InfoValue
            </summary>
            <param name="infoType"></param>
            <param name="modelPrefix"></param>
            <param name="shipDate"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByCondition(IMES.DataModel.DNQueryCondition,System.Int32@)">
            <summary>
            用户可以选择其中的任何一个或多个条件进行查询
            DN,PONo,Model都需要用Like查询
            order by DeliveryNo
            
            对于输入条件，dn需要判断长度，如果是16位则需要精确匹配，如果是10位，则模糊匹配（前10位）其他条件需要精确匹配
            
            但新的UC中增加了一个DN Info的查询条件，需要改造该接口或新增查询接口；
            查询时还需增加一个条件Shipment；
            TOP 1000
            </summary>
            <param name="MyCondition"></param>
            <param name="totalLength"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByCondition(IMES.DataModel.DNQueryCondition,System.Int32@,System.Int64@)">
            <summary>
            能够显示出所查询DN的所有Qty之和
            </summary>
            <param name="MyCondition"></param>
            <param name="totalLength"></param>
            <param name="sum"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByConditionWithSorting(IMES.DataModel.DNQueryCondition)">
            <summary>
            Based on last one. 按照 DN的ShipDate, Qty, DeliveryNo顺序排序
            </summary>
            <param name="MyCondition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByConditionForPerformance(IMES.DataModel.DNQueryCondition)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByConditionForPerformanceWithSorting(IMES.DataModel.DNQueryCondition)">
            <summary>
            Based on last one. 按照 DN的ShipDate, Qty, DeliveryNo顺序排序
            </summary>
            <param name="MyCondition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByConditionFromPoDataEdi(IMES.DataModel.DNQueryCondition,System.Int32@)">
            <summary>
            对于输入条件，dn需要判断长度，如果是16位则需要精确匹配，如果是10位，则模糊匹配（前10位）其他条件需要精确匹配
            
            DNInfo精确匹配的方式是表中的Descr属性值like '%=输入值~%'
            
            参数类型：DNQueryCondition（含DNInfo的查询条件）
            TOP 1000
            </summary>
            <param name="MyCondition"></param>
            <param name="totalLength"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UploadPOData(System.String,System.String)">
            <summary>
            上传DN信息
            </summary>
            <param name="uploadID"></param>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNInfoList(System.String)">
            <summary>
            根据DN获取DNInfoForUI列表
            Order by InfoType
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPoDataEdiInfo(System.String)">
            <summary>
            从IMES_PAK..PoPlt_EDI里获取数据 按照栈板号排序
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetQCStatus(System.String,System.String)">
            <summary>
            使用ProductID = @ProductId and Tp = 'PAQC' 查询IMES_FA..QCStatus 表取Udt 最新的记录，
            </summary>
            <param name="productID"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletList(System.String)">
            <summary>
            根据DN获取Pallet列表
            Order By PalletNo
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletList2(System.String[])">
             <summary>
             访问ConstValue 表，取得ConstValue.Type = 'ProcReg' 的记录，这些记录的Name 字段为SKU / Docking 等名称，Value 为正则表达式；使用Model 依次配置这些记录的正则表达式，匹配上的记录的Name 字段即可确定SKU / Docking...
             
             --Get Non Bulk Pallet
             SELECT PLT AS PalletNo, COUNT(DISTINCT PLT) AS Qty 
                INTO #Pallets
                FROM #PickDeliveries a (nolock), DeliveryInfo b (nolock), Dummy_ShipDet c (nolock)
                WHERE a.DeliveryNo = b.DeliveryNo
                    AND b.InfoType = 'BOL'
                    AND b.InfoValue = c.BOL
                GROUP BY PLT
            
             --Get Bulk Pallet   
             INSERT #Pallets
                 SELECT b.PalletNo AS PalletNo, SUM(b.DeliveryQty) AS Qty
                     FROM #PickDeliveries a (nolock), Delivery_Pallet b (nolock)
                     WHERE a.DeliveryNo = b.DeliveryNo
                         AND LEFT(b.PalletNo, 2) IN ('00', '01')
                     GROUP BY b.PalletNo
                     
             --Get Docking Pallet   
             INSERT #Pallets
                 SELECT b.PalletNo AS PalletNo, SUM(b.DeliveryQty) AS Qty
                     FROM #PickDeliveries a (nolock), Delivery_Pallet b (nolock)
                     WHERE a.DeliveryNo = b.DeliveryNo
                         AND LEFT(b.PalletNo, 2) IN (‘00’,’01’,'NA')
                     GROUP BY b.PalletNo
                
              TODO 2: GetPalletList方法 对于返回的 DeliveryQty, 需要按如下描述实现
              * 散装为使用PLT = @PalletNo 得到的记录数量
              * @PalletQty – 非散装为使用PalletNo= @Pallet 查询Delivery_Pallet 表得到的SUM(Delivery_Pallet.DeliveryQty)
             
              TODO 1: GetPalletList方法 需要通过查询判断并分辨出究竟是哪种Delivery
              * d. (散装的 – Delivery 结合的Pallets 都是NA开头的栈板号)根据Delivery的BOL (DeliveryInfo.InfoValue, Condition: DeliveryNo = @Delivery and InfoType = ‘BOL’)查询Dummy_ShipDet 表得到Pallets
              * c. (非散装的 – Delivery 结合的Pallets 都是00 or 01 开头的栈板号)根据Delivery根据Delivery 查询Delivery_Pallet 表得到Pallets
             </summary>
             <param name="dnList"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletListFromPoPltEdi(System.String)">
            <summary>
            从IMES_PAK..PoPlt_EDI里获取数据 按照栈板号排序
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDNByCondition(IMES.DataModel.DNUpdateCondition,System.String)">
            <summary>
            根据DNUpdateCondition中的DeliveryNo修改一个Delivery的几个属性
            其中 ShipmentNo， PoNo， Model，ShipDate如果不是Null才需要更新
            否则不更新
            没有工作流，修改都要求及时生效
            </summary>
            <param name="myCondition"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliverInfoByID(System.Int32,System.String,System.String)">
            <summary>
            根据ID修改一个DeliverInfo的InfoValue
            没有工作流，修改都要求及时生效
            </summary>
            <param name="deliverInfoID"></param>
            <param name="infoValue"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliverQty(System.Int32,System.Int16,System.String)">
            <summary>
            根据ID修改一个DeliverPallet的DeliveryQty
            没有工作流，修改都要求及时生效
            </summary>
            <param name="deliveryPalletID"></param>
            <param name="deliveryQty"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdatePOData(System.String,System.String)">
            <summary>
            调用SP: IMES_Update_POData
            </summary>
            <param name="uploadID"></param>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDNStatusWhenDNPalletFull(System.String,System.String,System.String)">
            <summary>
            Update Delivey set Status=@Status,Editor=@Editor,Udt=@Udt
            Where DeliceryNo=@DeliveryNo and not exists(select 1 from Delicery_Pallet where Status='0'and DeliceryNo=@DeliveryNo)
            </summary>
            <param name="deliveryNo"></param>
            <param name="status"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateAllDNStatusWhenPalletFull(System.String,System.String,System.String,System.String)">
            <summary>
            调用存储过程IMES_PAK.dbo.IMES_UpdateDN_PalletFull
            当Pallet满时更新其上所有满的DN的状态
            </summary>
            <param name="deliveryNo"></param>
            <param name="status"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryNoListFor071(System.String)">
            <summary>
            获取PrintShiptoCartonLabel的DN列表
            调用 IDeliveryRepository.getDeliveryNoListFor071(string Model)
            DN 按照Model（按照Carton No 查询IMES_FA..Product 得到）
            Status='00'
            Ship Date大于等于当天为条件进行查询
            结果按照ShipDate, Delivery No 进行排序
            
            select b.DeliveryNo from [IMES_FA].[dbo].[Product] a inner join [IMES_PAK].[dbo].[Delivery] b on a.Model=b.Model where b.Status='00' and b.ShipDate >= DATEADD (dd, DATEDIFF(dd,0,getdate()), 0)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletNoListByDn(System.String)">
            <summary>
            select B.PalletNo  
            from Delivery_Pallet A 
            inner join Delivery_Pallet B
            on A.PalletNo=B.PalletNo 
            and A.DeliveryNo=@dn 
            and A.Status = '0'
            group by B.PalletNo having count(B.DeliveryNo)>1
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletNoListByDnAndWithSoloDn(System.String)">
            <summary>
            select B.PalletNo 
            from Delivery_Pallet A 
            inner join Delivery_Pallet B
            on A.PalletNo=B.PalletNo 
            and A.DeliveryNo=@dn 
            and A.Status = '0'
            and B.Status = '0'
            group by B.PalletNo having count(distinct(B.DeliveryNo))=1
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletNoListByShipmentAndWithSoloShipment(System.String)">
            <summary>
            select B.PalletNo 
            from Delivery_Pallet A 
            inner join Delivery_Pallet B
            on A.PalletNo=B.PalletNo 
            and A.Shipment=@shipment 
            and A.Status = '0'
            and B.Status = '0'
            group by B.PalletNo having count(distinct(B.Shipment))=1
            </summary>
            <param name="shipment"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryInfoValue(System.String,System.String)">
            <summary>
            1、Product.DeliveryNo 在DeliveryInfo分别查找InfoType= ‘CustPo’ / ‘IECSo’对应的InfoValue
            </summary>
            <param name="dn"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateSnoidForShipBoxDet(System.String,System.String)">
            <summary>
            CI-MES12-SPEC-PAK-UC Unpack：(P9)请帮忙提供下述数据库功能:
            更新IMES_PAK..ShipBoxDet.SnoId = ''
            SQL: UPDATE IMES_PAK..ShipBoxDet SET SnoId=@SnoId WHERE DeliveryNo=@DeliveryNo
            </summary>
            <param name="snoid"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.RemovePAK_PackkingData_EDIDataByProdIds(System.String[])">
            <summary>
            DELETE HP_EDI.dbo.PAK_PackkingData WHERE SERIAL_NUM IN @prodIds
            </summary>
            <param name="prodIds"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.RemovePAKOdmSession_EDIDataByProdIds(System.String[])">
            <summary>
            DELETE HP_EDI.dbo.PAKODMSESSION WHERE SERIAL_NUM IN @prodIds
            </summary>
            <param name="prodIds"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCertainInfoValueForDeliveryByPalletNoOnDeliveryNo(System.String,System.String)">
            <summary>
            SELECT @RegId = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock)
             WHERE b.PalletNo = @PalletNo
              and a.DeliveryNo = b.DeliveryNo
              and a.InfoType = 'RegId'
            SELECT @PalletQty = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock)
             WHERE b.PalletNo = @PalletNo
              and a.DeliveryNo = b.DeliveryNo
              and a.InfoType = 'PalletQty'
            SELECT @ShipWay = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock)
             WHERE b.PalletNo = @PalletNo
              and a.DeliveryNo = b.DeliveryNo
              and a.InfoType = 'ShipWay'
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCertainInfoValueForDeliveryByPalletNoOnShipmentNo(System.String,System.String)">
            <summary>
            SELECT @RegId = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock), Delivery c (nolock)
            WHERE b.PalletNo = @PalletNo and c.DeliveryNo = a.DeliveryNo
              and b.ShipmentNo = c.ShipmentNo
              and a.InfoType = 'RegId'
            SELECT @PalletQty = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock), Delivery c (nolock)
            WHERE b.PalletNo = @PalletNo and c.DeliveryNo = a.DeliveryNo
              and b.ShipmentNo = c.ShipmentNo
              and a.InfoType = 'PalletQty'
            SELECT @ShipWay = a.InfoValue FROM Delivery_Info a (nolock), Delivery_Pallet b (nolock), Delivery c (nolock)
            WHERE b.PalletNo = @PalletNo and c.DeliveryNo = a.DeliveryNo
              and b.ShipmentNo = c.ShipmentNo
              and a.InfoType = 'ShipWay'
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSumofDeliveryQtyFromDeliveryPallet(System.String)">
            <summary>
            SELECT @pqty = SUM(DeliveryQty) FROM Delivery_Pallet WHERE PalletNo = @PalletNo
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistPakPackkingData(System.Collections.Generic.IList{System.String})">
            <summary>
            not exists (select * from PAK_PackkingData nolock where InternalID in @dn)
            </summary>
            <param name="internalIds"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListForCombineCOAandDN">
            <summary>
             Delivery.ShipDate 大于3天前 (例如：当天为2011-9-13，那么获取的DN 的ShipDate 要大于2011-9-10)
             Delivery.Status = '00'
             Delivery.Model 长度为12 位
             Delivery.Model 前两码为'PC'
             除满足上述条件的DN 外，还需要增加一条Virtual DN
             按照DeliveryNo 升序排列，Virtual DN 插在记录集的首部
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDistinctDeliveryNo(System.String)">
            <summary>
            SELECT COUNT(DISTINCT LEFT(DeliveryNo,10)) AS Expr1
            FROM IMES_PAK.dbo.DeliveryInfo
            where InfoValue like @ConsolidateNo and InfoType = 'Consolidated'
            </summary>
            <param name="consolidateNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSumDeliveryQtyOfACertainDN(System.String)">
            <summary>
            select sum(DeliveryQty) from Delivery_Pallet where DeliveryNo=@DeliveryNo
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDNUdt(System.String)">
            <summary>
            update DN的Udt
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSnoCtrlBoxIdInfoByLikeCustAndValid(System.String,System.String)">
            <summary>
            从SnoCtrl_BoxId里获取满足条件的第一条记录：Cust= BoxId前缀 and valid=’1’，得到BoxId
            select TOP 1 * from SnoCtrl_BoxId where Cust like BoxId+ '%' and valid='1
            </summary>
            <param name="custLike">由调用方加%或_</param>
            <param name="valid"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteSnoCtrlBoxIdInfo(System.Int32)">
            <summary>
            从SnoCtrl_BoxId删除这条记录
            </summary>
            <param name="id"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByLikeConsolidated(System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByInfoTypeAndValue(System.String,System.String)">
            <summary>
            查找含有指定InfoType和InfoValue的DN的列表.
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertShipBoxDet(IMES.DataModel.ShipBoxDetInfo)">
            <summary>
            insert到ShipBoxDet(每个BoxId新增一条记录，其中：Shipment=Delivery.ShipmentNo；Invoice= DN的Invoice属性值；SnoId=’’)，
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteSnoCtrlBoxIdSQInfo(IMES.DataModel.SnoCtrlBoxIdSQInfo)">
            <summary>
            同时从SnoCtrl_BoxId_SQ删除相关的记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetColListFromPakWhLocMas">
            <summary>
            select distinct Col from PAK_WH_LocMas (nolock)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByInfoType(System.String)">
            <summary>
            查找含有指定InfoType的DN的列表.
            </summary>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertDeliveryPallet(IMES.DataModel.DeliveryPalletInfo)">
            <summary>
            Insert Delivery_Pallet
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByStatusesAndModel(System.DateTime,System.String[],System.String,System.Int32)">
            <summary>
            a) 选择的DN需要满足如下要求：
             Delivery.ShipDate 大于3天前 (例如：当天为2011-9-13，那么获取的DN 的ShipDate 要大于2011-9-10)
             Delivery.Status = ‘00’
             Delivery.Model 长度为12 位
             Delivery.Model 前两码为’PC’
            Delivery.ShipDate>= convert(char(10), getdate()-2, 111)  and Status in(‘00’,’87’) and len(Model)=12 and left(Model,2)=’PC’；按照DN正序排序
            </summary>
            <param name="begin"></param>
            <param name="statuses"></param>
            <param name="modelPrefix"></param>
            <param name="modelLength"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryPalletListByDN(System.String)">
            <summary>
            使用DeliveryNo = @DeliveryNo 查询IMES_PAK..Delivery_Pallet 表，取PalletNo 栏位
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryPalletListByDN(System.String,System.String)">
            <summary>
            使用Delivery = @DeliveryNo and PalletNo = @PalletNo查询IMES_PAK..Delivery_Pallet 表得到记录的DeliveryQty值
            </summary>
            <param name="deliveryNo"></param>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryPalletListOrderByUnitQty(System.String)">
            <summary>
            C.获取该DN对应的Pallet List填充到Pallet 下拉框中：
            从Delivery_Pallet中得到满足DeliveryNo=@DN的所有Pallet；下拉框格式为PalletNo+’  ’+ DeliveryQty；排序规则为绑定unit最多的pallet显示在最前面
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSumDeliveryQtyOfACertainPallet(System.String)">
            <summary>
            sum(DeliveryQty) from Delivery_Pallet where PalletNo=@plt
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryPalletListByPlt(System.String)">
            <summary>
            4A.刷入的是PalletNo. Delivery_Pallet.PalletNo=刷入的code
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByDNList(System.Collections.Generic.IList{System.String})" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByDNList(System.Collections.Generic.IList{System.String},System.Int64@)">
            <summary>
            能够显示出所查询DN的所有Qty之和
            </summary>
            <param name="dnList"></param>
            <param name="sum"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByDNListFromPoDataEDI(System.Collections.Generic.IList{System.String})" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePoDataEdi(System.String)">
            <summary>
            delete PoData_EDI where DeliveryNo = @DN
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePoPltEdi(System.String)">
            <summary>
            delete PoPlt_EDI where DeliveryNo = @DN
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteShipBoxDet(System.String)">
            <summary>
            delete ShipBoxDet where Shipment=@dn
            </summary>
            <param name="shipment"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliveryInfoForDecreaseConsolidated(System.String)">
            <summary>
            C. 将所有ShipmentNo等于删除DN的Shipment的所有DN，其DeliveryInfo中Consolidated属性值 ”/”后面的字串减1后保存	
            需要接口，需求如下：
            入参：DeliveryInfo item
            功能：Update这个DeliveryInfo
            
            如果Consolidated中不含‘/’，就不要做‘/’后ConQTY的减1计算
            </summary>
            <param name="shipmentNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteShipBoxDetByDn(System.String)">
            <summary>
            delete ShipBoxDet where DeliveryNo=@dn
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryByShipmentNo(System.String)">
            <summary>
            delete [Delivery] by shipmentNo
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryInfoByShipmentNo(System.String)">
            <summary>
            delete [DeliveryInfo] by shipmentNo
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetInfoValuesByPalletNoOnDeliveryNo(System.String)">
            <summary>
            SELECT @carrier = a.InfoValue FROM DeliveryInfo a (nolock), Delivery_Pallet b (nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
            AND b.Pallet = @PalletNo
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetInfoValuesByPalletNoOnDeliveryNo(System.String,System.String)">
            <summary>
            SELECT @carrier = a.InfoValue FROM DeliveryInfo a (nolock), Delivery_Pallet b (nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
              AND b.Pallet = @PalletNo
              AND a.InfoType = 'Carrier'
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryNoByShipDateAndValueAndType(System.DateTime,System.String,System.String)">
            <summary>
            1.[PAK] 
            与Product 绑定的Delivery (IMES_FA..Product.DeliveryNo)的ShipDate (IMES_PAK..Delivery.ShipDate)属性值和 Carrier (IMES_PAK..DeliveryInfo.InfoValue，Condition: InfoType = 'Carrier')属性值相同的所有Delivery
            提供SQL参考：
            SELECT DISTINCT a.DeliveryNo
            FROM Delivery AS a INNER JOIN
            DeliveryInfo AS b ON a.DeliveryNo = b.DeliveryNo
            WHERE (a.ShipDate = @ShipDate) AND (b.InfoValue = @infoValue) AND (b.InfoType = @infoType)
            </summary>
            <param name="shipdate"></param>
            <param name="infoValue"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipmentNoByShipDateAndValueAndType(System.DateTime,System.String,System.String)">
            <summary>
            2.[PAK] 
            与Product 绑定的Delivery (IMES_FA..Product.DeliveryNo)的ShipDate (IMES_PAK..Delivery.ShipDate)属性值和 Carrier (IMES_PAK..DeliveryInfo.InfoValue，Condition: InfoType = 'Carrier')属性值相同的所有Delivery的Shipm
            提供SQL参考：
            SELECT DISTINCT a.ShipmentNo
            FROM Delivery AS a INNER JOIN
            DeliveryInfo AS b ON a.DeliveryNo = b.DeliveryNo
            WHERE (a.ShipDate = @ShipDate) AND (b.InfoValue = @infoValue) AND (b.InfoType = @infoType)
            </summary>
            <param name="shipdate"></param>
            <param name="infoValue"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryByValueAndType(System.String,System.String)">
            <summary>
            3. [PAK] 
            提供SQL参考：
            SELECT * FROM Delivery AS a INNER JOIN
            DeliveryInfo AS b ON a.DeliveryNo = b.DeliveryNo
            WHERE (b.InfoValue = @infoValue) AND (b.InfoType = @infoType)
            </summary>
            <param name="infoValue"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryByModelInfoName(System.String,System.String,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryByVendorCT(System.String,System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistShipBoxDet(System.String,System.String)">
            <summary>
            在ShipBoxDet中已经存在相同的DN/Pallet对应的记录时
            </summary>
            <param name="dn"></param>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.AddPoDataEdiInfo(IMES.DataModel.PoDataEdiInfo)">
            <summary>
            (1).在PoData_EDI中增加记录
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.AddPoPltEdiInfo(IMES.DataModel.PoPltEdiInfo)">
            <summary>
            (2).在PoPlt_EDI中增加记录
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateUdtForPoDataEdi(System.String)">
            <summary>
            (3).更新PoData_EDI中指定DeliveryNo记录的Udt
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistPoDataEdi(System.String)">
            <summary>
            判断在PoData_EDI中是否已存在指定DN的记录
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistShipBoxDetExceptPlt(System.String,System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateShipBoxDetForClearSnoid(System.String,System.String)">
            <summary>
            UPDATE ShipBoxDet SET SnoId='',Udt=GETDATE() WHERE DeliveryNo=@dn and SnoId=@id
            </summary>
            <param name="snoId"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistShipBoxDet(System.String,System.String,System.String)">
            <summary>
            使用DeliveryNo=@dn and PLT=@plt and SnoId=@id 查询ShipBoxDet表
            </summary>
            <param name="dn"></param>
            <param name="pltExcept"></param>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipBoxDetList(System.String,System.String,System.String)">
            <summary>
            使用DeliveryNo=@dn and PLT=@plt and SnoId=@id 查询ShipBoxDet表
            </summary>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateShipBoxDetForSetSnoId(System.String,System.String,System.String,System.String)">
            <summary>
            Update ShipBoxDet 记录结合Product 信息
            Condition: DeliveryNo=@dn and PLT=@plt and BoxId=@BoxId
            SET：SnoId=@id,Udt=GETDATE()
            </summary>
            <param name="snoid"></param>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="boxId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipBoxDetList(System.String,System.String)">
            <summary>
            i. 使用DeliveryNo=@dn and SnoId='' 查询ShipBoxDet 表，按照PLT, BoxId 升序排序，
            </summary>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetAndUpdateShipBoxDet(System.String,System.String,System.String)">
             <summary>
             抓第一筆BoxId 分配給ProductID
             update top (1) ShipBoxDet with (rowlock, readpast)
            set SnoId=@snoId, Editor=@snoId+Editor,
                Udt =GETDATE() 
            output DELETED.BoxId
            where DeliveryNo= @dn and
                  PLT=@Plt  and
                  SnoId=''
             </summary>
             <param name="dn"></param>
             <param name="plt"></param>
             <param name="snoId"></param>
             <returns>BoxId </returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.RollBackAssignBoxId(System.String)">
            <summary>
              Rollback before assign boxid, update 
              update ShipBoxDet set SnoId='', Editor=replace(Editor,@snoid,''),Udt=getdate()
              where Editor like @snoid+%
            </summary>
            <param name="snoId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateAssignBoxIdEditor(System.String,System.String,System.String)">
            <summary>
             succeed assign Boxid ,then change editor to original 
             Update ShipBoxDet set Editor=replace(Editor,@snoid,''),Udt=getdate()
             where DeliveryNo=@dn and SnoId=@snoid
            </summary>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="snoId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByCdtAboveAndStatusesAndModel(System.DateTime,System.String[],System.String)">
            <summary>
            a. 查找Delivery 创建时间（IMES_PAK..Delivery.ShipDate）大于两天前的，状态为（IMES_PAK..Delivery.Status）'00' 的，Model（IMES_PAK..Delivery.Model） 与当前Product Model 相同的Deliveries
            </summary>
            <param name="beginCdt"></param>
            <param name="statuses"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfBoundDeliveryByCdtAboveAndStatusesAndModel(System.DateTime,System.String[],System.String)">
            <summary>
            b.查找与上述Deliveries 已经结合了Product 的Deliveries数量（可以查询IMES_FA..Product表）
            </summary>
            <param name="beginCdt"></param>
            <param name="statuses"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByShipmentAndShipDateInNearlyDays(System.String,System.Int32)">
            <summary>
            2.使用IMES_PAK..Delivery.DeliveryNo = @Shipment or IMES_PAK..Delivery.ShipmentNo = 以@Shipment 为条件查询IMES_PAK..Delivery 表，
            取得ShipDate > convert(char(10),GETDATE()-@day,111) 的记录的@Delivery (IMES_PAK..Delivery.DeliveryNo)
            </summary>
            <param name="shipmentNo"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.IsCombinedPallet(System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfPalletWithTheSameShipmentNoPrefix(System.String)">
            <summary>
            SELECT @icnt = COUNT(Distinct Pallet) FROM Delivery_Pallet nolock
            WHERE LEFT(ShipmentNo, 10) IN (SELECT DISTINCT LEFT(ShipmentNo, 10) FROM Delivery_Pallet WHERE PalletNo = @Pallet)
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfDeliveryNoWithTheSameDeliveryNoPrefix(System.String)">
            <summary>
            如果Pallet No 不以'BA' 为前缀时，
            取Delivery数量（注意这里的Delivery 指的是Delivery 前10 位，不包括后6 为的Item No）
            参考方法：
            SELECT @icnt = COUNT(DISTINCT LEFT(DeliveryNo, 10)) FROM Delivery nolock
            WHERE DeliveryNo LIKE LEFT(@DeliveryNo, 10) + '%'
            
            LD: 从SQL上看,这个的结果就只有0和1这两种可能.
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfPalletOfDeliveryWithInfoTypeAndInfoValue(System.String,System.String)">
            <summary>
            如果Pallet No （From UI）以'BA' 为前缀时，取Pallet数量
            参考方法：
            SELECT @icnt = COUNT(DISTINCT a.PalletNo) FROM Delivery_Pallet a (nolock), DeliveryInfo b (nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
             AND b.InfoType = 'Consolidated'
             AND b.InfoValue = @Consolidated
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipmentNoListWithSimilarShipmentNo(System.String)">
            <summary>
            SELECT ShipmentNo FROM Delivery_Pallet 
             WHERE ShipmentNo LIKE LEFT(@Shipment, 10) + '%' or ShipmentNo = @Shipment
            </summary>
            <param name="shipmentNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDistinctPalletNoAndDeliveryQtyWithSimilarShipmentNo(System.String)">
            <summary>
            SELECT DISTINCT PalletNo, DeliveryQty FROM Delivery_Pallet 
             WHERE ShipmentNo LIKE LEFT(@Shipment, 10) + '%' or ShipmentNo = @Shipment
            </summary>
            <param name="shipmentNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipmentNoListOfDeliveryWithInfoTypeAndInfoValue(System.String,System.String)">
            <summary>
            SELECT DISTINCT a.ShipmentNo FROM Delivery a(nolock), DeliveryInfo b(nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
             b.InfoType = 'Consolidated'
             b.InfoValue = @Consolidated
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetShipmentNoListByPalletNoAndShipmentNo(System.String,System.String[])">
            <summary>
            SELECT DISTINCT ShipmentNo FROM Delivery_Pallet nolock
            WHERE PalletNo = @Pallet and ShipmentNo not in (SELECT DeliveryNo FROM #DN)
            </summary>
            <param name="pltNo"></param>
            <param name="shipmentNos"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDistinctPalletNoAndDeliveryQtyByDeliveryNos(System.String[])">
            <summary>
            SELECT DISTINCT a.PalletNo, a.DeliveryQty FROM Delivery_Pallet a (nolock), #DN b (nolock)
             WHERE LEFT(a.DeliveryNo, 10) = LEFT(b.DeliveryNo, 10)
            </summary>
            <param name="deliveryNos"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDistinctPalletNoAndDeliveryQtyByShipmentNos(System.String[])">
            <summary>
            SELECT DISTINCT a.PalletNo, a.DeliveryQty FROM Delivery_Pallet a (nolock), #DN b (nolock)
             WHERE a.ShipmentNo = b.DeliveryNo
            </summary>
            <param name="shipmentNos"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetExistedPalletNoList(System.String[])">
            <summary>
            
            
            取得Pallet 数量
            参考方法：
            SELECT @rcnt=COUNT(PLT) FROM #plt 
            WHERE PLT not in (SELECT DISTINCT a.PLT FROM #plt a, Pallet b (nolock)
             WHERE a.PLT = b.PalletNo
              and LEFT(a.PLT, 2) not in ('BA', 'NA')
            </summary>
            <param name="pltNos"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfProductOfDeliveryWithInfoTypeAndInfoValue(System.String,System.String)">
            <summary>
            SELECT @rcnt2 = COUNT(a.ProductID) FROM IMES_FA..Product a nolock, b.DeliveryInfo b nolock
            WHERE a.DeliveryNo = b.DeliveryNo
             b.InfoType = 'Consolidated'
             b.InfoValue = @Consolidated 
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfProductWithTheSameShipmentNo(System.String)">
            <summary>
            SELECT @rcnt2 = COUNT(a.ProductID) FROM IMES_FA..Product a(nolock), Delivery_Pallet b(nolock)
            WHERE a.PalletNo = b.PalletNo
             AND b.ShipmentNo IN (SELECT ShipmentNo FROM Delivery_Pallet WHERE PalletNo = @Pallet)
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.CheckExistDeliveryByShipmentPrefixAndModelPrefix(System.String,System.String)">
            <summary>
            EXISTS(SELECT * FROM Delivery WHERE DeliveryNo LIKE LEFT(@Shipment, 10) + '%' and Model LIKE 'PO%')
            </summary>
            <param name="shipment"></param>
            <param name="modelPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetModelsByShipmentPrefixAndModelPrefix(System.String,System.String)">
            <summary>
            SELECT  @dockingModel = Model FROM Delivery WHERE DeliveryNo LIKE LEFT(@Shipment, 10) + '%' and Model LIKE 'PO%'
            </summary>
            <param name="shipment"></param>
            <param name="modelPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSumQtyOfDeliveryByShipmentPrefixAndModelPrefix(System.String,System.String)">
            <summary>
            SELECT @dockingQty = SUM(Qty) FROM Delivery WHERE DeliveryNo LIKE LEFT(@Shipment, 10) + '%' and Model LIKE 'PO%'
            </summary>
            <param name="shipment"></param>
            <param name="modelPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDelivery(System.String)">
            <summary>
            select * from delivery where deliveryno = deliverty_no
            </summary>
            <param name="deliverty_no"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetBOLQty(System.String)">
            <summary>
            SELECT SUM(a.Qty) as [BOLQTY] FROM IMES_PAK..Delivery a (nolock), IMES_PAK..DeliveryInfo b (nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
            and b.InfoValue LIKE '%' + RTRIM(@BOL) + '%'
            </summary>
            <param name="bol"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNAndQtyByDummyPalletNo(System.String)">
            <summary>
            SELECT b.DeliveryNo as DN, COUNT(a.SnoId) as DNQty
            FROM Dummy_ShipDet a (nolock), IMES_FA..Product b(nolock)
            WHERE a.SnoId = b.ProductID 
            AND a.PLT = @DummyPalletNo
            GROUP BY b.DeliveryNo
            </summary>
            <param name="dummyPalletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCustSnListByDummyPalletNo(System.String)">
            <summary>
            SELECT b.CUSTSN as [Customer S/N]
            FROM Dummy_ShipDet a (nolock), IMES_FA..Product b(nolock)
            WHERE a.SnoId = b.ProductID 
            AND a.PLT = @DummyPalletNo
            ORDER BY b.CUSTSN
            </summary>
            <param name="dummyPalletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertDummyShipDetInfo(IMES.DataModel.DummyShipDetInfo)">
            <summary>
            保存IMES_PAK..Dummy_ShipDet表
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDummyShipDetInfoList(IMES.DataModel.DummyShipDetInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDummyShipDetInfo(IMES.DataModel.DummyShipDetInfo,IMES.DataModel.DummyShipDetInfo)">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletNoListByShipmentNo(System.String)">
            <summary>
            1、通过DN获取关联的Pallets
            </summary>
            <param name="shipmentNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPalletNoListByDeliveryNo(System.String)">
            <summary>
            2、通过shipmentNo获取关联的Pallets
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByInfoValue(System.String)">
            <summary>
            查找含有指定InfoValue的DN的列表.
            </summary>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteShipBoxDetByShipmentNo(System.String)">
            <summary>
            delete from ShipBoxDet where DeliveryNo in (select DeliveryNo from Delivery where ShipmentNo='')
            </summary>
            <param name="shipment"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateShipBoxDetInfo(IMES.DataModel.ShipBoxDetInfo,IMES.DataModel.ShipBoxDetInfo)">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliveryForStatusChange(System.String[],System.String)">
            <summary>
            update Delivery set [Status]='9'+substring([Status],2,1) where DeliveryNo in (输入列表)
            </summary>
            <param name="dns"></param>
            <param name="newTitleChar"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateMultiDeliveryForStatusChange(System.String[],System.String)">
            <summary>
            update Delivery set [Status]=@status where DeliveryNo in (输入列表)
            </summary>
            <param name="dns"></param>
            <param name="status"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPakDotPakComnInKeyValue(System.String)">
            <summary>
            select 字段名 as InfoType,字段值 as InfoValue from [PAK.PAKComn] where InternalID='P19DA30A00000003' 按属性名排序
            TOP 1 
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetPakDotPakPaltnoInfoList(System.String)">
            <summary>
            select PALLET_ID as PalletNo,PALLET_UNIT_QTY as DeliveryQty,'' as UCC from [PAK.PAKPaltno] where InternalID='输入dn'
            </summary>
            <param name="internalId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByDNListFromPakDotPakComn(System.Collections.Generic.IList{System.String})">
            <summary>
            consol_invoice对应SHipmentID
            po_num对应PoNo
            model对应ModelName
            actual_shipdate对应ShipDate_Str
            Qty = select sum(PALLET_UNIT_QTY) from [PAK.PAKPaltno] where InternalID='对应dn'
            </summary>
            <param name="dnList"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListByConditionFromPakDotPakComn(IMES.DataModel.DNQueryCondition,System.Int32@)">
            <summary>
            对于输入条件，dn需要判断长度，如果是16位则需要精确匹配，如果是10位，则模糊匹配（前10位）其他条件需要精确匹配
            
            DNInfo精确匹配的方式是 等于 表中的 任何字段的值 
            
            参数类型：DNQueryCondition（含DNInfo的查询条件）
            TOP 1000
            </summary>
            <param name="MyCondition"></param>
            <param name="totalLength"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateSnoCtrlBoxIdInfo(IMES.DataModel.SnoCtrlBoxIdInfo,IMES.DataModel.SnoCtrlBoxIdInfo)">
            <summary>
            UPDATE SnoCtrl_BoxId SET valid=@editor WHERE Cust=@alarm AND valid='1'
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetBoxIdListFromSnoCtrlBoxId(IMES.DataModel.SnoCtrlBoxIdInfo)">
            <summary>
            SELECT @BoxId=RTRIM(BoxId) FROM SnoCtrl_BoxId WHERE Cust=@alarm AND valid=@editor
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteSnoCtrlBoxIdInfo(IMES.DataModel.SnoCtrlBoxIdInfo)">
            <summary>
            DELETE FROM SnoCtrl_BoxId WHERE BoxId=@BoxId
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByModel(System.String,System.String)">
            <summary>
            SELECT * 
            FROM Delivery (NOLOCK) 
            WHERE Status ='00' 
                And Model = @Model
                And ShipDate >= CONVERT(char(10),GETDATE() - 5,111) 
            ORDER BY ShipDate
            </summary>
            <param name="model"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByModelAndStatus(System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDNListBy10BitPrefix(System.String)">
            <summary>
            10 位的DN 对应的是Delivery.DeliveryNo 的前10位，需要将其对应的16 位DN 找到
            SELECT [DeliveryNo] FROM [IMES2012HP_FORRD].[dbo].[Delivery] where SUBSTRING(DeliveryNo,1,10)=@input 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDnCountBySP(System.String)">
            <summary>
            从整机数据库中使用Consolidate No 检索DeliveryInfo 表，取得相关记录，统计这些记录共有多少个不同的LEFT(DeliveryNo，10)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByModelPrefix(System.String,System.String,System.Int32,System.String)">
            <summary>
            SELECT TOP 1 @Delivery = DeliveryNo
                FROM Delivery
                WHERE PoNo = @FactoryPo
                   AND CONVERT(char(10), ShipDate, 111)>=CONVERT(char(10),GETDATE()-3,111) 
                   AND LEFT(Model, 2) = 'PC' 
                   AND LEN(Model)=12 
                   AND Status = '00'
            ORDER BY ShipDate, Qty, DeliveryNo
            </summary>
            <param name="factoryPo"></param>
            <param name="modelPrefix"></param>
            <param name="modelLength"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByModel(System.String,System.String,System.Int32,System.String)">
            <summary>
            SELECT * FROM Delivery NOLOCK 
            WHERE Model = @Model		AND LEFT(Model, 2) = 'PC'
                        AND CONVERT(char(10), ShipDate, 111)>=CONVERT(char(10),GETDATE()-3,111)
                        AND LEN(Model) = 12
                        AND Status = '00' ordery by shipdate,DeliveryNo,
            </summary>
            <param name="model"></param>
            <param name="modelPrefix"></param>
            <param name="modelLength"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryListByShipDateAndModelAndStatus(System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertDeliveryAttrLogInfo(IMES.DataModel.DeliveryAttrLogInfo)">
            <summary>
            INSERT INTO [DeliveryAttrLog]([DeliveryNo],[ShipmentNo],[AttrName],[AttrOldValue],[AttrNewValue],[Descr],[Editor],[Cdt])
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliveryInfoValueByInfoTypeAndInfoValuePrefix(System.String,System.String,System.String,System.String)">
            <summary>
            UPDATE DeliveryInfo SET InfoValue=@NewConsolidated, Editor=@editor
            WHERE InfoType = 'Consolidated' 
            AND LEFT(InfoValue, 10) = @Consolidate
            </summary>
            <param name="newConsolidated"></param>
            <param name="infoType"></param>
            <param name="consolidate"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertDeliveryAttrLog(System.String,System.String,System.String)">
            <summary>
            INSERT INTO [DeliveryAttrLog]([DeliveryNo],[ShipmentNo],[AttrName],[AttrOldValue],[AttrNewValue],[Descr],[Editor],[Cdt])
            SELECT a.DeliveryNo, a.ShipmentNo, 'Consolidated', b.InfoValue, @NewConsolidated, 'CQ', @Editor, GETDATE()
            FROM Delivery a (NOLOCK), DeliveryInfo b (NOLOCK)
            WHERE a.DeliveryNo = b.DeliveryNo
            AND b.InfoType = 'Consolidated'
            AND LEFT(InfoValue, 10) = @Consolidate
            </summary>
            <param name="newConsolidated"></param>
            <param name="editor"></param>
            <param name="consolidate"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfDeliveryNoPrefixForDoubleDeliveryInfoPairs(System.String,System.String,System.String,System.String)">
            <summary>
            SELECT @COUNT=COUNT(DISTINCT LEFT(DeliveryNo,10)) 
            FROM DeliveryInfo (NOLOCK) 
            WHERE (InfoType = 'Consolidated' AND InfoValue = RTRIM(@consolidate))
            OR (InfoType = 'RedShipment' AND InfoValue = RTRIM(@consolidate))
            </summary>
            <param name="infoType1"></param>
            <param name="infoValue1"></param>
            <param name="infoType2"></param>
            <param name="infoValue2"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateDeliveryForStatusChange(System.String,System.String)">
            <summary>
            UPDATE Delivery SET Status = '00', Editor = @Editor, Udt = GETDATE()
            WHERE DeliveryNo IN (SELECT DISTINCT DeliveryNo FROM Product NOLOCK WHERE CartonSN = @CartonNo) 
            </summary>
            <param name="editor"></param>
            <param name="cartonNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.InsertDeliveryLog(IMES.FisObject.PAK.DN.DeliveryLog)">
            <summary>
            Insert IMES_PAK..[DeliveryLog] – 记录Delivery
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfPonoFromDelivery(IMES.FisObject.PAK.DN.Delivery)">
            <summary>
            select count（DISTINCT pono）from Delivery where DeliveryNo = @DeliveryNo
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfModelFromDelivery(IMES.FisObject.PAK.DN.Delivery)">
            <summary>
            select count（DISTINCT model）from Delivery where DeliveryNo = @DeliveryNo
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryInfoFromDeliveryByPalletNo(System.String,IMES.FisObject.PAK.DN.DeliveryInfo)">
            <summary>
            select Infovalue from DeliveryInfo where DeliveryNo IN (SELECT DeliveryNo FROM Product NOLOCK WHERE PalletNo = @PalletNo) and InfoType='ShiptoId'
            </summary>
            <param name="palletNo"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfPonoFromDeliveryByPalletNo(System.String,IMES.FisObject.PAK.DN.Delivery)">
            <summary>
            select count（DISTINCT pono）from Delivery where DeliveryNo IN (SELECT DeliveryNo FROM Product NOLOCK WHERE PalletNo = @PalletNo) 
            </summary>
            <param name="palletNo"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetCountOfModelFromDeliveryByPalletNo(System.String,IMES.FisObject.PAK.DN.Delivery)">
            <summary>
            select count（DISTINCT model）from Delivery where DeliveryNo IN (SELECT DeliveryNo FROM Product NOLOCK WHERE PalletNo = @PalletNo)
            </summary>
            <param name="palletNo"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryList">
            <summary>
            参考sql如下：
            select DeliveryNo from Delivery
            按DeliveryNo 列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryInfoList">
            <summary>
            参考sql如下：
            select Distinct InfoType from DeliveryInfo
            按InfoType列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetKittingLocationList">
            <summary>
            返回值和参数说明：
            返回值为KittingLocationInfo为泛型参数的列表;
            SQL语句：
            SELECT [TagID]      
                  ,[GateWayIP]    
                  ,[RackID]
                  ,[TagDescr]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
              FROM [IMES_PAK].[dbo].[Kitting_Location]
              ORDER BY [TagID], [TagDescr]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetKittingLocationList(System.String)">
            <summary>
            返回值和参数说明：
            返回值为KittingLocationInfo为泛型参数的列表;
            参数为字符串类型,对应表中的TagID字段.
            SQL语句：
            SELECT [TagID]      
                  ,[GateWayIP]    
                  ,[RackID]
                  ,[TagDescr]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
              FROM [IMES_PAK].[dbo].[Kitting_Location]
              WHERE [TagID]=@TagID
              ORDER BY [TagID], [TagDescr]
            </summary>
            <param name="tagID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.UpdateKittingLocation(IMES.DataModel.KittingLocationInfo)">
            <summary>
            返回值和参数说明：
            参数为两个字符串,分别对应数据库表中的[TagDescr]和[Editor]字段
            SQL语句：
            UPDATE [IMES_PAK].[dbo].[Kitting_Location]
               SET [TagDescr] = @TagDescr
                  ,[Editor] = @Editor
                  ,[Udt] = GETDATE()
             WHERE [GateWayIP]=@GateWayIP
                 AND [RackID]=@RackID
            </summary>
            <param name="tagDescr"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDn(System.String)">
            <summary>
            调用DeleteDeliveryByDn,DeleteDeliveryInfoByDn,DeleteDeliveryPalletByDn三个函数
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryByDn(System.String)">
            <summary>
            返回值和参数说明：
            /// SQL语句：
            delete from [IMES_PAK].[dbo].[Delivery] Where DeliveryNo=@dn
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryInfoByDn(System.String)">
            <summary>
            返回值和参数说明：
            /// SQL语句：
            delete from [IMES_PAK].[dbo].[DeliveryInfo] Where DeliveryNo=@dn
            </summary>
            <param name="dn"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryAttrsByDn(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryAttrLogByDn(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePalletAttrLog(System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryAttrsByShipmentNo(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryAttrLogByShipmentNo(System.String)" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeleteDeliveryPalletByDn(System.String)">
            <summary>
            返回值和参数说明：
            /// SQL语句：
            delete from [IMES_PAK].[dbo].[Delivery_Pallet] Where DeliveryNo=@dn
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePalletByPalletNo(System.String)">
            <summary>
            "删除Pallet表中一条记录数据
            </summary>
            <param name="palletNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryNoPrefixByValueAndType(System.String,System.String)">
            <summary>
            获取DN List: select distinct LEFT(DeliveryNo, 10) from DeliveryInfo nolock where InfoType = 'BOL' AND InfoValue = @DN
            </summary>
            <param name="infoValue"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetDeliveryInfoList(IMES.FisObject.PAK.DN.DeliveryInfo)">
            <summary>
            select * from DeliveryInfo nolock where InfoType = 'BOL' AND InfoValue = @DN
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePoDataEdi(System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.DN.IDeliveryRepository.DeletePoPltEdi(System.Collections.Generic.IList{System.String})" -->
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.GetSnoCtrlBoxIdSQListByCust(System.String,System.Int32,System.Int32)">
            <summary>
            从SnoCtrl_BoxId_SQ 按照Cust=[BoxId前缀]获取Delivery_Pallet.DeliveryQty条记录，
            就是表中应该有很多条记录的Cust字段是相同的，接口要实现的就是按顺序取出Cust='入参1'的'入参2'条记录
            </summary>
            <param name="cust"></param>
            <param name="rowCount"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.IDeliveryRepository.RemoveDeliveryEx(System.String)">
            <summary>
            sql merge statement
            </summary>
            <param name="deliveryNo"></param>
            <param name="deliveryEx"></param>
        </member>
        <member name="T:IMES.FisObject.PAK.DN.Delivery">
            <summary>
            Delivery类
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.GetProperty(System.String)">
            <summary>
            property name 抓取 property value
            </summary>
            <param name="name">Property Name</param>
            <returns> property value</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.GetExtendedProperty(System.String)">
            <summary>
            获取检查目标对象的扩展属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.SetExtendedProperty(System.String,System.Object,System.String)">
            <summary>
            设置检查目标对象的扩展属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.IsDNFull(System.Int32)">
            <summary>
            判断绑定到DN上的机器是否和Qty相同
            即判断Product表中绑定该Delivery的机器数量与Delivery的Qty相同
            </summary>
            <returns>DN与产品序号是否已全部绑定完毕</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.IsAllDNPalletFull">
            <summary>
            判断是否DN对应的所有Pallet上的机器已刷满
            即Delivery相关所有Delivery_Pallet的Status都为1
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.GetDNPalletQty(System.String)">
            <summary>
            获取DN绑定的Pallet数量
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.UpdateDeliveryPalletStatus(IMES.FisObject.PAK.DN.DeliveryPallet)">
            <summary>
            更新DeliveryPalletStatus
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.Delivery.AddLog(IMES.FisObject.PAK.DN.DeliveryLog)">
            <summary>
            记录Dn过站记录
            </summary>
            <param name="log">Dn过站记录</param>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.DeliveryNo">
            <summary>
            DN序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.ShipmentNo">
            <summary>
            Shipment序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.PoNo">
            <summary>
            PoNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.ModelName">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.ShipDate">
            <summary>
            出货日期
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Qty">
            <summary>
            DN包含的机器数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Udt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.DnPalletList">
            <summary>
            获取Delivery的DeliverPallet列表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.DeliveryLogs">
            <summary>
            获取Dn所有log
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.Delivery.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.COA.COALog">
            <summary>
            COALog业务对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.COASN">
            <summary>
            COA序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.StationID">
            <summary>
            站别
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.LineID">
            <summary>
            产线
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.Tp">
            <summary>
            Tp
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.COA.COALog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.COA.ICOAStatusRepository">
            <summary>
            COAStatus对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.FillCOALogs(IMES.FisObject.PAK.COA.COAStatus)">
            <summary>
            晚加载COALog
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.UpdateCOAMas(IMES.DataModel.COAMasInfo)">
            <summary>
            Update COAMas(更新MSCOA 状态，WC = 'A2')
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertCSNLog(IMES.DataModel.CSNLogInfo)">
            <summary>
            Insert CSNLog(记录CN Card Log，Tp = 'CNCard' ，WC = 'A2'，IsPass = '0') 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.UpdateCSNMas(IMES.DataModel.CSNMasInfo)">
            <summary>
            Update CSNMas(更新MSCOA 状态，WC = 'P1')
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCOAStatusRange(System.String,System.String)">
            <summary>
            get COAStatus range
            </summary>
            <param name="beginNo">begin No</param>
            <param name="endNo">end No</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertCOALog(IMES.FisObject.PAK.COA.COALog)">
            <summary>
            Insert COALog
            </summary>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertCOATransLog(IMES.DataModel.COATransLog)">
            <summary>
            记录入COATrans_Log
            </summary>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetStationOfNewestCOALog(System.String)">
            <summary>
            获取该COA No的最新COALog记录的Station
            </summary>
            <param name="coano"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.UpdateCOAStatus(IMES.FisObject.PAK.COA.COAStatus)">
            <summary>
            update COAStatus by PK.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCSNMasRange(System.String,System.String)">
            <summary>
            get CSNMas collection by range
            </summary>
            <param name="beginNo">begin No</param>
            <param name="endNo">end No</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.SaveTXTIntoTmpTable(System.Collections.Generic.IList{IMES.DataModel.TmpTableInfo})">
            <summary>
            1,保存数据到TmpTable中.(TmpTable（结构基本与COAReceive同，多一个栏位PC）)
            </summary>
            <param name="dataLst"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.RemoveTmpTableItem(System.String)">
            <summary>
            2,清除当前Client端 位于TmpTable表中的记录
            SQL:delete from tmptable where pc =[pc]
            </summary>
            <param name="pc"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetTmpTableItem(System.String)">
            <summary>
            3,查找TmpTable中的数据.
            SQL:select from tmptable where pc=[pc]
            </summary>
            <param name="pc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.SaveItemIntoCOAReceiveTable(System.Collections.Generic.IList{IMES.FisObject.PAK.COA.COAReceive})">
            <summary>
            4,保存记录到COAReceive表中,
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.SaveItemIntoCOAStatusTable(System.Collections.Generic.IList{IMES.FisObject.PAK.COA.COAStatus})">
            <summary>
            为COAReceive表每一COA Range记录BegNo/EndNo范围内的号码创建一个新的COA记录到COAStatus数据表
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetAllCOAReceivingItems">
            <summary>
            查询COAReceive表中所有的记录
            order by BegSN,EndSN
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCoaStatus(System.String)">
            <summary>
            按coa_sn检索IMES_PAK..COAStatus.Status表。
            没有查询到数据，返回null;
            </summary>
            <param name="coa_sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCsnMas(System.String)">
            <summary>
            由csn2得到CSNMas信息。
            </summary>
            <param name="csn2"></param>
            <returns>没有返回null。</returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCOAStatusListByStatusAndIecPn(System.String[],System.String,System.DateTime,System.String)">
            <summary>
            1）若目标状态为“P0”或“D1”，则查找有无与BegNo相同IECPN而Cdt更早且COASN更小的记录存在
            IMES_PAK..COAStatus
            </summary>
            <param name="statuses"></param>
            <param name="iecPn"></param>
            <param name="cdtEnd"></param>
            <param name="coaSnEnd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertCSNMas(IMES.DataModel.CSNMasInfo)">
            <summary>
            添加 CSNMas
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetMaxCSN1FromCSNMas(IMES.DataModel.CSNMasInfo)">
            <summary>
            select MAX CSN1 from CSNMas
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.UpdateCOAReturnInfo(IMES.DataModel.COAReturnInfo,IMES.DataModel.COAReturnInfo)">
            <summary>
            UPDATE COAReturn SET Status = @cause, Editor = @user, Udt = GETDATE() WHERE COASN = @coano
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.GetCOAReturnInfoList(IMES.DataModel.COAReturnInfo,IMES.DataModel.COAReturnInfo)">
            <summary>
            如果该COA No在COAReturn表中存在,但不存在Status为空的记录,则报告错误:"该COA No 已Scrap!"
            </summary>
            <param name="eqCondition"></param>
            <param name="isNullCondition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertEcoareturn(IMES.DataModel.EcoareturnInfo)">
            <summary>
            Insert ECOAReturn
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.COA.ICOAStatusRepository.InsertCOAReturn(IMES.DataModel.COAReturnInfo)">
            <summary>
            INSERT INTO COAReturn (CUSTSN, COASN, OriginalStatus, Status, Line, Editor, Cdt, Udt)
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:IMES.FisObject.PAK.WeightLog.WeightLog">
            <summary>
            WeightLog业务对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.ID">
            <summary>
            自增ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.SN">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Weight">
            <summary>
            重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Line">
            <summary>
            产线
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Station">
            <summary>
            站别
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.WeightLog.WeightLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.IProductRepository">
            <summary>
            用于访问Process对象的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetTop1SNByCarton(System.String)">
            <summary>
            用于Carton称重时，任意取一个SN来创建Product对象，进行卡站
            </summary>
            <param name="cartonNumber"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMaxProductId(System.String)">
            <summary>
            根据前缀获取最大ProductId
            </summary>
            <param name="preSeqStr">前缀</param>
            <returns>最大ProductId</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.SetMaxProductId(System.String,IMES.FisObject.FA.Product.IProduct)">
            <summary>
            更新最大ProductId (Product)
            </summary>
            <param name="smtMO">MO</param>
            <param name="Product">最大Product</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByMBSn(System.String)">
            <summary>
            获取与指定mb绑定的Product
            </summary>
            <param name="mbSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductListStatus(IMES.FisObject.FA.Product.ProductStatus,System.Collections.Generic.IList{System.String})">
            <summary>
            更新一组Product的过站状态
            </summary>
            <param name="status"></param>
            <param name="ProductIDList"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BindDN(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            更新一组Product的DN
            </summary>
            <param name="dn"></param>
            <param name="productIDList"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BindDN(System.String,System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            更新一组Product的DN
            </summary>
            <param name="dn"></param>
            <param name="productIDList"></param>
            <param name="dnQty"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckResultOfBindDN_OnTrans(IMES.Infrastructure.Util.InvokeBody,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="isThrow"></param>
            <param name="dn"></param>
            <param name="dnQty"></param>
            <returns>是否满了</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BindPallet(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            更新一组Product的Pallet
            </summary>
            <param name="Pallet"></param>
            <param name="ProductIDList"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BindCarton(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            更新一组Product的CartonSN
            </summary>
            <param name="CartonSN"></param>
            <param name="ProductIDList"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductListLog(System.Collections.Generic.IList{IMES.FisObject.FA.Product.ProductLog})">
            <summary>
            记录一组Product的ProductLog
            </summary>
            <param name="NewLog"></param>
            <param name="ProductIDList"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillProductParts(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Product Parts
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillQCStatuses(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载QCStatus
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillTestLogs(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载TestLog
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillRepairs(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Repair
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillStatus(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Status
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillModelObj(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Model对象
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillLogs(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Log
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillChangeLogs(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载ChangeLog
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillProductInfoes(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载ProductInfo
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillProductAttributes(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            Lazy load of product attributes
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillProductAttributeLogs(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            Lazy load of product attribute logs
            </summary>
            <param name="product"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillRepairDefectInfo(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            晚加载RepairDefectInfo
            </summary>
            <param name="rep"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillTestLogDefectInfo(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            晚加载TestLogDefectInfo
            </summary>
            <param name="testLog"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FillPizza(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            晚加载Pizza
            </summary>
            <param name="pd"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProdIdRangeList(System.String)">
            <summary>
            根据MO获得Product Id Range列表
            </summary>
            <param name="MOId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProdRepairLogList(System.String)">
            <summary>
            根据Product Id获得Repair信息
            </summary>
            <param name="ProdId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfo(System.String)">
            <summary>
            获得Product信息
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoByCustomSn(System.String)">
            <summary>
            根据customerSn获得Product信息
            </summary>
            <param name="customerSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductStatusInfo(System.String)">
            <summary>
            根据Product Id获得ProductStatus
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IfBindPCB(System.String)">
            <summary>
            Product表中能否找到pcb的记录
            </summary>
            <param name="pcbid"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListByKeyAndValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoList(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            select * from ProductInfo nolock where ProductID = @ProductID and InfoType in ('SN','P/N', 'Key', 'hash')
            </summary>
            <param name="proid"></param>
            <param name="itemTypes"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckKitting(System.String,System.String,System.String)">
            <summary>
            在WipBuffer表中是否存在Code = @DM+’-’+@family 的纪录
            @family =Model.FamilyID，若有空格，只取空格前字串
            @DM= ModelInfo. Value where Model=(model) and Name= DM2(二楼)/DM(三楼)
            </summary>
            <param name="family"></param>
            <param name="model"></param>
            <param name="floor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsUsedCvsn(System.String)">
            <summary>
            检查输入的cpuVendorSn是否已经和product绑定
            用于CombineproductCPU之前检查CPU是否已与其他product绑定;
            检查product表的CVSN栏位如果等于输入的cpuVendorSn存在返回和它绑定的productSNO
            不存在返回""
            select top 1 ProductID from Product where CVSN=@CVSN
            </summary>
            <param name="cpuVendorSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartsByPartNoAndValue(System.String,System.String)">
            <summary>
            从Product_Part表根据PartNo和Value取多条记录
            </summary>
            <param name="partNo"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartsByBomNodeTypeAndPartSn(System.String,System.String)">
            <summary>
            取得所输入PR SN（条件：Product_Part.BomNodeType=’PS’ and Product_Part.PartSn=@prsn）绑定的Product的ID（Product_Part.ProductID)
            </summary>
            <param name="bomNodeType"></param>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BindKitting(System.String,System.String,System.String,System.String)">
            <summary>
            调用SP: kittingBind
            </summary>
            <param name="mo"></param>
            <param name="proid"></param>
            <param name="boxid"></param>
            <param name="pdline"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetModelPassQty(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            for 030 Query
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductIDListByCarton(System.String)">
            <summary>
            根据Carton号码获取所有属于改Carton的ProductID
            </summary>
            <param name="cartonSN"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateCartonWeightByCarton(System.String,System.Decimal)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product的CartonWeight
            </summary>
            <param name="cartonSN"></param>
            <param name="cartonWeight"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductStatusByCarton(System.String,IMES.FisObject.FA.Product.ProductStatus)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product状态
            </summary>
            <param name="cartonSN"></param>
            <param name="newStatus"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductLogByCarton(System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            根据Carton号码记录所有属于该Carton的Product的过站Log
            </summary>
            <param name="cartonSN"></param>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductLogByDeliveryNo(System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            根据DeliveryNo号码记录所有属于该DeliveryNo的Product的过站Log
            </summary>
            <param name="dn"></param>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByCustomSn(System.String)">
            <summary>
            根据Customer SN获得Product对象
            </summary>
            <param name="customerSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllCartonWeightByPallet(System.String)">
            <summary>
            根据PalletNo获取所有属于该Pallet的CartonSN的重量之和
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCombinedQtyByDN(System.String)">
            <summary>
            根据deliveryNo获取所有属于该deliveryNo的Product的数量
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCombinedPalletQtyByDN(System.String)">
            <summary>
            根据deliveryNo获取所有属于该deliveryNo結合棧板的Product的数量
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByPalletNo(System.String)">
            <summary>
            根据palletNo获取所有属于该palletNo的Product
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductIdsByRange(System.String,System.String)">
            <summary>
            根据起止号码获得ProductID的列表
            </summary>
            <param name="begNo"></param>
            <param name="endNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductFromProductStatus(System.String)">
            <summary>
            select * from ProductStatus a join Product b on a.ProductId= b.ProductId where b.MO=MO
            </summary>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindOneProductWithProductIDOrCustSN(System.String)">
            <summary>
            1.获得Product对象
            </summary>
            <param name="productIDOrCustSN">输入的是ProductID 或者CustSN</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindOneProductWithProductIDOrCustSNOrCarton(System.String)">
            <summary>
            2.获得Product对象
            </summary>
            <param name="productIDOrCustSNOrCarton">输入的是ProductID 或者CustSN或者Carton</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindOneProductWithProductIDOrCustSNOrPallet(System.String)">
            <summary>
            3.获得Product对象
            </summary>
            <param name="productIDOrCustSNOrPallet">输入的是ProductID 或者CustSN或者Pallet</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByPCBID(System.String)">
            <summary>
            根據pcbID獲取與之綁定的Product列表
            </summary>
            <param name="pcbID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByPizzaID(System.String)">
            <summary>
            获取与指定pizzaID绑定的Product
            </summary>
            <param name="pizzaID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByDnPallet(System.String,System.String)">
            <summary>
            获取属于该DN,Pallet的所有Product
            要求Product表的Delivery，Pallet分别等于输入的dn，pallet
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControlByTypeAndCode(System.String,System.String)">
            <summary>
            根据Type和Code获得RunInTimeControl
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetTheNewestTime(System.String)">
            <summary>
            ProductLog中该ProductLog 最后一条Log 的时间
            </summary>
            <param name="prodid"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ReworkReject(System.String,System.String,IMES.FisObject.Common.Station.StationStatus)">
            <summary>
            ReworkRejectStation中是否存在指定条件的数据
            </summary>
            <param name="customer">customer</param>
            <param name="station">station</param>
            <param name="status">status</param>
            <returns>是否存在指定条件的数据</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CopyProductToRework(System.String,System.String)">
            <summary>
            1.Copy ProductStatus and Product and Product_Part and ProductInfo资料至Rework_ProductStatus, Rework_Product, Rework_Product_Part, Rework_ProductInfo
            条件:1).Rework_xxx 表中的ReworkCode = @code,
                 2).ProductID=@productID
            </summary>
            <param name="productId"></param>
            <param name="reworkCode"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveProductInfosByType(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            delete ProductInfo where ProductID=@proid and InfoType in @itemtypes
            </summary>
            <param name="proid"></param>
            <param name="itemTypes"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveProductPartsByPnAndType(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            delete IMES_FA..Product_Part where PartNo in
            ( select PartNo from IMES_GetData..Part where 
              PartNo in 
                      (select PartNo from IMES_FA..Product_Part where ProductID=@proid) 
              and 
              PartType in 
                      (select PartType from PartCheck where Customer=@customer and PartType in ReleaseType范围)
            )
            </summary>
            <param name="proid"></param>
            <param name="customer"></param>
            <param name="partTypes"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ClearFieldsOfProductById(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            update Product set @itemtypes='' where ProductID=@proid
            </summary>
            <param name="proid"></param>
            <param name="fieldNames"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetKittingCodeList">
            <summary>
            跟其他的DropDownList一样，要求有id和descr
            SELECT '' as Code
            UNION
            SELECT DISTINCT RTRIM(Code) as Code
                FROM KittingCode 
                WHERE [Type] = 'Kitting' 
                ORDER BY Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferInfoListByKittingCode(System.String)">
            <summary>
            返回结构List
            参数@Code
            SELECT RTRIM(b.Code) as Code, RTRIM(b.PartNo) as [Part No],
                   RTRIM(b.Tp) as [Type], CONVERT(int, b.LightNo) as [Light No],
                   '' as Scan
                FROM KittingCode a, WipBuffer b
                WHERE a.[Type] = 'Kitting'
                   AND a.Code = b.Code
                   AND b.Code = @Code
                ORDER BY [Light No], [Part No], [Type]
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfKittingCodeByCode(System.String)">
            <summary>
            如何判断查询得到的Kitting Code 是否在Kitting 表中存在
            参数@Code 
            SELECT count(*) FROM IMES_FA..KittingCode WHERE Code = @Code AND Type = 'Kitting'
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferInfoListByKittingCodeAndModel(System.String,System.String)">
            <summary>
            Get 料位信息 By [Code] and [Model]，返回结构List，跟2步骤结构一样
            参数@Model，@Code
            SELECT DISTINCT RTRIM(b.Code) as Code, RTRIM(b.PartNo) as [Part No],
                   RTRIM(b.Tp) as [Type], CONVERT(int, b.LightNo) as [Light No],
                   '' as Scan
                FROM IMES_GetData..MoBOM a, IMES_FA..WipBuffer b
                WHERE a.Deviation = 1
                   AND a.PartNo = b.PartNo
                   AND b.Code = @Code
                   AND b.Tp = 'Kitting'
                   AND MO IN (SELECT MO FROM IMES_GetData..MO WHERE Model = @Model)
                ORDER BY [Light No], [Part No], [Type]
            </summary>
            <param name="code"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetBorrowLogByStatus(System.String)">
            <summary>
            SELECT Sno, Model, Borrower, Lender, Returner, Accepter, Status, Bdate, Rdate 
                FROM IMES_FA..BorrowLog
                WHERE Status = @status
                ORDER BY Model, Sno, Rdate DESC
                Status为空取所有status的数据
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetBorrowLogBySno(System.String)">
            <summary>
            SELECT * FROM IMES_FA..BorrowLog WHERE Sno = @ProductID
            </summary>
            <param name="sno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddBorrowLog(IMES.DataModel.BorrowLog)">
            <summary>
            Insert IMES_FA..BorrowLog
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.UpdateBorrowLog(IMES.DataModel.BorrowLog)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSFGCustomizingSiteCode(System.String,System.String)">
            <summary>
            SELECT @SFGCustomizingSiteCode = ISNULL(InfoValue, '')
                FROM SFGSite
                WHERE InfoType = 'PN' AND InfoValue = SUBSTRING(@CustPN, 6, 1)
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.QuerySmallPartsUploadInfo">
            <summary>
            SQL:SELECT TSBPN, IECPN, Cdt, Editor FROM IMES_FA..SmallPartsUpload ORDER BY Cdt DESC
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.SaveSmallPartsUploadInfo(System.Collections.Generic.IList{IMES.DataModel.SMALLPartsUploadInfo})" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckIECPn(System.String)">
            <summary>
            检查刷入的IECPN在数据库中是否存在 
            IF EXISTS(SELECT TSBPN FROM SmallPartsUpload WHERE IECPN = @IECPN)
                PRINT '存在'
            ELSE
                PRINT '不存在'
            </summary>
            <param name="iecPn">iecPn</param>
            <returns>成功执行返回 影响行数 >1,否则返回 0</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckFruNo(System.String)">
            <summary>
            判断FruNo是否存在
            </summary>
            <param name="fruNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsLastReworkStation(System.String,System.String,System.Int32)">
            <summary>
            根据ReworkCode到ReworkProcess获取Process
            根据currentStatio和status判断是否是最后一站
             当处理到Rework Process最后一站时(在rework process中按照当前站及Status找不到下一站)
            </summary>
            <param name="reworkcode"></param>
            <param name="currentStation"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsReworkFinish(System.String,System.String)">
            <summary>
            根据reworkcode统计product数量，如果是0表示全部完成，返回true，否则返回false           
            select count(productid) from ProductStatus where ReworkCode=@ReworkCode and ProductId != @ProductId
            </summary>
            <param name="reworkcode"></param>
            <param name="productID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductListRework(IMES.FisObject.FA.Product.ProductStatus,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            更新一组Product对应的Rewrok和Status
            </summary>
            <param name="newStatus"></param>
            <param name="productIDList"></param>
            <param name="cartonSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateBoxerBookData(System.String,System.String)">
            <summary>
            SQL:Update BoxerBookData Set PalletSerialNo = @PalletNo where SerialNumber=@CustomerSn
            </summary>
            <param name="pltNo"></param>
            <param name="custSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetTestBoxDataLogByCustSN(System.String)">
            <summary>
            用Customer Sn = TestBoxDataLog.SerialNo 为条件，去检查Cdt 最新的那条记录
            </summary>
            <param name="custSN"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLog(System.String,System.String)">
            <summary>
            Update TestBoxDataLog Set PalletSerialNo = @PalletNo where SerialNumber=@CustomerSn
            </summary>
            <param name="pltno"></param>
            <param name="custSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateCartonWeightByCartonDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,System.Decimal)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product的CartonWeight
            </summary>
            <param name="uow"></param>
            <param name="cartonSN"></param>
            <param name="cartonWeight"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductStatusByCartonDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,IMES.FisObject.FA.Product.ProductStatus)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product状态
            </summary>
            <param name="uow"></param>
            <param name="cartonSN"></param>
            <param name="newStatus"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductLogByCartonDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            根据Carton号码记录所有属于该Carton的Product的过站Log
            </summary>
            <param name="uow"></param>
            <param name="cartonSN"></param>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductLogByDeliveryNoDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            根据DeliveryNo号码记录所有属于该DeliveryNo的Product的过站Log
            </summary>
            <param name="uow"></param>
            <param name="dn"></param>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CartonUnpack(System.String)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product的DeliverID，CartonSN为空
            </summary>
            <param name="cartonSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CartonUnpackDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product的DeliverID，CartonSN为空
            </summary>
            <param name="uow"></param>
            <param name="cartonSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductListReworkDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,IMES.FisObject.FA.Product.ProductStatus,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            更新一组Product对应的Rewrok和Status
            </summary>
            <param name="uow"></param>
            <param name="newStatus"></param>
            <param name="productIDList"></param>
            <param name="cartonSN"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByPartTypeDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            删除指定Product对应P
            </summary>
            <param name="uow">unit of work</param>
            <param name="productID">productID</param>
            <param name="partTypeList">partTypeList</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByIdOrSn(System.String)">
            <summary>
            select a.ProductID,a.CUSTSN,a.Model,a.MO,a.DeliveryNo,b.Station,b.Status 
            from Product a
            join ProductStatus b on a.ProductID=b.ProductID 
            where a.ProductID = 'productIdOrSN' or a.CUSTSN = 'productIdOrSN' 
            </summary>
            <param name="productIdOrSN"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByByUserKey(System.String)">
            <summary>
            取得Product List,按ProdId排序
            参考Sql
            select b.ProductID,b.CUSTSN,b.Model,b.MO,b.DeliveryNo,c.Station,c.Status 
            from IMES_GetData.dbo.TempProductID a 
                 join IMES_FA.dbo.Product b on a.ProductID = b.ProductID OR a.ProductID = b.CUSTSN
                 join IMES_FA.dbo.ProductStatus c on c.ProductID=b.ProductID 
            where a.UserKey=?
            order by b.ProductID 
            </summary>
            <param name="userKey"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllInvalidProductIdByUserKey(System.String)">
            <summary>
            取得不合法的ProductID List 
            参考sql
            select a.ProductID  
            from IMES_GetData.dbo.TempProductID a 
                 left outer join IMES_FA.dbo.Product b on a.ProductID = b.ProductID  
                 left outer join IMES_FA.dbo.Product c on a.ProductID = c.CUSTSN  
            where a.UserKey=? and b.ProductID is null and c.ProductID is null 
            </summary>
            <param name="userKey"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetUnitExistsCountByUserKey(System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetInvalidUnitCountByUserKey(System.String)">
            <summary>
            所有unit所处的站可以做rework，即Unit所在的站满足以下条件：Product.Station and Status不存在于ReworkRejectStation表
            参考sql
            select count(1) 
            from IMES_GetData.dbo.TempProductID a 
                 join IMES_FA.dbo.ProductStatus b on a.ProductID = b.ProductID  
                 join IMES_GetData.dbo.ReworkRejectStation c on b.Station =c.Station and b.Status=c.Status  
            where a.UserKey=?
            </summary>
            <param name="userKey"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByReworkCode(System.String)">
            <summary>
            取得Rework下的所有Product
            参考sql
            select a.ProductID,a.CUSTSN,a.Model,a.MO,a.DeliveryNo,b.Station,b.Status 
            from IMES_FA.dbo.Product a
                 join IMES_FA.dbo.ProductStatus b on a.ProductID=b.ProductID 
            where b.ReworkCode=? 
            order by b.ProductID 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductModelStatisticByReworkCode(System.String)">
            <summary>
            取得Rework下的Product，按Model分组
            参考sql
            select a.Model,count(1) as Quantity  
            from IMES_FA.dbo.Product a
                 join IMES_FA.dbo.ProductStatus b on a.ProductID=b.ProductID 
            where b.ReworkCode=?
            group by a.Model 
            order by a.Model 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductStationStatisticByReworkCode(System.String)">
            <summary>
            取得Rework下的Product，按Station分组
            参考sql
            select b.Station+’(’+c.Descr+’)’,count(1) as Quantity  
            from IMES_FA.dbo.Product a
                 join IMES_FA.dbo.ProductStatus b on a.ProductID=b.ProductID 
                 join IMES_GetData.dbo.Station c on b.Station=c.Station 
            where b.ReworkCode=? 
            group by b.Station 
            order by b.Station 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetUnitCountByRework(System.String)">
            <summary>
            取得Rework下的unit的数量
            参考sql
            select count(1) 
            from IMES_FA.dbo.ProductStatus 
            where b.ReworkCode=? 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductStatusReworkCodeByUserKey(System.String,IMES.DataModel.ReworkObj)">
            <summary>
            保存reworkCode到ProductStatus 
            参考sql
            update b 
            set b.ReworkCode=? 
            from IMES_GetData.dbo.TempProductID a 
                 join IMES_FA.dbo.ProductStatus b on a.ProductID = b.ProductID  
            where a.UserKey=?
            </summary>
            <param name="userKey"></param>
            <param name="reworkCode"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CreateTempProductIDList(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            将ProductId的List存入临时表中，每个productId为一条记录。 
            临时表名称TempProductID，包含两个字段ProductID char(10),UserKey char(32)
            参考sql
            insert ProductIDListForRework(UserKey,ProductID) values(?,?)
            </summary>
            <param name="productIdList"></param>
            <param name="userKey"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductIDListByUserKey(System.String)">
            <summary>
            删除掉临时表中ProductID
            参考sql
            delete ProductIDListForRework where UserKey=?
            </summary>
            <param name="userKey"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CreateRework(IMES.DataModel.Rework)">
            <summary>
            创建Rework返回ReworkCode
            参考sql
            insert Rework values('rewokcode',rework.Status,rework.Editor,rework.Cdt,rework.Udt)
            Rework Code产生规则：
            YYMMDDXX
            第1-2码：两位年
            第3-4码：两位月
            第5-6码：两位日
            第7-8码：Sequence No.，从01开始，36进制(0-9,A-Z)
            </summary>
            <param name="rework"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetReworkList(System.DateTime,System.DateTime)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetReworkStatus(System.String)">
            <summary>
            取得Rework的Status
            参考sql
            select Status from Rework where ReworkCode=? 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveARework(System.String)">
            <summary>
            删除Rework记录
            参考sql
            a)update ProductStatus set ReworkCode='' where ReworkCode=? 
            b)delete Rework_Process where ReworkCode=? 
            c)delete Rework where ReworkCode=? 
            </summary>
            <param name="reworkCode"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateRework(IMES.DataModel.Rework)">
            <summary>
            更新Rework
            参考sql
            Update Rework set Status=?,Editor=?,Udt=? where ReworkCode=? 
            </summary>
            <param name="rework"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.SetReworkProcess(IMES.FisObject.Common.Process.ReworkProcess)">
            <summary>
            设置Rework的Process
            参考sql
            a)delete Rework_Process where ReworkCode=? 
            b)insert Rework_Process(ReworkCode,Process,Editor,Cdt,Udt) values(?,?,?,?,?)
            </summary>
            <param name="reworkProcess"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProcessReleaseType(System.String)">
            <summary>
            取得相关Process对应的所有Release Type 
            参考sql
            select ReleaseType 
            from Rework_Process a
                 join Rework_ReleaseType b on a.Process=b.Process 
            where a.ReworkCode=? 
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProcessStationList(System.String)">
            <summary>
            select b.PreStation+’(’+c. Descr +’)’,b.Station+’(’+d. Descr +’)’,b.Status
            from Rework_Process a
                 join Process_Station b on a.Process = b.Process  
                 join Station c on b.PreStation=c.Station  
                 join Station d on b.Station=d.Station
            where a.ReworkCode=?
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IFReworkHasProcess(System.String)">
            <summary>
            select * from Rework_Process where ReworkCode = ?
            存在返回true ，不存在返回false
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByIdList(System.Collections.Generic.IList{System.String})">
            <summary>
            按ID列表批量获得Product对象列表
            </summary>
            <param name="idList"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ClearData(System.String,System.String)">
            <summary>
            数据复制与解绑，
            参考sql：
            Exec ClearProductDataForRework ‘reworkCdoe’,’editor’
            </summary>
            <param name="reworkCode"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetTabKittingCodeList">
            <summary>
            SELECT RTRIM(Code), RTRIM(Descr) as [Description] FROM KittingCode
                     WHERE [Type] = 'Kitting'
                     ORDER BY Code, Descr
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoListByCode(System.String)">
            <summary>
            SELECT DISTINCT RTRIM(Code), RTRIM(PartNo) as [Part No], RTRIM([Tp]) as [Type], 
                      CONVERT(int, LightNo) as LightNo,
                      Qty, RTRIM(Sub) as Substitution, Safety_Stock as [Safety Stock], 
                      Max_Stock as [Max Stock],
                      Remark, Editor, Cdt as [Create Date], Udt as [Update Date], [ID]
                     FROM WipBuffer b
                     WHERE Code = @Code
                     ORDER BY CONVERT(int, LightNo), [Part No]
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetExistPartNo(System.String)">
            <summary>
            SELECT * FROM IMES_GetData..Part WHERE PartNo = @PartNo AND Flag=1
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.SaveWipBuffer(IMES.DataModel.WipBuffer)">
            <summary>
            说明：@Code等是item中对应的项的参数
            IF EXISTS(SELECT * FROM WipBuffer WHERE Code = @Code AND PartNo = @PartNo)
                     UPDATE [IMES_FA].[dbo].[WipBuffer]
                               SET LightNo = @LightNo, Qty = @Qty, Sub = @Sub, Safety_Stock = @SafetyStock,
                                        Max_Stock = @MaxStock, Remark = @Remark, Editor = @Editor, Udt = GETDATE()
                               WHERE Code = @Code AND PartNo = @PartNo
            ELSE
                     INSERT INTO [IMES_FA].[dbo].[WipBuffer]([Code],[PartNo],[Tp],[LightNo],[Picture],[Qty],[Sub],[Safety_Stock],[Max_Stock],[Remark],[Editor],[Cdt],[Udt])
                               SELECT @Code, @PartNo, PartType, @LightNo, '', @Qty, @Substitution, @SafetyStock, @MaxStock,
                                        @Remark, @Editor, GETDATE(), GETDATE() 
                                        FROM IMES_GetData..Part
                                        WHERE PartNo = @PartNo AND Flag=1
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteLightNo(System.String,System.String)">
            <summary>
            DELETE FROM [IMES_FA].[dbo].[WipBuffer]
                     WHERE Code = @Code AND LightNo = @LightNo
            </summary>
            <param name="code"></param>
            <param name="lightNo"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightStationList">
            <summary>
            SELECT RTRIM(Code) as Code, RTRIM([Type]) as Type, RTRIM(Descr) as Description, RTRIM(Remark) as Remark, RTRIM(Editor) as Editor, Cdt as [Create Date], Udt as [Update Date]
                     FROM KittingCode WHERE [Type]='Kitting' 
                     ORDER BY Code, Description
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.SaveKittingCode(IMES.DataModel.KittingCode)">
            <summary>
            IF EXISTS(SELECT * FROM [IMES_FA].[dbo].[KittingCode] WHERE Code = @Code AND [Type] = 'Kitting')
                     UPDATE [IMES_FA].[dbo].[KittingCode]
                               SET Descr = @Description,
                                        Remark = @Remark,
                                        Editor = @Remark,
                                        Udt = GETDATE()
                     WHERE Code = @Code AND [Type] = 'Kitting'
            ELSE
                     INSERT INTO [IMES_FA].[dbo].[KittingCode]([Code],[Type],[Descr],[Remark],[Editor],[Cdt],[Udt])
                               VALUES(@Code, 'Kitting', @Description, @Remark, @Editor, GETDATE(), GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteKittingCode(System.String)">
            <summary>
            DELETE FROM [IMES_FA].[dbo].[KittingCode] WHERE Code = @Code AND [Type] = 'Kitting'
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferID(System.String,System.String)">
            <summary>
            SELECT [ID] FROM WipBuffer WHERE Code = @Code AND PartNo = @PartNo
            </summary>
            <param name="code"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAreaItem">
            <summary>
            SELECT DISTINCT Area as Area
                     FROM TraceStd
                     ORDER BY Area
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAreaList">
            <summary>
            SELECT DISTINCT Area as Area
                     FROM TraceStd
                     ORDER BY Area
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFamilyListFromRunInTimeControl">
             <summary>
            1,从表RunInTimeControl取得Family列表 
            参考sql：
            SELECT Code AS Family 
            FROM RunInTimeControl
                     WHERE Type = 'Family'
                     ORDER BY Family 
             </summary>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControlListByType(System.String)">
             <summary>
            2,根据Type取得RunInTimeControl列表
            参考sql：
            SELECT ID,Code, [Type], [Hour], Remark,Editor, Cdt, Udt 
            FROM RunInTimeControl
                     WHERE Type = ? 
                     ORDER BY Code 
             </summary>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControl(System.String,System.String)">
             <summary>
            3,根据Type和Code取得RunInTimeControl 
            参考sql：
            SELECT ID,Code, [Type], [Hour], Remark,Editor, Cdt, Udt  
            FROM RunInTimeControl
                     WHERE Type = ?
                               AND Code = ? 
             </summary>
             <param name="type"></param>
             <param name="code"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateRunInTimeControlByTypeAndCode(IMES.FisObject.FA.Product.RunInTimeControl)">
             <summary>
            4,更新RunInTimeControl
            参考sql：
            UPDATE RunInTimeControl 
            SET Hour = ?, Remark = ?, Editor = ?, Udt = GETDATE()
            WHERE [Type] = ? AND Code = ? 
             </summary>
             <param name="runInTimeControl"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateRunInTimeControlById(IMES.FisObject.FA.Product.RunInTimeControl)">
            <summary>
            UPDATE RunInTimeControl 
            SET Code = @Family, [Type] = @type, Hour = @Time, Editor = @Editor, Udt = GETDATE(), TestStation = @station, ControlType = @ctrlType 
            WHERE [ID] = @id
            </summary>
            <param name="runInTimeControl"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertRunInTimeControlLog(System.Int32)">
             <summary>
            5,纪录log信息
            参考sql：
            INSERT RunInTimeControlLog(Code, [Type], [Hour], Remark, Editor, TestStation, ControlType, Cdt)
                               SELECT Code, [Type], Hour, Remark, Editor, TestStation, ControlType, Udt
                                        FROM RunInTimeControl
                                        WHERE WHERE [ID] = @id
             </summary>
             <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertRunInTimeControl(IMES.FisObject.FA.Product.RunInTimeControl)">
             <summary>
            6,新增RunInTimeControl纪录
            参考sql：
            INSERT RunInTimeControl(Code, [Type], [Hour], Remark, Editor, Cdt, Udt)
                               VALUES(?, ?, ?, ?, ?, GETDATE(), GETDATE()) 
             </summary>
             <param name="runInTimeControl"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteRunInTimeControl(System.String,System.String)">
             <summary>
            7,删除RunInTimeControl纪录
            参考sql：
            DELETE FROM RunInTimeControl WHERE [Type] = ? AND Code = ?
             </summary>
             <param name="type"></param>
             <param name="code"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteRunInTimeControlById(System.Int32)">
            <summary>
            DELETE FROM [iMES2012].[dbo].[RunInTimeControl] WHERE [ID] = @id
            </summary>
            <param name="id"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetTraceStdList(System.String,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.SaveAllKindsOfTypeInfo(IMES.DataModel.TraceStdInfo)">
            <summary>
            3.返回值和参数说明:
            TraceStdInfo为IMES.DataModel中可序列化结构,前文中曾作为返回值的泛型参数出现过,本方法中只提取此结构中的4个成员作为SQL语句中的参数
            SQL语句:
            IF NOT EXISTS(SELECT * FROM [IMES_FA].[dbo].[TraceStd]
                               WHERE Family = @Family AND Area = @Area AND Type = @Type)
                     INSERT INTO [IMES_FA].[dbo].[TraceStd]([Family],[Area],[Type],[Editor],[Cdt])
                               VALUES(@Family, @Area, @Type, @Editor, GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteResult(IMES.DataModel.TraceStdInfo)">
            <summary>
            4.返回值和参数说明:
            TraceStdInfo为IMES.DataModel中可序列化结构,前文中曾作为返回值的泛型参数出现过,本方法中只提取此结构中的3个成员作为SQL语句中的参数
            SQL语句:
            DELETE FROM [IMES_FA].[dbo].[TraceStd]
                     WHERE Family = @Family AND Area = @Area AND Type = @Type
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetId(IMES.DataModel.TraceStdInfo)">
            <summary>
            5.返回值和参数说明:
            TraceStdInfo为IMES.DataModel中可序列化结构,前文中曾作为返回值的泛型参数出现过,本方法中提取此结构中的4个成员作为SQL语句中的参数
            Id为TraceStd表中新增加的主键
            SQL语句:
            SELECT  Id 
            FROM [IMES_FA].[dbo].[TraceStd]
            WHERE Family = @Family AND Area = @Area AND Type = @Type)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllWLBTDescr">
            <summary>
            取得全部的WLBTDescr 
            参考sql：
            SELECT *
            FROM WLBTDescr
            ORDER BY Code, Site, Tp
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWLBTDescrListByPartNo(System.String)">
            <summary>
            取得某一Part的WLBTDescr 
            参考sql：
            SELECT *
            FROM WLBTDescr
            WHERE Code = ?
            ORDER BY Code, Site, Tp
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IFWLBTDescrIsExists(IMES.DataModel.WLBTDescr)">
            <summary>
            判断WLBTDescr是否已经存在 
            参考sql：
            SELECT ID 
            FROM [WLBTDescr] 
            WHERE Code = ? AND Tp = ? AND Site = ? AND TpDescr = ?
            </summary>
            <param name="descr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateWLBTDescr(IMES.DataModel.WLBTDescr)">
            <summary>
            更新WLBTDescr
            参考sql：
            UPDATE [WLBTDescr] 
            SET Descr = ?, Editor = ?, Udt = GETDATE()
            WHERE ID = ?
            </summary>
            <param name="descr"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertWLBTDescr(IMES.DataModel.WLBTDescr)">
            <summary>
            新增WLBTDescr纪录, 返回ID  
            参考sql：
            INSERT INTO [WLBTDescr]([Code],[Tp],[TpDescr],[Descr],[Site],[Editor],[Cdt],[Udt])
                    VALUES(?, ?, ?, ?, ?, ?, GETDATE(), GETDATE())
            </summary>
            <param name="descr"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteWLBTDescr(System.String)">
            <summary>
            删除WLBTDescr
            参考sql：
            Delete WLBTDescr where ID=?
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateAllKindsOfTypeInfo(IMES.DataModel.TraceStdInfo)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为IMES.DataModel.TraceStdInfo
            SQL语句：
            IF EXISTS(SELECT * FROM [IMES_FA].[dbo].[TraceStd]
                               WHERE Family = @Family AND Area = @Area)
            UPDATE [IMES_FA].[dbo].[TraceStd]
            SET [Type]= @Type,[Editor]=@ Editor,[Udt]=GETDATE()
            WHERE Family = @Family AND Area = @Area 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistsRecord(IMES.DataModel.TraceStdInfo)">
            <summary>
            返回值和参数说明：
            返回值为Int类型；
            参数为两个字符串类型，对应数据库中TraceStd表中的Family和Area字段；
            SQL语句：
            SELECT COUNT(*) FROM [IMES_FA].[dbo].[TraceStd]
            WHERE Family = @Family AND Area = @Area AND Type=@Type
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsKittingCodeExist(System.String)">
            <summary>
            IF EXISTS(SELECT * FROM [IMES_FA].[dbo].[KittingCode] WHERE Code = @Code AND [Type] = 'Kitting')
            返回true
            否则false
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateKittingCode(System.String,System.String,System.String,System.String)">
            <summary>
            UPDATE [IMES_FA].[dbo].[KittingCode]
            SET Descr = @Description,Remark = @Remark, Editor = @Editor,Udt = GETDATE()
            WHERE Code = @Code AND [Type] = 'Kitting'
            </summary>
            <param name="code"></param>
            <param name="descr"></param>
            <param name="remark"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddKittingCode(IMES.DataModel.KittingCode)">
            <summary>
            INSERT INTO [IMES_FA].[dbo].[KittingCode]
            ([Code],[Type],[Descr],[Remark],[Editor],[Cdt],[Udt]) VALUES(@Code, 'Kitting', 
            @Description, @Remark, @Editor, GETDATE(), GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsWipBufferExist(System.String,System.String)">
            <summary>
            IF EXISTS(SELECT * FROM WipBuffer WHERE Code = @Code AND PartNo = @PartNo)
            返回true
            否则false
            </summary>
            <param name="code"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateWipBuffer(IMES.DataModel.WipBuffer)">
            <summary>
            UPDATE [IMES_FA].[dbo].[WipBuffer]
            SET LightNo = @LightNo, Qty = @Qty, Sub = @Sub, Safety_Stock = @SafetyStock,
                Max_Stock = @MaxStock, Remark = @Remark, Editor = @Editor, Udt = GETDATE()
            WHERE ID=id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddWipBuffer(IMES.DataModel.WipBuffer)">
            <summary>
            INSERT INTO [IMES_FA].[dbo].[WipBuffer]([Code],[PartNo],[Tp],[LightNo],[Picture],[Qty],
            [Sub],[Safety_Stock],[Max_Stock],[Remark],[Editor],[Cdt],[Udt])
            添加数据后，item中的ID存入该条记录新生成的ID
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLineList">
            <summary>
            返回值和参数说明：
            返回值为字符串为泛型参数的列表,字符串对应的是FA_Station表中的Line
            SQL语句：
            SELECT DISTINCT [Line]
            FROM [IMES_GetData].[dbo].[Line]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFaStationInfoList">
            <summary>
            返回值和参数说明：
            返回值为FaStationInfo为泛型参数的列表;
            SQL语句：
            SELECT [ID]
                  ,[Line]
                  ,[Station]
                  ,[OptCode]
                  ,[OptName]
                  ,[Remark]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
              FROM [IMES_FA_Datamaintain].[dbo].[FA_Station]
              ORDER BY [Line]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFaStationInfoList(System.String)">
            <summary>
            返回值和参数说明：
            返回值为FaStationInfo为泛型参数的列表;
            参数为字符串类型,对应表中的[Line]字段
            SQL语句:
            SELECT [ID]
                  ,[Line]
                  ,[Station]
                  ,[OptCode]
                  ,[OptName]
                  ,[Remark]
                  ,[Editor]
                  ,[Cdt]
                  ,[Udt]
              FROM [IMES_FA_Datamaintain].[dbo].[FA_Station]
              WHERE [Line]=@Line
              ORDER BY [Line]
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistsRecord(System.String,System.String)">
            <summary>
            返回值和参数说明：
            返回值为int型,表示存在符合条件的记录的数目
            参数为字符串类型,对应表中的[Line] [Station]字段
            SQL语句:
            SELECT COUNT(*)
              FROM [IMES_FA_Datamaintain].[dbo].[FA_Station]
              WHERE [Line]=@Line
                    AND
                    [Station]=@Station
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetID(System.String,System.String)">
            <summary>
            返回值和参数说明：
            返回值为int类型，对应数据库FA_Station表中的主键ID
            参数为字符串类型,分别对应表中的[Line] [Station]字段
            SQL语句:
            SELECT [ID]
              FROM [IMES_FA_Datamaintain].[dbo].[FA_Station]
              WHERE [Line]=@Line 
                    AND
                    [Station]=@Station
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateFaStation(IMES.DataModel.FaStationInfo)">
            <summary>
            返回值和参数说明：
            无返回值
            参数为FaStationInfo结构类型
            SQL语句：
            UPDATE [IMES_FA_Datamaintain].[dbo].[FA_Station]
               SET [OptCode] = @OptCode
                  ,[OptName] = @OptName
                  ,[Remark] =  @Remark
                  ,[Editor] = @Editor
                  ,[Udt] = GETDATE()
             WHERE [Line] = @Line
                  AND [Station] = @Station
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertFaStation(IMES.DataModel.FaStationInfo)">
            <summary>
            返回值和参数说明：
            无返回值
            参数为FaStationInfo结构类型
            SQL语句：
            INSERT INTO [IMES_FA_Datamaintain].[dbo].[FA_Station]
                       ([Line]
                       ,[Station]
                       ,[OptCode]
                       ,[OptName]
                       ,[Remark]
                       ,[Editor]
                       ,[Cdt]
                       ,[Udt])
                 VALUES
                       ( @Line
                          ,@Station
                          ,@OtpCode
                          ,@OptName
                          ,@Remark
                          ,@Editor
                          ,GETDATE()
                          ,GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteFaStationInfo(System.String,System.String)">
            <summary>
            返回值和参数说明：
            无返回值；
            参数为两个字符串类型，分别对应数据库中FA_Station表中的[Line]和[Station]字段；
            SQL语句：
            DELETE FROM [IMES_FA_Datamaintain].[dbo].[FA_Station]
                  WHERE [Line]=@Line AND [Station]=@Station
            </summary>
            <param name="line"></param>
            <param name="station"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllMasterLabels">
            <summary>
            1,查询所有的MasterLabel的信息:
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveMasterLabelItem(System.Int32)">
            <summary>
            SQL: select * from MasterLabel;
            2,删除所选中的一条记录
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMasterLabelByVCAndCode(System.String,System.String)">
            <summary>
            3,根据vc,family查找DB中匹配的记录
            SQL:select * from masterLabel where family=[family] and vc=[vc]
            </summary>
            <param name="vc"></param>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMasterLabelByVCAndCode(System.String[],System.String)">
            <summary>
            MasterLabel (Condition: MasterLabel.VC in @Items and MasterLabel.Family=@Family)
            </summary>
            <param name="vcs"></param>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMasterLabelByVC(System.String)">
            <summary>
            SQL:select * from masterLabel where vc=[vc]
            </summary>
            <param name="vc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMasterLabelByCode(System.String)">
            <summary>
            SQL:select * from MasterLabel where family=[family]
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddMasterLabelItem(IMES.DataModel.MasterLabelInfo)">
            <summary>
            4,添加
            </summary>
            <param name="ml"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateMasterLabelItem(IMES.DataModel.MasterLabelInfo,System.String,System.String)">
            <summary>
            5,更新
            根据vc,family 更新MasterLabelInfo中的各个字段.
            </summary>
            <param name="ml"></param>
            <param name="vc"></param>
            <param name="family"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetVendorsByLikeDescr(System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllSupplierCodeList">
            <summary>
            2、 取得VendorCode数据的list(按Vendor、Priority栏位排序) 【对应SupplierCode表】
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeListByCode(System.String)">
            <summary>
            3、根据code取得VendorCode的记录数据
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeListByCode(System.String,System.String)">
            <summary>
            4、根据Vendor和Idex取得VendorCode的记录数据
            </summary>
            <param name="vendor"></param>
            <param name="idex"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddSupplierCodeInfo(IMES.DataModel.SupplierCodeInfo)">
            <summary>
            5、添加VendorCode记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveSupplierCodeInfo(System.Int32)">
            <summary>
            6、根据id删除VendorCode记录
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindSupplierCodeInfo(System.Int32)">
            <summary>
            7、根据id查找一条VendorCode记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateRunInTimeControlByTypeCodeAndTestStation(IMES.FisObject.FA.Product.RunInTimeControl,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="runInTimeControl"></param>
            <param name="type"></param>
            <param name="code"></param>
            <param name="testStation"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductRepairByProIdAndStatus(System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByProIdDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            返回值和参数说明：
            void
            参数为1个字符串类型，分别对应数据库中Product_Part表中的[ProductID]字段；
            SQL语句：
            DELETE FROM [IMES_FA].[dbo].[Product_Part]
                  WHERE [ProductID]=@ProductID 
            </summary>
            <param name="uow"></param>
            <param name="proID"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductInfoByProIdDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            返回值和参数说明：
            void
            参数为1个字符串类型，分别对应数据库中ProductInfo表中的[ProductID]字段；
            SQL语句：
            DELETE FROM [IMES_FA].[dbo].[ProductInfo]
                  WHERE [ProductID]=@ProductID 
            </summary>
            <param name="uow"></param>
            <param name="proID"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CopyProductToUnpackDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            将符合条件的Product资料拷贝至UnpackProduct, UnpackProductStatus
            </summary>
            <param name="uow"></param>
            <param name="cartonSN"></param>
            <param name="palletNo"></param>
            <param name="dn"></param>
            <param name="productId"></param>
             /// <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductIDListByPalletNo(System.String)">
            <summary>
            根据Pallet号码获取所有属于该Pallet的ProductID
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteProductLogByPalletNoDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            根据Pallet号码记录所有属于该Pallet的Product的过站Log
            </summary>
            <param name="uow"></param>
            <param name="palletNo"></param>
            <param name="newLog"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.PalletUnpackDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            根据Pallet号码更新所有属于该Pallet的Product的PalletNo为空
            </summary>
            <param name="uow"></param>
            <param name="palletNo"></param>        
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DNUnpackDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            根据Carton号码更新所有属于该Carton的Product的DeliveryNo为空
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DNUnpackForPODataDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            根据DeliveryNo号码更新所有属于该DeliveryNo的Product的DeliveryNo,PalletNo都置为空
            </summary>
            <param name="uow"></param>
            <param name="dn"></param> 
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateBoxerBookDataListDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,IMES.FisObject.PAK.BoxerBookData.BoxerBookData,System.Collections.Generic.IList{System.String})">
            <summary>
            根据SerialNumber更新所有属于该条件记录的CartonNo字段
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLogListDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,IMES.FisObject.PCA.TestBoxDataLog.TestBoxDataLog,System.Collections.Generic.IList{System.String})">
            <summary>
            根据SerialNumber更新所有属于该条件记录的CartonNo字段
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLogForUnpackPalletDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            Update TestBoxDataLog Set PalletSerialNo = ‘’ where SerialNumber=@CustomerSn
            </summary>
            <param name="uow"></param>
            <param name="custSN"></param> 
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLogForUnpackCartonDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String)">
            <summary>
            Update TestBoxDataLog Set CartonSn = ‘’ where SerialNumber=@CustomerSn
            </summary>
            <param name="uow"></param>
            <param name="custSN"></param> 
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByDeliveryNo(System.String)">
            <summary>
            根据DeliveryNo号码获取所有属于该DeliveryNo的Product对象
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCustSnListByCarton(System.String)">
            <summary>
            根据Carton号码获取所有属于改Carton的CustSn
            </summary>
            <param name="cartonSN"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCustSnListByPalletNo(System.String)">
            <summary>
            根据Pallet号码获取所有属于改Pallet的ProductID
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLogListForUnpackCartonDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.Collections.Generic.IList{System.String})">
            <summary>
            根据SerialNumber更新所有属于该条件记录的CartonNo字段=''(Unpack carton)
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateTestBoxDataLogListForUnpackPalletDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.Collections.Generic.IList{System.String})">
            <summary>
            根据SerialNumber更新所有属于该条件记录的PalletSerialNo字段=''(Unpack pallet)
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductLogs(System.String,System.Int32,System.String)">
            <summary>
            2、在ProductLog不存在Station='81' and Status=1 and Line= 'ATSN Print'的记录
            </summary>
            <param name="station"></param>
            <param name="status"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartsByPartNosAndProdId(System.String[],System.String)">
            <summary>
            3、Product_Part.Value where ProductID=@prdid and PartNo in (bom中BomNodeType=’AT’对应的Pn) 
            </summary>
            <param name="partNos"></param>
            <param name="prodId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddOneIProductPart(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            5、 保存product和Asset SN的绑定关系-- Insert Product_Part values(@prdid,@partpn,@astsn,’’,’AT’,@user,getdate(),getdate()) 
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductObjListByDn(System.String)">
            <summary>
            根据Delivery号码获取所有属于该Delivery的Product Object List
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByPrSn(System.String)">
            <summary>
            取得所输入PR SN绑定的Product ID及其SN
            SELECT * FROM Product WHERE PRSN=@#PRSN
            </summary>
            <param name="prSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdatePizzaIdForProduct(System.String,System.String)">
            <summary>
            Update the pizzaId for Product Table Record.
            </summary>
            <param name="proId"></param>
            <param name="pizzaId"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSnoBTDet(System.String)">
            <summary>
            SELECT * FROM FA.dbo.FA_SnoBTDet  WHERE SnoId=@ProductID
            </summary>
            <param name="productID"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLabelKittingCodeListByType(System.String)">
            <summary>
            1、 根据Type取得对应的Label Kitting Code数据的list(按Code栏位排序)
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetExistLabelKittingCode(System.String,System.String)">
            <summary>
            2、根据code和Type取得Label KittingCode的记录数据
            </summary>
            <param name="code"></param>
            <param name="type"></param>        
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ChangeLabelKittingCode(IMES.DataModel.LabelKittingCode,System.String,System.String)">
            <summary>
            3、根据code和Type修改Label KittingCode记录
            </summary>
            <param name="obj"></param>
            <param name="oldCode"></param>
            <param name="oldType"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddLabelKittingCode(IMES.DataModel.LabelKittingCode)">
            <summary>
            4、添加Label KittingCode
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveLabelKittingCode(System.String,System.String)">
            <summary>
            5、根据code和Type删除Label KittingCode
            </summary>
            <param name="code"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindLabelKittingCode(System.String,System.String)">
            <summary>
            6、根据code和Type查找一条Label KittingCode记录
            </summary>
            <param name="code"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSpecialDetInfoByTpAndSnoId(System.String[],System.String)">
            <summary>
            当Asset Tag对应的Part.PartType=’ATSN7’ or ‘ATSN8’时，
            需要看在Special_Det中是否存在对应的记录(Tp=’ATSN7’ or ‘ATSN8’ and SnoId=@prdid)，若存在，则Update Sno1=@astsn；
            </summary>
            <param name="tps"></param>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateSno1ForSpecialDet(System.String,System.Int32[])">
            <summary>
            则Update Sno1=@astsn；
            </summary>
            <param name="sno1"></param>
            <param name="ids"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertSpecialDet(IMES.DataModel.SpecialDetInfo)">
            <summary>
            否则Insert(Tp分别是’ATSN7’ or ‘ATSN8’)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetKittingCodeListFromLine(System.String)">
            <summary>
            1）取KittingCode表格
            'FA', 'PAK'情况下
            select distinct(Left(rtrim(Line),1)) as Code, '' as Descr, 'Yes' as IsLine 
            from Line where Stage=@stage 
            union 
            select rtrim(Family) as Code, Descr, '' as IsLine 
            from Family order by Descr, Code
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetKittingCodeList(System.String)">
            <summary>
            2）取KittingCode表格
            'FA Label','FA Label'情况下
            
                    select rtrim(Code)
                    , Descr, 
                    '' as IsLine 
                    from LabelKitting (nolock) where Type=@type order by Descr
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPdLineList(System.String)">
            <summary>
            3)取PDLine列表
            'FA', 'PAK'情况下
            SELECT [Line] AS pdLine where [Stage]='stage' ORDER BY [Line]
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPdLineListForLightNo(System.String)">
            <summary>
            3)取PDLine列表
            'FA', 'PAK'情况下
            select distinct Left(rtrim(Line),1) as Code from Line (nolock) where Stage=@stage order by Code
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoList(System.String,System.String)">
            <summary>
            4)取lightNo列表信息
            select distinct b.Code,b.PartNo,b.Tp,b.Station,convert(int,b.LightNo) as LightNo,Qty,Sub,Safety_Stock,Max_Stock,b.Remark,b.Editor,b.Cdt,b.Udt,b.ID
            from (select PartType + "%" as PartType from IMES2012_GetData.dbo.KitLoc where PdLine = @code) a, IMES2012_FA.dbo.WipBuffer b where IsNull(b.Tp,'') like a.PartType and b.Code=@code and 
            b.KittingType = @kittingType order by convert(int,b.LightNo)
            </summary>
            <param name="kittingType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoListPAK(System.String,System.String)">
            <summary>
            5) 
            select distinct b.Code,b.PartNo,b.Tp,b.Station,convert(int,b.LightNo) as LightNo,Qty,Sub,Safety_Stock,Max_Stock,b.Remark,b.Editor,b.Cdt,b.Udt,b.ID 
            from (select PartType + "%" as PartType from IMES2012_GetData.dbo.KitLoc where PdLine = @code) a, IMES2012_FA.dbo.WipBuffer b where IsNull(b.Tp,'') like a.PartType and b.Code=@code and 
            b.KittingType = @kittingType
            AND IsNull(Tp,'') not like 'DDD Kitting%' order by convert(int,b.LightNo)
            </summary>
            <param name="kittingType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoListFami(System.String,System.String)">
            <summary>
            6) 
            select distinct Code,PartNo,Tp,Station,convert(int,LightNo) as LightNo,Qty,Sub,Safety_Stock,Max_Stock,Remark,Editor,Cdt,Udt,ID 
            from IMES2012_FA.dbo.WipBuffer where Code=@code and KittingType = @kittingType 
            order by convert(int,LightNo)
            </summary>
            <param name="kittingType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoListFamiPAK(System.String,System.String)">
            <summary>
            7) 
            select distinct Code,PartNo,Tp,Station,convert(int,LightNo) as LightNo,Qty,Sub,Safety_Stock,Max_Stock,Remark,Editor,Cdt,Udt,ID 
            from IMES2012_FA.dbo.WipBuffer where Code=@code and KittingType = @kittingType 
            AND IsNull(Tp,'') not like 'DDD Kitting%' 
            order by convert(int,LightNo)
            </summary>
            <param name="kittingType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddLightNo(IMES.DataModel.WipBuffer)">
            <summary>
            8) 
            新增的id返回到结构里
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateLightNo(IMES.DataModel.WipBuffer)">
            <summary>
            9) 
            更新的数据
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteLightNo(System.Int32)">
            <summary>
            10) 
            DELETE FROM [WipBuffer]
            WHERE ID='id'
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartInfoByPartNo(System.String)">
            <summary>
            11) 
            SELECT Descr 
            FROM [Part]
            where [PartNo]='partNo'
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ExistWipBuffer(System.String,System.String,System.String,System.String)">
            <summary>
            12) 
            SELECT [ID] 
            FROM [WipBuffer]
            where  Code='code' AND KittingType='kittingType' AND (PartNo='partNo')
            </summary>
            <param name="code"></param>
            <param name="partNo"></param>
            <param name="kittingType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ExistWipBuffer(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            SELECT [ID] 
            FROM [WipBuffer]
            where Code='code' AND KittingType='kittingType' AND (PartNo='partNo') AND isnull(Line,’’)='line'
            </summary>
            <param name="code"></param>
            <param name="partNo"></param>
            <param name="lightNo"></param>
            <param name="kittingType"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.ExistWipBufferExceptCode(System.String,System.String,System.String,System.Int32,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.ExistWipBufferExceptCode(System.String,System.String,System.String,System.Int32,System.String,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoPartType">
            <summary>
            15) 
            SELECT distinct(PartType)
            FROM KitLoc
            ORDER BY PartType
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ExecOpKittingAutoCheck(System.String,System.String,System.String)">
            <summary>
            16)执行存储过程
            在GataDate库中执行
            Exec op_KittingAutoCheck 'code','lightNo'
            参数名称类型
            @family varchar(30),@loc char(4) 
            返回存储过程中的select数据
            </summary>
            <param name="family"></param>
            <param name="loc"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteTmpKit(System.String,System.String)">
            <summary>
            17) 1'
            DELETE FROM [TmpKit]
            WHERE PdLine='curLine' AND type='type'
            </summary>
            <param name="curLine"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ImportTmpKit(System.Collections.Generic.IList{IMES.DataModel.TmpKitInfoDef})">
            <summary>
            17) 2'
            INSERT INTO TmpKit
            (PdLine
            ,Model
            ,Type
            ,Qty)
            VALUES
            (@line
            ,@model
            ,@Type
            ,@Qty)
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ExecOpKittingLocCheck(System.String,System.String)">
            <summary>
            19) 执行存储过程 For FA
            Exec op_KittingLocCheck @pdline,@type
            返回存储过程中的select数据
            </summary>
            <param name="pdline"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ExecOpPAKKitLocFV(System.String)">
            <summary>
            20) 执行存储过程For PAK
            Exec op_PAKKitLoc_FV @pdline
            返回存储过程中的select数据
            </summary>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFAFloatLocationList">
            <summary>
            1.返回所有KitLoc记录
            select * from KitLoc order by Family,PartType
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFAFloatLocListByFamily(System.String)">
            <summary>
            2.
            select * from KitLoc where Family=family order by PartType
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFAFloatLocationInfo(System.Int32)">
            <summary>
            3.返回指定的KitLoc记录
            select * from KitLoc where ID=@id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddFAFloatLocationInfo(IMES.DataModel.FAFloatLocationInfo)">
            <summary>
            4.添加一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateFAFloatLocationInfo(IMES.DataModel.FAFloatLocationInfo,System.Int32)">
            <summary>
            5.更新指定ID为[id]的记录 所有字段 where ID=id
            </summary>
            <param name="item"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteFAFloatLocationInfo(System.Int32)">
            <summary>
            6.删除指定ID为[id]的记录
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPAKitlocByPdLine(System.String)">
            <summary>
            2,SQL:select * from PAKitLoc where pnline=[pdline] order by partNo
            </summary>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddPAKitLoc(IMES.DataModel.PAKitLoc)">
            <summary>
            3,
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdatePAKitLoc(IMES.DataModel.PAKitLoc)">
            <summary>
            4,
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdatePAKitLoc(IMES.DataModel.PAKitLoc,IMES.DataModel.PAKitLoc)">
            <summary>
            4',
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeletePAKitLoc(System.Int32)">
            <summary>
            5,
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByLineStage(System.String)">
            <summary>
            符合条件的Product：
            1） ProductStatus.Line的Stage=“FA”
            </summary>
            <param name="stage"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductByLineStage(System.String,System.String)">
            <summary>
            符合条件的Product：
            2） ProductStatus.Line的Stage=“PAK”并且ProductStatus.Station=“69”
            </summary>
            <param name="stage"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductBTByObjAndCondition(IMES.DataModel.ProductBTInfo)">
            <summary>
            根据条件删除，实体对象，给哪个赋值即使用哪个作条件，条件之间的关系是AND,
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CallRpt_ITCNDTS_SET_IMAGEDOWN_14(System.String,System.String,System.String)">
            <summary>
            1. [FA].[dbo].[rpt_ITCNDTS_SET_IMAGEDOWN_14]
            Description:
            Image Download实时调用的FIS 的Stored Procedure
            Parameter(s):
            @cpqsno varchar(24),--Customer SN
            @flag char(10),-- 'PASS'|'NEEDUP'|'INFO'|'TESTHDD'|'STARTDL'
            @version char(500)-- Image Download 提供的数据, 采用如下格式：Key1:Value1~Key2:Value2~....~Keyn:Value
                 -- 目前支持的Key 有如下几种：
                 -- BIOS|FLOW|HDVD|WMAC|TVTUNER|IMEI|VERSION|BLMAC
            </summary>
            <param name="cpqsno"></param>
            <param name="flag"></param>
            <param name="version"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.FindWipBufferById(System.Int32)">
            <summary>
            22), 通过ID 查找获得WipBuffer
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRealModelData(System.String,System.String)">
            <summary>
            SELECT Model FROM [TmpKit] WHERE PdLine='pdLine' AND [Type]='type'
            </summary>
            <param name="pdLine"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteRealModelData(System.String,System.String)">
            <summary>
            DELETE FROM [TmpKit]
            WHERE PdLine='pdLine' AND [Type]='type' AND
            Model Not IN(SELECT [Model] FROM [Model])
            </summary>
            <param name="pdline"></param>
            <param name="type"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetNewestProductQCStatus(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductIDListNeedToCheck(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductLogs(System.String,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetByModelStatisticsFromProductLog(System.Int32,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            得到pass数量：
            从ProductLog获取，条件：
            A. Status=1
            B. StationID=79(ITCND Check站) 
            C. Cdt范围：若当前时间大于7:50，则Cdt>当天日期的7:50；否则Cdt在前一天日期的7:50和当天日期的7:50之间
            D. Line=line#
            显示的信息：
            Model
            Qty
            </summary>
            <param name="status"></param>
            <param name="station"></param>
            <param name="begin"></param>
            <param name="end"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferByKittingTypeAndCode(System.String,System.String)">
            <summary>
            在WipBuffer表中不存在Code = @family 的纪录
            @family =Model.Family 
            If Not Exist(SELECT Top 1 [ID]
              FROM [IMES2012_FA].[dbo].[WipBuffer] where [KittingType]='FA Part' and [Code]= @family)
            </summary>
            <param name="kittingType"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetKittingCodeFromProcuctAndModelAndModelInfo(System.String,System.String)">
            <summary>
            SELECT RTRIM(a.Value) + '-' + CASE (CHARINDEX(' ', Family) - 1) WHEN -1 THEN Family
            ELSE SUBSTRING(Family, 1, (CHARINDEX(' ', Family) - 1)) END as [KittingCode]
            FROM IMES_GetData..ModelInfo a, IMES_GetData..Model b,Product c
            WHERE a.Model = b.Model
            AND a.Name = 'DM2'
            And b.Model=c.Model
            AND c.ID = @ ProductID
            </summary>
            <param name="modelInfoName"></param>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistKittingCodeByCodeAndType(System.String,System.String)">
            <summary>
            IF EXISTS(SELECT * FROM IMES_FA..KittingCode WHERE Code = @Code AND Type = 'Kitting')
            </summary>
            <param name="code"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMaterialPositionInfoByCodeAndProdID(System.String,System.String)">
            <summary>
            Get 料位信息 By [Code] and [ProdID]
            参考方法：
            SELECT DISTINCT RTRIM(b.Code) as Code, RTRIM(b.PartNo) as [Part No],
              RTRIM(b.Tp) as [Type], CONVERT(int, b.LightNo) as [Light No],
              '' as Scan
             FROM IMES_GetData..MoBOM a, IMES_FA..WipBuffer b
             WHERE a.Deviation = 1
              AND a.PartNo = b.PartNo
              AND b.Code = @Code
              AND b.Tp = 'Kitting'
              AND MO IN (SELECT MO FROM IMES_GetData..MO , Product WHERE Product.Model= MO .Model AND Product.ID= @ProdID)
             ORDER BY [Light No], [Part No], [Type]
            </summary>
            <param name="code"></param>
            <param name="prodId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfQCStatusByTpAndPdLineAndPnoToday(System.String,System.String,System.String)">
            <summary>
            select @cnt=count(distinct ProductID) from QCStatus where Tp='PAQC' 
            and PdLine=@pdline 
            and Model=@model 
            AND Cdt ＞= @StartDate AND Cdt ＜ @EndDate --and convert(char(10),Cdt,111)=convert(char(10),getdate(),111)
            
            Prequisite:每天的中午12点至转天的中午12点为一个抽检周期
            
            DECLARE @StartDate datetime, @EndDate datetime
            IF DATEPART(HOUR, GETDATE()) > 12
            BEGIN
                SET @StartDate = convert(char(10),GETDATE(),121) + ' 12:00:00.000'
                SET @EndDate = convert(char(10),DATEADD(day, 1, GETDATE()),121) + ' 12:00:00.000'
            END
            ELSE
            BEGIN
                SET @StartDate = convert(char(10),DATEADD(day, -1, GETDATE()),121) + ' 12:00:00.000'
                SET @EndDate = convert(char(10),GETDATE(),121) + ' 12:00:00.000'
            END
            </summary>
            <param name="tp"></param>
            <param name="pdLine"></param>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfQCStatusByTpAndPdLineAndModelToday(System.String,System.String)">
            <summary>
            SELECT @cnt=count(distinct ProductID) FROM QCStatus WHERE Tp='PAQC' 
            AND PdLine=@pdline 
            AND Model LIKE 'PC____[0-9]_____' AND RIGHT(RTRIM(Model), 3) NOT IN ('29Y', '39Y')
            AND Cdt ＞= @StartDate AND Cdt ＜ @EndDate 
            
            Prequisite:每天的中午12点至转天的中午12点为一个抽检周期
            
            DECLARE @StartDate datetime, @EndDate datetime
            IF DATEPART(HOUR, GETDATE()) > 12
            BEGIN
                SET @StartDate = convert(char(10),GETDATE(),121) + ' 12:00:00.000'
                SET @EndDate = convert(char(10),DATEADD(day, 1, GETDATE()),121) + ' 12:00:00.000'
            END
            ELSE
            BEGIN
                SET @StartDate = convert(char(10),DATEADD(day, -1, GETDATE()),121) + ' 12:00:00.000'
                SET @EndDate = convert(char(10),GETDATE(),121) + ' 12:00:00.000'
            END
            </summary>
            <param name="tp"></param>
            <param name="pdLine"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfQCStatusByTpAndPdLineAndModelToday(System.String,System.String,System.String)">
            <summary>
            SELECT @cnt=count(distinct ProductID) FROM QCStatus WHERE Tp='PAQC' 
            AND Line=@pdline 
            AND Model LIKE 'PC____[0-9]_____' AND SUBSTRING(RTRIM(Model), 10, 2) = SUBSTRING(RTRIM(@Model), 10, 2)
            AND Cdt ＞= @StartDate AND Cdt ＜ @EndDate 
            
            其余同上 ///
            </summary>
            <param name="tp"></param>
            <param name="pdLine"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteMPInterface(System.Object)">
            <summary>
            删除IMES2012_FA..MPInterface数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoCountByInfoValue(System.String,System.String)">
            <summary>
            SQL:select count(0) from ProductInfo where InfoType = [InfoType] and InfoValue = [InfoValue];
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetFAFloatLocation(System.String,System.String,System.String)">
            <summary>
            根据family,pType,pdLine查找表KitLoc的对应记录 where Family=family AND PartType=pType AND PdLine=pdLine
            </summary>
            <param name="family"></param>
            <param name="pType"></param>
            <param name="pdLine"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByPalletNoOrderByCustSN(System.String)">
            <summary>
            根据palletNo获取所有属于该palletNo的Product,按照Customer S/N 升序排序
            此接口与GetProductListByPalletNo的SQL类似，增加按照Customer S/N 升序排序
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateUnPackProductStatusByDeliveryNo(IMES.FisObject.FA.Product.ProductStatus,System.String)">
            <summary>
            update ProductStatus set Status=@Status,Station=@Station,Editor=@Editor,Udt=GETDATE()
            from ProductStatus as S inner join Product as P ON S.ProductID =P.ProductID
            WHERE P.DeliveryNo =@DeliveryNo and (Model LIKE 'PC%' or Model LIKE 'QC%')
            </summary>
            <param name="newStatus"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateUnPackProductStatusByDn(IMES.FisObject.FA.Product.ProductStatus,System.String)">
            <summary>
            update ProductStatus set Status=@Status,Station=@Station,Editor=@Editor,Udt=GETDATE()
            from ProductStatus as S inner join Product as P ON S.ProductID =P.ProductID
            WHERE P.DeliveryNo =@DeliveryNo 
            </summary>
            <param name="newStatus"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteUnPackProductLogByDeliveryNo(System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            insert into ProductLog(Line,Model,ProductID,Station,Status,Editor,Cdt)
            select @Line,Model,ProductID,@Station,@Status,@Editor,GETDATE()
            from Product 
            where DeliveryNo =@DeliveryNo and (Model LIKE 'PC%' or Model LIKE 'QC%') 
            </summary>
            <param name="dn"></param>
            <param name="newLog"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.WriteUnPackProductLogByDn(System.String,IMES.FisObject.FA.Product.ProductLog)">
            <summary>
            insert into ProductLog(Line,Model,ProductID,Station,Status,Editor,Cdt)
            select @Line,Model,ProductID,@Station,@Status,@Editor,GETDATE()
            from Product 
            where DeliveryNo =@DeliveryNo 
            </summary>
            <param name="dn"></param>
            <param name="newLog"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UnPackProductInfoByDeliveryNo(System.String,System.String)">
            <summary>
            delete ProductInfo from ProductInfo as I inner join Product as P ON I.ProductID = P.ProductID
            where I.InfoType=@InfoType and P.DeliveryNo=@DeliveryNo and (P.Model LIKE 'PC%' or P.Model LIKE 'QC%')
            </summary>
            <param name="infoType"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UnPackProductInfoByDeliveryNoAndInfoType(System.String,System.String)">
            <summary>
            delete ProductInfo from ProductInfo as I inner join Product as P ON I.ProductID = P.ProductID
            where I.InfoType=@InfoType and P.DeliveryNo=@DeliveryNo 
            </summary>
            <param name="infoType"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UnPackProductByDeliveryNo(System.String)">
            <summary>
            update Product set DeliveryNo='',PalletNo='',CartonSN='',CartonWeight=0.0 
            where DeliveryNo=@DeliveryNo and (P.Model LIKE 'PC%' or P.Model LIKE 'QC%')
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UnPackProductByDn(System.String)">
            <summary>
            update Product set DeliveryNo='',PalletNo='',CartonSN='',CartonWeight=0.0 ,UnitWeight=0.0
            where DeliveryNo=@DeliveryNo 
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UnPackProductByDnWithoutCartonSN(System.String)">
            <summary>
            update Product set DeliveryNo='',PalletNo='',CartonWeight=0.0 ,UnitWeight=0.0
            where DeliveryNo=@DeliveryNo 
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByPalletNo2(System.String)">
            <summary>
            根据PalletNo号码获取所有属于该PalletNo的Product对象
            根据Pallet在Product中按照PalletNo=@plt得到已绑定的unit：ProductID、CartonSN、CUSTSN
            </summary>
            <param name="dn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControlByTypeCodeAndStation(System.String,System.String,System.String)">
            <summary>
            2.根据type,code和station获取runintimecontrol数据(添加)
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControlExceptId(System.String,System.String,System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCombinedQtyByShipmentNo(System.String)">
            <summary>
            根据shipmentNo获取所有属于该deliveryNo的Product的数量
            </summary>
            <param name="deliveryNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertTSModel(IMES.DataModel.TsModelInfo)">
            <summary>
            Insert to TSModel
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetTsModelList(IMES.DataModel.TsModelInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteTsModel(System.String,System.String)">
            <summary>
            Delete from TSModel
            </summary>
            <param name="mark"></param>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRunInTimeControlByTypeAndTestStation(System.String,System.String,System.String)">
            <summary>
            根据Type和TestStation获得RunInTimeControl
            </summary>
            <param name="type"></param>
            <param name="testStation"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByPalletNoListOrderByCustSN(System.Collections.Generic.IList{System.String})">
            <summary>
            2. 
            查询IMES_FA..Product 表，取得palletNoLst对应的ProductModel记录集,按照Customer S/N 升序排序
            </summary>
            <param name="palletNoLst"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetproductlistOrderByCustSN(System.Collections.Generic.IList{System.String})">
            <summary>
            3.
            根据prodNoList获得ProductModel列表，按照Customer S/N 升序排序
            </summary>
            <param name="prodNoList"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoCountByInfoType(System.String)">
            <summary>
            1.
            统计在IMES_FA..ProductInfo表里，根据传入的InfoType ，查询到InfoValue值相同的记录数;
            返回记录数（int），找不到返回 0;
            </summary>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAstRuleByCodeAndStationAndCheckTp(System.String,System.String,System.String)">
            <summary>
            3.使用code, station, checkTp查询IMES_FA..AstRule 表存在记录,返回该AstRule类型的记录;
            </summary>
            <param name="code"></param>
            <param name="station"></param>
            <param name="checkTp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAstRuleByCodeAndStationAndCust(System.String,System.String,System.String)">
            <summary>
            4.使用code, station, CUstName查询IMES_FA..AstRule 表存在记录，返回该AstRule类型数据;
            </summary>
            <param name="code"></param>
            <param name="station"></param>
            <param name="custName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoValue(System.String,System.String)">
            <summary>
            IMES_FA..ProductInfo表里，根据传入的prodId,InfoType，查询到的InfoValue值；
            </summary>
            <param name="prodId"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMaxIdexFromSupplierCodeByVendor(System.String)">
            <summary>
            1.数据表【supplier code】：
            根据vendor取得Max（idex）
            </summary>
            <param name="vendor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSpecialDetSpecialMaintainInfoList(System.String,System.String)">
            <summary>
            Select b.Tp,Type,@message=Message,Sno1, @lwc=L_WC, @mwc=M_WC from Special_Det a,Special_Maintain b where a.SnoId=@Productid and b.Type=a.Tp and b.SWC=”68”
            select b.Tp,Type,Message,Sno1 from Special_Det a,Special_Maintain b where a.SnoId=@Productid and b.Type=a.Tp and b.SWC=”8D” order by Type,b.Tp
            </summary>
            <param name="snoId"></param>
            <param name="wc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckProductInPrintLogRange(System.String)">
            <summary>
            在PrintLog中查找
            Start ProdId和End ProdId在BegNo和EndNo中范围内
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductlistByMac(System.String)">
            <summary>
            根据MAC取Product数据记录
            </summary>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistSpecialDet(System.String,System.String)">
            <summary>
            Special_Det中是否存在对应的记录(Tp=’ATSN7’/ ‘ATSN8’ and SnoId=@prdid)，
            </summary>
            <param name="tp"></param>
            <param name="snoid"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateSpecialDetSno1(System.String,System.String,System.String)">
            <summary>
            若存在，则Update Sno1=@astsn,Udt=getdate()
            </summary>
            <param name="sno1"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddSpecialDetInfo(IMES.DataModel.SpecialDetInfo)">
            <summary>
            否则Insert(Tp是’ATSN7’ or ‘ATSN8’)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductPart(System.String,System.String)">
            <summary>
            （新增加）Docking – IMES_FA..Product_Part 中有BomNodeType = 'PS'  的Part
            </summary>
            <param name="prodId"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetMessageListFromSpecialDetAndSpecialMaintain(System.String,System.String)">
            <summary>
            1.Other Tips 需要使用弹出Message Box 方式进行显示
            如果使用如下方法查询IMES_FA..Special_Det 和IMES_FA..Special_Maintain 表存在记录的话，那么就需要显示相关提示信息
            方法如下：
            SQL： SELECT b.[Message] FROM Special_Det a,Special_Maintain b 
                     WHERE a.SnoId=@Productid AND b.Type=a.Tp AND b.SWC='69' ORDER BY b.Type,b.Tp
            </summary>
            <param name="snoId"></param>
            <param name="swc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferByPnoListAndCode(System.String[],System.String)">
            <summary>
            SELECT PartNo,Tp,Qty FROM WipBuffer (nolock) 
            WHERE PartNo in (SELECT SPno FROM #Bom) AND Code=RTRIM(@Code)
            </summary>
            <param name="pnoList"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLightNoFromWipBufferByPnoListAndCode(System.String[],System.String)">
            <summary>
            SELECT LightNo FROM WipBuffer (nolock) 
            WHERE PartNo IN (SELECT partno FROM #wipbuffer) AND Code=RTRIM(@Code)
            </summary>
            <param name="pnoList"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferListByPnoListAndCode(System.String[],System.String)">
            <summary>
            SELECT * FROM WipBuffer (nolock) 
            WHERE PartNo IN (SELECT partno FROM #wipbuffer) AND Code=RTRIM(@Code)
            ORDER BY PartNo, LightNo
            </summary>
            <param name="pnoList"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByDeliveryNoAndPalletNo(System.String,System.String)">
            <summary>
            PAK Pallet Verify:
            查询IMES_FA..Product来获取
            </summary>
            <param name="deliveryNo"></param>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductsForUnbound(System.String)">
            <summary>
            update Product set DeliveryNo='',PalletNo='',CartonSN='',CartonWeight=0.0,PizzaID=''  
            where DeliveryNo =@DeliveryNo
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductInfoForUnbound(System.String,System.String)">
            <summary>
            delete ProductInfo from ProductInfo as I inner join Product as P ON I.ProductID = P.ProductID
            where I.InfoType=@InfoType and P.DeliveryNo=@DeliveryNo
            </summary>
            <param name="infoType"></param>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByPartTypeAndDescrLike(System.String,System.String,System.String)">
            <summary>
            MSCOA – IMES_FA..Product_Part 中有PartType = 'P1' 属性存在Descr LIKE 'COA%' 的Part
            CN Card – IMES_FA..Product_Part 中有PartType = 'P1' 属性存在Descr LIKE 'Home Card' 的Part
            </summary>
            <param name="prodId"></param>
            <param name="partType"></param>
            <param name="descrLike">底层实现不加%</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByLikePartType(System.String,System.String)">
            <summary>
            NYLON – IMES_FA..Product_Part 中有PartType LIKE ' NYLON%' 的Part
            Poser Card – IMES_FA..Product_Part 中有PartType LIKE ' Poster%' 的Part
            </summary>
            <param name="prodId"></param>
            <param name="partTypePrefix">底层实现参数后加%</param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartByPartTypeAndDescrLike(System.String,System.String,System.String)">
            <summary>
            IMES_FA..Product_Part 中有PartType = 'P1' 属性存在Descr LIKE 'COA%' 的Part
            IMES_FA..Product_Part 中有PartType = 'P1' 属性存在Descr LIKE 'Home Card' 的Part
            </summary>
            <param name="prodId"></param>
            <param name="partType"></param>
            <param name="descrLike">由上面参数赋予%或_</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCodeListFromKittingCode(IMES.DataModel.KittingCode)">
            <summary>
            SELECT Code FROM IMES2012_FA..KittingCode WHERE Type = 'FA Label' Order By Code
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCdsiastInfoList(IMES.DataModel.CdsiastInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            select @astsn2=Sno from CDSIAST nolock where Tp ='ASSET_TAG2'and SnoId=@prdId
            select @astsn1=Sno from CDSIAST nolock where Tp ='ASSET_TAG' and SnoId=@prdId
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetWipBuffersByStaCodeType(System.String,System.String,System.String)">
            <summary>
            use IMES2012_PAK
            select * from dbo.WipBuffer
            where KittingType=@kitType and 
            Station=@station and Code=@code
            </summary>
            <param name="station"></param>
            <param name="code"></param>
            <param name="kitType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteRunInTimeControlByTypeCodeAndTeststation(System.String,System.String,System.String)">
            <summary>
            根据type,code和teststation删除runintimecontrol数据
            </summary>
            <param name="type"></param>
            <param name="code"></param>
            <param name="teststation"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.PreQueryForChangeToBTDeffered(System.String)">
            <summary>
            select COUNT(1) from Product as P 
            inner join ProductStatus as S ON P.ProductID = S.ProductID
            INNER JOIN IMES2012_GetData.dbo.Line AS L ON L.Line = S.Line 
            WHERE P.Model=@Model AND ((L.Stage='FA') OR (L.Stage='PAK' AND S.Station ='69')) 
            </summary>
            <param name="modelName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ChangeToBTDeffered(System.String,System.String,System.String)">
            <summary>
            1.
            insert into ProductBT(ProductID,BT,Editor,Cdt,Udt)
            select P.ProductID,@BT,@Editor,GETDATE(),GETDATE() from Product as P 
            inner join ProductStatus as S ON P.ProductID = S.ProductID
            INNER JOIN IMES2012_GetData.dbo.Line AS L ON L.Line = S.Line 
            WHERE P.Model=@Model AND ((L.Stage='FA') OR (L.Stage='PAK' AND S.Station ='69')) 
            </summary>
            <param name="modelName"></param>
            <param name="editor"></param>
            <param name="bt"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.PreQueryForChangeToNonBT(System.String)">
            <summary>
            select COUNT(1) from ProductBT as B inner join Product as P on B.ProductID = P.ProductID
            inner join ProductStatus as S ON P.ProductID = S.ProductID
            INNER JOIN IMES2012_GetData.dbo.Line AS L ON L.Line = S.Line 
            WHERE P.Model=@Model AND ((L.Stage='FA') OR (L.Stage='PAK' AND S.Station ='69')) 
            </summary>
            <param name="modelName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ChangeToNonBT(System.String)">
            <summary>
            2.
            delete ProductBT 
            from ProductBT as B inner join Product as P on B.ProductID = P.ProductID
            inner join ProductStatus as S ON P.ProductID = S.ProductID
            INNER JOIN IMES2012_GetData.dbo.Line AS L ON L.Line = S.Line 
            WHERE P.Model=@Model AND ((L.Stage='FA') OR (L.Stage='PAK' AND S.Station ='69')) 
            </summary>
            <param name="modelName"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAllFaPaLightStations">
            <summary>
            1,sql:select * from FA_PA_LightSt order by pno
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckFaPaLightStationExist(System.String,System.String,System.String)">
            <summary>
            2,SQL:select count(*) from FA_PA_LightSt where pno=iecpn and family=family and stn=lightstation.存在返回true,不存在返回false.
            </summary>
            <param name="iecpn"></param>
            <param name="family"></param>
            <param name="lightStation"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddFaPaLightStationItem(IMES.DataModel.FaPaLightstInfo)">
            <summary>
            3, Insert
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteFaPaLightStationItem(System.Int32)">
            <summary>
            4, Delete
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateFaPaLightStationItem(IMES.DataModel.FaPaLightstInfo)">
            <summary>
            5,Sql:update FA_PA_LightSt set 各个字段 where id=[id]
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddKittingBoxSNItem(IMES.DataModel.KittingBoxSNInfo)">
            <summary>
            Insert
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductByPartSnAndStations(System.String,System.String[])">
            <summary>
            If exists (select a.ProductID from Product a (nolock), Product_Part b (nolock), ProductStatus c (nolock) where a.ProductID=b.ProductID and b.PartSn=@coano and a.ProductID=c.ProductID and (c.Station='85' or c.Station='99'))
            </summary>
            <param name="partSn"></param>
            <param name="stations"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductByPartSnAndStationsWithPizzaPart(System.String,System.String[])">
            <summary>
            If exists (select a.ProductID from Product a (nolock), Pizza_Part b (nolock), ProductStatus c (nolock) where a.PizzaID = b.PizzaID and b.PartSn = @coano and a.ProductID=c.ProductID and (c.Station='85' or c.Station='9A'))
            </summary>
            <param name="partSn"></param>
            <param name="stations"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductAndCustInfoListByPartSn(System.String)">
            <summary>
            Select a.ProductID, a.CUSTSN, c.CustPN from Product a (nolock), Product_Part b (nolock), Model c (nolock) where a.ProductID=b.ProductID and b.PartSn=@coano and a.Model=c.Model
            </summary>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByPartSn(System.String,System.String)">
            <summary>
            delete Product_Part where PartSn=@coano and ProductID=@productID
            </summary>
            <param name="prodId"></param>
            <param name="partSn"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCheckItemListFromITCNDCheckSetting(System.String)">
            <summary>
            ITCNDCheckSetting : 根据Line字段来查询.  SELECT [CheckItem],[CheckType],[CheckCondition] FROM [IMES2012_FA].[dbo].[ITCNDCheckSetting] where Line=''
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductListByModel(System.String)">
            <summary>
            Get Products By Model.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetReturnStnListFromProductRepair(System.String,System.Int32)">
            <summary>
            Select ReturnStn from ProductRepair a, ProductRepair_defectInfo b where a.ID=b.ProductRepairID and a.ProductID=ProductID and a.Status=0
            </summary>
            <param name="prodId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeByVendor(System.String)">
            <summary>
            select top 1 * from SupplierCode where Vendor=@Vendor order by Idex asc
            </summary>
            <param name="vendor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeByVendor(System.String,System.String)">
            <summary>
            select top 1 * from SupplierCode where Vendor=@Vendor and Idex > @Idex order by Idex asc
            </summary>
            <param name="vendor"></param>
            <param name="idex"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeByVendorAndCodeLength(System.String,System.String)">
            <summary>
            select top 1 Code from SupplierCode where Vendor = @vendor and LEN(RTRIM(Code)) = LEN(@ast)
            </summary>
            <param name="vendor"></param>
            <param name="idex"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductInfoWhoseInfoValueBeenOccupiedByAnotherProduct(System.String,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductInfo(System.String,System.String)">
            <summary>
            select ProductInfo.InfoValue from ProductInfo where InfoType=Item# and ProductInfo.ProductID=ProductID#
            </summary>
            <param name="productId"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLatestFailLog(System.String)">
            <summary>
            Condition：ProductID=PrdID and Status=0 Order By Cdt Desc
            </summary>
            <param name="productId">productId</param>
            <returns>ProductLog</returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductPartByPartNo(System.String,System.String)">
            <summary>
            delete Product_Part where PartNo=@partNo and ProductID=@productID
            </summary>
            <param name="prodId"></param>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartsByPartSn(System.String)">
            <summary>
            根据partSn获得ProductPart列表.
            </summary>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLabelKittingCodeList(System.String)">
            <summary>
            SELECT Code FROM IMES_FA..LabelKitting WHERE Type='FA Label' Order By Code
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductBT(System.String)">
            <summary>
            EXISTS (SELECT * FROM FA.dbo.ProductBT (nolock) WHERE ProductId=@SnoId)
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetWipBufferListFromWipBuffer(System.String,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductStatuses(IMES.FisObject.FA.Product.ProductStatus,System.String[])">
            <summary>
            Update ProductStatus, Station=Dismantle Station, Status=1
            setValue哪个字段赋值就有更新哪个字段;
            </summary>
            <param name="setValue"></param>
            <param name="prodIds"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.InsertProductLogs(IMES.FisObject.FA.Product.ProductLog[])">
            <summary>
            Insert ProductLog WC=38.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProducts(IMES.FisObject.FA.Product.Product,System.String[])">
            <summary>
            Update Products
            setValue哪个字段赋值就有更新哪个字段;
            </summary>
            <param name="setValue"></param>
            <param name="prodIds"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteProductParts(System.String[],IMES.FisObject.Common.Part.ProductPart)">
            <summary>
            Delete from Product_Part where ProductID=productID# and PartType=KP#
            Delete from Product_Part where ProductID=productID# and BomNodeType=’AT’
            otherCondition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="prodIds"></param>
            <param name="otherCondition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.IsRealEPIAReflow(System.String,System.String,System.String)">
            <summary>
            IF Exists (select ID FROM QCStatus WHERE ProductID= ProductID# AND Tp='PIA' AND Remark='1')
            </summary>
            <param name="productID"></param>
            <param name="tp"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetQCStartTime(System.DateTime)">
            <summary>
            得到计算已抽样数量的开始时间@QCStarTime：
            如果当前时间在当天的7：50之前，则计算已抽样数量的开始时间@QCStarTime为前一天的7:50; 
            如果当前时间在当天的7：50之后则则计算已抽样数量的开始时间@QCStarTime为当天的7:50	
            IF getdate() ＜ convert(char(10),getdate(),111)  + ' 07:50:00.000'
            select convert(char(10),getdate()-1,111)+' 07:50:00.000'
            Else
            select convert(char(10),getdate(),111)+' 07:50:00.000'
            </summary>
            <param name="t">赋Hour和Minute即可</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCTOSampleCount(System.String,System.DateTime,System.String)">
            <summary>
            select COUNT(DISTINCT ProductID) from QCStatus where Tp='PIA' and Cdt>=@QCStartTime and substring(Model,10,2)=substring(@ProdModel,10,2)
            </summary>
            <param name="tp"></param>
            <param name="qcStartTime"></param>
            <param name="prodModel"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCTOSampleCount(System.String,System.DateTime,System.String,System.String)">
            <summary>
            select COUNT(DISTINCT ProductID) from QCStatus where Tp='PIA' and Cdt>=@QCStartTime and substring(Model,10,2)=substring(@ProdModel,10,2) and Model in (select Model from Model where Family=@prodFamily)
            </summary>
            <param name="tp"></param>
            <param name="qcStartTime"></param>
            <param name="prodModel"></param>
            <param name="prodFamily"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetNCTOSampleCount(System.String,System.DateTime)">
            <summary>
            select COUNT(DISTINCT ProductID) from QCStatus where Tp='PIA' and Cdt>=@QCStartTime
            </summary>
            <param name="tp"></param>
            <param name="qcStartTime"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSampleCount(System.String,System.DateTime,System.String)">
            <summary>
            Select count(DISTINCT ProductID) from QCStatus where line=@pdline and Tp=@Tp and Cdt>@QCStartTime
            </summary>
            <param name="tp"></param>
            <param name="qcStartTime"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSampleCount(System.String,System.String)">
            <summary>
            SELECT @cnt=count(DISTINCT ProductID) FROM QCStatus WHERE Tp='PAQC' AND LEFT(Line, 1)=LEFT(@pdline ,1)
            </summary>
            <param name="tp"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartNoAndLightNoFromWipBuffer(System.String,System.String)">
            <summary>
            SELECT PartNo,LightNo,Sub 
            FROM [WipBuffer] where [Code] = @family
            UNION
            SELECT distinct PartNo,LightNo,Sub 
            FROM [KitLoc] a,[WipBuffer] b 
            where a.PdLine=b.Code 
            and b.Tp like a.PartType+'%'
            and a.Family=@family 
            and LEFT(a.PdLine,1)=LEFT(@line,1) 
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartNoAndLightNoFromWipBufferWithLine(System.String,System.String)">
            <summary>
            SELECT PartNo,LightNo,Sub 
            FROM [WipBuffer] where [Code] = @family AND Line=@Line 
            UNION
            SELECT distinct PartNo,LightNo,Sub 
            FROM [KitLoc] a,[WipBuffer] b 
            where a.PdLine=b.Code 
            and b.Tp like a.PartType+'%'
            and a.Family=@family 
            and LEFT(a.PdLine,1)=LEFT(@line,1) 
            </summary>
            <param name="family"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartNoAndLightNoFromWipBufferForDoubleLine(System.String,System.String)">
            <summary>
            SELECT PartNo,LightNo,Sub 
            FROM [WipBuffer] where [Code] = @family
            UNION
            SELECT  distinct PartNo,LightNo,Sub  
            FROM [KitLoc]  a,[WipBuffer] b 
            where a.PdLine=b.Code
            and b.Tp like a.PartType+'%' 
            and a.Family=@family 
            and b.Line=@Line 
            and LEFT(a.PdLine,1)=LEFT(@line,1) 
            </summary>
            <param name="family"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartNoAndLightNoFromWipBufferWithLineForDoubleLine(System.String,System.String)">
            <summary>
            SELECT PartNo,LightNo,Sub 
            FROM [WipBuffer] where [Code] = @family AND Line=@Line 
            UNION
            SELECT distinct PartNo,LightNo,Sub  
            FROM [KitLoc] a,[WipBuffer] b 
            where a.PdLine=b.Code 
            and b.Tp like a.PartType+'%' 
            and a.Family=@family 
            and b.Line=@Line 
            and LEFT(a.PdLine,1)=LEFT(@line,1) 
            </summary>
            <param name="family"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistLightNoFromKitLocAndWipBuffer(System.String,System.String)">
            <summary>
            if exists(
            SELECT distinct PartNo,LightNo 
            FROM [KitLoc] a,[WipBuffer] b 
            where a.PdLine=b.Code 
            and a.Family=@family 
            and b.Tp like a.PartType+'%' 
            and b.Line=@Line 
            and LEFT(a.PdLine,1)=LEFT(@line,1) 
            ) 
            </summary>
            <param name="familhy"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetOQCProdRepairList(System.String,System.Int32,System.String)">
            <summary>
            select * from ProductRepair_DefectInfo 
            where ProductRepairID in (select ID from ProductRepair where ProductID='F21400001' and Status=0) 
            and DefectCode in (select DefectCode from DefectCode where Type='PRD')
            </summary>
            <param name="prodId"></param>
            <param name="status"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetLatestLogByWcAndStatus(System.String,System.String,System.Int32)">
            <summary>
            ProductLog 表latest record WC=66, IsPass=1 如不存在则提示“请先进行Image DownLoad”
            </summary>
            <param name="productId"></param>
            <param name="station"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BackUpProductByDn(System.String,System.String)">
            <summary>
            insert into UnpackProduct (各字段) select 相应字段 from Product where DeliveryNo='输入DN' and (Model like 'PC%' or Model like 'QC%')
            </summary>
            <param name="dn"></param>
            <param name="uEditor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BackUpProductStatusByDn(System.String,System.String)">
            <summary>
            insert into UnpackProductStatus (各字段) select 相应字段 from ProductStatus where ProductID in(select ProductID from Product where DeliveryNo='输入DN' and (Model like 'PC%' or Model like 'QC%'))
            </summary>
            <param name="dn"></param>
            <param name="uEditor"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BackUpProductPartByDn(System.String,System.String)">
            <summary>
            insert into UnpackProduct_Part (各字段) select 相应字段 from Product_Part where ProductID in(select ProductID from Product where DeliveryNo='输入DN' and (Model like 'PC%' or Model like 'QC%'))
            </summary>
            <param name="dn"></param>
            <param name="uEditor"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.BackUpProductPartByDn(System.String,IMES.FisObject.Common.Part.ProductPart,IMES.FisObject.Common.Part.ProductPart)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.BackUpProductInfoByDn(System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            insert into UnpackProductInfo (各字段) select 相应字段 from ProductInfo where ProductID in(select ProductID from Product where DeliveryNo='输入DN' and (Model like 'PC%' or Model like 'QC%')) and InfoType in (传入的infoTypeNames列表))
            </summary>
            <param name="dn"></param>
            <param name="uEditor"></param>
            <param name="infoTypeNames"></param>       
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateProductPart(IMES.FisObject.Common.Part.ProductPart,IMES.FisObject.Common.Part.ProductPart)">
            <summary>
            Update Product_Part PartSN= PCA..PCB. CVSN Where CheckItemType=’CPU’ and ProductID=ProductID#
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPAKitlocByStation(System.String)">
            <summary>
            SQL: select * from PAKitLoc where Station=[station]
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPAKitlocByStationAndPdLine(System.String,System.String)">
            <summary>
            SQL: select * from PAKitLoc where Station=[station] and PdLine=[pdline]
            </summary>
            <param name="station"></param>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductLogsOrderByCdtDesc(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductLogsOrderByCdtDesc(System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetBTOSampleCount(System.String,System.DateTime,System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistItcndCheckQcHold(System.String,System.String[])">
            <summary>
            若ITCNDCheckQCHold存在IsHold=1 and (Code=Model或者Code=CUSTSN#)
            </summary>
            <param name="isHold"></param>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetITCNDCheckQCHoldList">
            <summary>
            # 获得所有ITCNDCheckQCHold记录(按Code栏位排序)
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetExistITCNDCheckQCHold(IMES.DataModel.ITCNDCheckQCHoldDef)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddITCNDCheckQCHold(IMES.DataModel.ITCNDCheckQCHoldDef)">
            <summary>
            # 保存code对应数据到数据库（需要底层处理时加上cdt和udt）
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveITCNDCheckQCHold(IMES.DataModel.ITCNDCheckQCHoldDef)">
            <summary>
            # 删除code对应的数据：
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ChangeITCNDCheckQCHold(IMES.DataModel.ITCNDCheckQCHoldDef,IMES.DataModel.ITCNDCheckQCHoldDef)">
            <summary>
            # 更新对应的数据，连Code也可更新
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetExistITCNDCheckSetting(IMES.DataModel.ITCNDCheckSettingDef)">
            <summary>
            操作[ITCNDCheckSetting]表，Get：获取该表记录.
            若要所有记录,传一个new ITCNDCheckSettingDef()即可.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddITCNDCheckSetting(IMES.DataModel.ITCNDCheckSettingDef)">
            <summary>
            操作[ITCNDCheckSetting]表，Insert：添加一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.RemoveITCNDCheckSetting(IMES.DataModel.ITCNDCheckSettingDef)">
            <summary>
            操作[ITCNDCheckSetting]表，Delete：删除一条记录
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.ChangeITCNDCheckSetting(IMES.DataModel.ITCNDCheckSettingDef,IMES.DataModel.ITCNDCheckSettingDef)">
            <summary>
            操作[ITCNDCheckSetting]表，Update：更新某条记录
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.Callop_FAKitting_MiddleWare(System.String,System.String,System.String,System.String)">
            <summary>
            由于FA Kitting Input产线测试结果不太良好，现将其部分业务功能提取到SP，直接调用SP去实现：
            名称：op_FAKitting_MiddleWare.sql
            参数：
                @pid char(9) ,--ProductID
                @boxid char(4), --4码BOXID
                @editor char(30),
                @kitpdline char(10)—PdLine
                
            结果：(返回的结果集还要看当时最新的存储过程部署代码)
            OK,Descr--执行成功
            NG,'1',Descr--执行失败
            </summary>
            <param name="pid"></param>
            <param name="boxId"></param>
            <param name="editor"></param>
            <param name="kitPdLine"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetSnoDetPoMoInfoList(IMES.DataModel.SnoDetPoMoInfo)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.AddSnoDetPoMoInfo(IMES.DataModel.SnoDetPoMoInfo)">
            <summary>
            2、	添加记录
            功能：向SnoDet_PoMo表中添加一条记录
            入参：DS item
            出参：无
            返回值：void
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.DeleteSnoDetPoMoInfo(IMES.DataModel.SnoDetPoMoInfo)">
            <summary>
            3、	删除记录
            功能：从SnoDet_PoMo表中删除SnoId值为输入值的记录
            入参：string id
            出参：无
            返回值：void 
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.UpdateSnoDetPoMoInfo(IMES.DataModel.SnoDetPoMoInfo,IMES.DataModel.SnoDetPoMoInfo)">
            <summary>
            4、	更新记录
            功能：在SnoDet_PoMo表中更新SnoId值为输入值的记录各字段为输入结构对应字段值，Cdt字段不更新，Udt更新为GetDate()得到的值
            入参：string id, DS item
            出参：无
            返回值：void
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistSnoDetPoMoInfo(IMES.DataModel.SnoDetPoMoInfo)">
            <summary>
            5、	根据关键字查找记录是否已存在
            功能：查找在SnoDet_PoMo表中是否存在SnoId值为输入值的记录
            入参：string id
            出参：无
            返回值：bool
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetModelPassQty(System.String,System.String)">
            <summary>
            Select Model,count(distinct ProductID) as Cnt 
            from ProductLog where Station='40' and Line=[PdLine] 
            and Cdt > convert(char(10),getdate(),111) 
            group by Model order by Model 
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.IsSpecialCTO(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetFactCartonQtyByPalletNo(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetCombinedQtyByDN_WithCartonSNNotNull(System.String)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfProductLogByMo(System.String,System.String)">
            <summary>
            SELECT @Pass = COUNT(DISTINCT ProductID) FROM ProductLog NOLOCK
            WHERE Station = @COOStation
            AND ProductID IN (SELECT ProductID FROM Product NOLOCK WHERE MO = @Mo)
            </summary>
            <param name="station"></param>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetQCStatusOrderByCdtDesc(System.String,System.String[])">
            <summary>
            1、获取QCStatus（Condition：QCStatus.ProductID and Tp in (‘PIA’,’PIA1’)），按Cdt倒序排列
            </summary>
            <param name="productID"></param>
            <param name="tps"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetQCStatusOrderByUdt(System.String,System.String[])">
            <summary>
            2、SELECT @status = [Status] FROM [IMES_FA].[dbo].[QCStatus] where (Tp='PIA' or ‘PIA1’) and [ProductID]= @id order by [Udt]
            </summary>
            <param name="productID"></param>
            <param name="tps"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetQCStatusOrderByUdtDesc(System.String,System.String[])">
            <summary>
            SELECT @status = [Status] FROM [IMES_FA].[dbo].[QCStatus] where  (Tp='PIA' or ‘PIA1’) and [ProductID]= @id order by [Udt] DESC
            </summary>
            <param name="productID"></param>
            <param name="tps"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetQCStatusOrderByUdtDesc(System.String)">
            <summary>
            select top 1 @QCStatusID=ID, @PrdQCStatus = Status from QCStatus where ProductID = @ProductID order by Udt desc
            </summary>
            <param name="productID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartSnPrefixListFromProductPart(IMES.FisObject.Common.Part.ProductPart)">
            <summary>
            3、	获取disntinct (Product_Part.PartSn的前5码)（Condition: Product_Part.PartType=’WIRELESS’ and ProductID=[ProductID]）
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetInfoValuePrefixFromProductInfo(System.String[],System.String)">
            <summary>
            select distinct left(InfoValue,CHARINDEX('M',InfoValue)-3) from ProductInfo nolock
                where InfoType = 'VGA'
            and RTRIM(ProductID) In ([Selected Product])
            and CHARINDEX('M',InfoValue)>3
            </summary>
            <param name="prodIds"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetPartSnPrefixFromProductPart(System.String[],System.String)">
            <summary>
            select distinct left(PartSn,CHARINDEX ('M',PartSn)-3) from Product_Part nolock
                where BomNodeType = 'MB'
            and RTRIM(ProductID) In ([Selected Product])
            and CHARINDEX('M',PartSn)>3
            </summary>
            <param name="prodIds"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfProductByModelAndStation(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductIdsByModelAndStation(System.String,System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetNewestCdtFromProductInfo(System.String,System.String[])">
            <summary>
            select @Win8 = MAX(Cdt) from ProductInfo 
            where ProductID = @Prod 
            and Upper(InfoType) in ('P/N','KEY','HASH')
            </summary>
            <param name="productId"></param>
            <param name="infoTypes"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetNewestCdtFromProductLog(System.String,System.String,System.Int32)">
            <summary>
            select @Log = Cdt from ProductLog  
                where ProductID = @Prod 
                and Station = '66'
                and Status =‘1’
            order by Cdt desc
            </summary>
            <param name="productId"></param>
            <param name="station"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetDefectForProductRepair(System.Int32)">
            <summary>
            select c.Defect + '    ' +c.Descr as Descr 
            FROM ProductRepair a, ProductRepair_DefectInfo b , DefectCode c
            where a.ID = b. ProductRepairID 
            and b.DefectCode = c.Defect
            and a.ID = @RepairID
            </summary>
            <param name="repairId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetRemarkListOfProductRepairDefectInfo(System.Int32)">
            <summary>
            SELECT b.Remark
            FROM ProductRepair AS a INNER JOIN ProductRepair_DefectInfo AS b ON a.ID = b.ProductRepairID
            where a.ID = @RepairID
            </summary>
            <param name="repairId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetNewestProductRepairId(System.String)">
            <summary>
            select TOP 1 ID from ProductRepair nolock
            where ProductID = @Prd
            and Status = '1'
            order by Udt desc
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetNewestProductRepairIdRegardlessStatus(System.String)">
            <summary>
            select TOP 1 ID from ProductRepair nolock
            where ProductID = @Prd
            order by Udt desc
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfCurrentDayByModelAndStation(System.String,System.String)">
            <summary>
            功能：获取当天成功通过某站的指定Model的product数
            Sql：
            SELECT COUNT(DISTINCT ProductID) FROM ProductLog NOLOCK 
                WHERE Model = @Model
                   AND Station = @Station
                   AND CONVERT(char(10), Cdt, 121) = CONVERT(char(10), GETDATE(), 121)
            </summary>
            <param name="model"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetAverageModelWeightOfCurrentDay(System.String,System.String)">
            <summary>
               功能：获取当天成功通过UnitWeight站的指定Model的所有product的平均重量
            SELECT AVG(UnitWeight)
                   FROM Product NOLOCK
                   WHERE ProductID IN (SELECT DISTINCT ProductID FROM ProductLog NOLOCK 
                                        WHERE Model = @Model
                                            AND Station = @Station
                                            AND CONVERT(char(10), Cdt, 121) = CONVERT(char(10), GETDATE(), 121))
            </summary>
            <param name="model"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetCauseListByProductRepairId(System.Int32)">
            <summary>
            select distinct Cause from ProductRepair_DefectInfo where ProductRepairID = @RepairID
            </summary>
            <param name="repId"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductLogList(IMES.FisObject.FA.Product.ProductLog,System.String[])" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.CreateAlarmWithSpecifiedDefectForFA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.UpdateForCreateAlarmWithDefectForFA(IMES.DataModel.AlarmSettingInfo,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.CreateAlarmWithExcludedDefectForFA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.CreateAlarmWithAllDefectForFA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.CreateAlarmWithYieldForFA(IMES.DataModel.AlarmSettingInfo)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListUpperCaseItemType(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            1.
            获取Win8机器ImageDownLoad上传的最新的P/N：
            @ImgPN 
            ProductInfo.InfoValue 
            Condtion: Uppder(ProductInfo.InfoType) = ‘P/N’ and ProductID=[ProductID] order by Udt desc
            </summary>
            <param name="proid"></param>
            <param name="itemTypes"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetStationInfoListFromProductRepair(System.String,System.Int32)">
            <summary>
            select distinct c.Station + ' ' +c.Descr as Text, c.Station as Value from ProductRepair a 
            inner join ProductRepair_DefectInfo b 
            on a.ID = b.ProductRepairID
            left join Station c 
            on b.ReturnStn = c.Station
            where a.ProductID = '@Product'
            and a.Status = '0'
            order by c.Station
            </summary>
            <param name="product"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListByConditions(IMES.FisObject.FA.Product.IProduct,IMES.FisObject.FA.Product.IProduct)">
            <summary>
            SELECT * FROM Product NOLOCK WHERE CartonSN = @CartonNo AND PalletNo = ''
            </summary>
            <param name="eqCondition"></param>
            <param name="isNullCondition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListByConditionsNotNull(IMES.FisObject.FA.Product.IProduct,IMES.FisObject.FA.Product.IProduct)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListByPizzaPartSn(System.String)">
            <summary>
            SELECT * FROM [IPC_IMES2012_0330].[dbo].[Product] Where PizzaID In (select PizzaID from [IPC_IMES2012_0330].[dbo].[Pizza_Part] where PartSn=@PartSn)
            </summary>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductRepairInfoListDataTable(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.BackupProductRepairDefectInfo(System.Int32,System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductRepairDefectInfo(IMES.DataModel.RepairInfo)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetSupplierCodeByVendorsAndAstLike(System.String[],System.String)">
            <summary>
            Select top 1 @Verdor = Vendor from SupplierCode  where Vendor in ('@2TG') and @ast like  REPLACE(Code,'X','_')
            </summary>
            <param name="vendors"></param>
            <param name="ast"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckTheBoxId(IMES.FisObject.FA.Product.IProduct)">
            <summary>
            检查BoxId是否已经被另一个Product占用了
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetProductWithAlarm(IMES.DataModel.AlarmInfo)" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartByPartLikeType(System.String,System.String)">
            <summary>
            select * from Product_Part where ProductID = @ProductID and PartType like '%CPU%'
            </summary>
            <param name="productId"></param>
            <param name="partTypeLike"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductInfoListByPalletNo(IMES.FisObject.FA.Product.ProductInfo,System.String)">
            <summary>
            select * from ProductInfo where InfoType ='BoxId' and
            ProductID in (select ProductID from Product where PalletNo = @PalletNo)
            </summary>
            <param name="condition"></param>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistCartonInfoWithProduct(System.String,System.String)">
            <summary>
            EXISTS(SELECT * FROM CartonInfo a (NOLOCK), Product b (NOLOCK)
            WHERE a.CartonNo = b.CartonSN
            AND b.PalletNo = @PalletNo 
            AND a.InfoType = 'BoxId')
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductWithCartonInfo(System.String,System.String)">
            <summary>
            EXISTS(SELECT * FROM Product b (NOLOCK) LEFT JOIN CartonInfo a (NOLOCK)
            ON a.CartonNo = b.CartonSN 
            AND b.PalletNo = @PalletNo 
            AND a.InfoType = 'BoxId'
            WHERE ISNULL(a.InfoValue, '') = '')
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetInfoValueFromCartonInfoWithProduct(System.String,System.String)">
            <summary>
            SELECT @BoxId = a.InfoValue FROM CartonInfo a (NOLOCK), Product b (NOLOCK)
            WHERE a.CartonNo = b.CartonSN
            AND b.PalletNo = @PalletNo
            AND a.InfoType = 'BoxId'
            GROUP BY InfoValue
            HAVING COUNT(*) > 1
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistProductWithCartonInfo2(System.String,System.String)">
            <summary>
            SELECT * FROM (SELECT * FROM Product WHERE PalletNo = @PalletNo) b
            LEFT JOIN (SELECT * FROM CartonInfo WHERE InfoType = 'BoxId') a
            ON b.CartonSN = a.CartonNo WHERE ISNULL(a.InfoValue, '') = ''
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetInfoValueList(System.String,System.String)">
            <summary>
            SELECT @BoxId = a.InfoValue FROM (SELECT DISTINCT a.CartonNo, a.InfoValue FROM CartonInfo a (NOLOCK), Product b (NOLOCK)
            WHERE a.CartonNo = b.CartonSN
            AND a.InfoType = 'BoxId'
            AND b.PalletNo = @PalletNo) a
            GROUP BY InfoValue
            HAVING COUNT(*) > 1
            </summary>
            <param name="palletNo"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetSnoDetPoMoInfoList_NOT98DN" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.FA.Product.IProductRepository.GetCountOfInfoValueInProductInfo(System.String,System.String[])" -->
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.CheckExistCustomSn(System.String)">
            <summary>
            EXISTS (SELECT * FROM FA.dbo.Product (nolock) WHERE CUSTSN=@CUSTSN)
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.Product.IProductRepository.GetProductPartsByValue(System.String)">
            <summary>
            从Product_Part表根据Value取多条记录
            </summary>
            <param name="partNo"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Warranty.Warranty">
            <summary>
             Warranty对应实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.Warranty.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Id">
            <summary>
             Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Customer">
            <summary>
             Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Type">
            <summary>
             Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.DateCodeType">
            <summary>
             DateCodeType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.WarrantyFormat">
            <summary>
             WarrantyFormat
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.ShipTypeCode">
            <summary>
             ShipTypeCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.WarrantyCode">
            <summary>
             WarrantyCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Descr">
            <summary>
            PdLine描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Warranty.Warranty.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Warranty.Warranty.WarrantyType">
            <summary>
            Warranty类型
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Warranty.Warranty.ShippingTypeCode">
            <summary>
            ShippingTypeCode
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TPCB.TPCB_Info">
            <summary>
            Product生产订单类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.TPCB_Info.#ctor">
            <summary>
            TPCB Class
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.TPCB_Info.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            TPCB数据属性
            </summary>
            <param name="Family"></param>
            <param name="PdLine"></param>
            <param name="Type"></param>
            <param name="PartNo"></param>
            <param name="Vendor"></param>
            <param name="DCode"></param>
            <param name="editor"></param>
            <param name="cdt"></param>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.PdLine">
            <summary>
            PdLine
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.PartNo">
            <summary>
            PartNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Vendor">
            <summary>
            Vendor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Dcode">
            <summary>
            Vcode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Udt">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB_Info.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.Process">
            <summary>
            Process隅砱MB/Product婓跪桴腔揭燴霜最
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Process.Process.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Process.Process.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.process">
            <summary>
            霜最靡趼
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Descr">
            <summary>
            鏡扴陓洘
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.ProcessStations">
            <summary>
            Process婦漪腔桴霜最扢隅沭醴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.Process.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.FindAssemblyCode(System.String)">
            <summary>
            根据AssemblyCode查找AssemblyCode对象列表
            </summary>
            <param name="assCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodeInfo(System.String,System.String)">
            <summary>
            根据AssemblyCode和InfoType查找AssemblyCode
            </summary>
            <param name="assemblyCode"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodesByModel(System.String)">
            <summary>
            select distinct AssemblyCode from IMES_GetData..AssemblyCode where PartNo IN (Select Value from IMES_GetData..ModelInfo where Name='PN' and Model='')
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodesByPartNo(System.String)">
            <summary>
            select distinct AssemblyCode from AssemblyCode where PartNo=''
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodeListByPartNo(System.String)">
            <summary>
            根据partNo获得AssemblyCode对象列表
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodeList(System.String)">
            <summary>
            取得PartNo下的所有AssemblyCode数据的list(按Family、Model、Region列的字符序排序)
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.CheckExistedAssemblyCode(System.String,System.String)">
            <summary>
            根据partNo和assemblyCode获得AssemblyCode ID列表
            </summary>
            <param name="partNo"></param>
            <param name="assemblyCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetAssemblyCodeList(System.String,System.String)">
            <summary>
            取得model, PartNo下的所有AssemblyCode数据的list(按字符序排序)
            规则:
            1、	取得该Model的Family和Region栏位的数据。
            2、	在AssemblyCode表中搜索此PartNo和Model直接对应的AssemblyCode。若记录集不为空，则返回此结果集，放弃后续步骤。
            3、	在AssemblyCode表中搜索此PartNo、Family、Region和空Model直接对应的AssemblyCode。若记录集不为空，则返回此结果集，放弃后续步骤。
            4、	在AssemblyCode表中搜索此PartNo、Family和空Region、Model直接对应的AssemblyCode。若记录集不为空，则返回此结果集，放弃后续步骤。
            5、	在AssemblyCode表中搜索此PartNo和空Family、Region、Model直接对应的AssemblyCode。返回此结果集。
            </summary>
            <param name="model"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.CheckExistedAssemblyCode(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据partNo, family, model, region,并且不等于assemblyCodeId,查询AssemblyCode的数目
            </summary>
            <param name="partNo"></param>
            <param name="family"></param>
            <param name="model"></param>
            <param name="region"></param>
            <param name="assemblyCodeId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.AddAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            新增一条AssemblyCodeInfo的记录数据
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.SaveAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            修改一条AssemblyCodeInfo的记录数据
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.DeleteAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            删除一条AssemblyCodeInfo的记录
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.CheckSameAssemblyCode(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IAssemblyCodeRepository.GetPartTypeDescr(System.String,System.String)" -->
        <member name="T:IMES.FisObject.Common.Model.QCRatio">
            <summary>
             喲欴薹扢隅
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.QCRatio.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            喲欴薹扢隅勤砓凳婖滲杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.QCRatio.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.QCRatio.OQCRatio">
            <summary>
            QCRatio
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.QCRatio.EOQCRatio">
            <summary>
            EOQCRatio
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.QCRatio.PAQCRatio">
            <summary>
            PAQCRatio
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.QCRatio.RPAQCRatio">
            <summary>
            RPAQCRatio
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.FisBOM.PartUnit">
            <summary>
            Part腔珨跺扽俶ㄛ 蜆濬腔藩跺妗瞰ㄛ桶尨PartCheck爵彶摩善腔珨跺Part扽俶硉(SN, PN, GCode...)
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.FisBOM.PartUnit._flatBomItemGuid">
            <summary>
            Matched FlatBomItem GUID
            </summary>      
        </member>
        <member name="F:IMES.FisObject.Common.FisBOM.PartUnit._isTestKP">
            <summary>
            For TestKP case
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.FisBOM.PartUnit._tag">
            <summary>
            attached object
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.PartUnit.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
             <summary>
            pn=PartID,sn=PartSN,type=BomNodeType,ValueType=PartType,itemType=CheckItemType
             </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.PartUnit.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
             <summary>
            pn=PartID,sn=PartSN,type=BomNodeType,ValueType=PartType,itemType=CheckItemType
            isPreCheckedPart:whether is PreChecked PartUnit default value is false 
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.Pn">
            <summary>
            Product_Part.PartID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.Sn">
            <summary>
            Product_Part.PartSN
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.Type">
            <summary>
            Product_Part.BomNodeType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.ValueType">
            <summary>
            Product_Part.PartType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.ItemType">
            <summary>
            Product_Part.CheckItemType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.IECPn">
            <summary>
            Product_Part.IECPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.CustPn">
            <summary>
            Product_Part.CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.ProductId">
            <summary>
            Product_Part.ProductId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.CurrentSession">
            <summary>
             set CurrentSession object
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.IsPrecheckedPart">
            <summary>
            Pre-Cheched Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.FlatBomItemGuid">
            <summary>
            Matched FlatBomItem GUID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.IsTestKP">
            <summary>
            Is TestKP Case
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.PartUnit.Tag">
            <summary>
            attached object
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.MBCode.#ctor(System.String,System.String,System.Int16,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            默认构造函数
            </summary>
            <param name="mbCode"></param>
            <param name="description"></param>
            <param name="multQty"></param>
            <param name="editor"></param>
            <param name="cdt"></param>
            <param name="udt"></param>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBCode.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryEx.DeliveryNo">
            <summary>
            Delivery No.
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryEx.ShipmentNo">
            <summary>
            shipment
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryEx.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryEx.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryEx.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.Carton.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.Carton.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository">
            <summary>
            CartonSSCC的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.DeleteCartonSCC(System.Collections.Generic.IList{System.String})">
            <summary>
            根据cartonSNList删除CartonSCC表的记录
            </summary>
            <param name="cartonSNList"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.AddCartonStatusInfo(IMES.DataModel.CartonStatusInfo)">
            <summary>
            INSERT CartonStatus
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.AddCartonLogInfo(IMES.DataModel.CartonLogInfo)">
            <summary>
            INSERT CartonLog
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.GetCartonInfoInfo(IMES.DataModel.CartonInfoInfo)">
            <summary>
            SELECT * FROM CartonInfo WHERE CartonNo=@cn AND InfoType='BoxId'
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.DeleteCartonInfo(IMES.DataModel.CartonInfoInfo)">
            <summary>
            DELETE CartonInfo WHERE artonNo=@cn AND InfoType='BoxId'
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.UpdateCartonInfo(IMES.DataModel.CartonInfoInfo,IMES.DataModel.CartonInfoInfo)">
            <summary>
            UPDATE CartonInfo SET InfoValue = @ucc, Editor = @editor, Udt = GETDATE()
            WHERE CartonNo = @cn AND InfoType = 'UCC'
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.InsertCartonInfo(IMES.DataModel.CartonInfoInfo)">
            <summary>
            INSERT INTO CartonInfo([CartonNo],[InfoType],[InfoValue],[Editor],[Cdt],[Udt])
            VALUES(@cn, 'UCC', @ucc, @editor, GETDATE(), GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.UpdateCartonStatus(IMES.DataModel.CartonStatusInfo,IMES.DataModel.CartonStatusInfo)">
            <summary>
            更新CartonStatus
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.CartonSSCC.ICartonSSCCRepository.GetTemplateNameViaCallOpTemplateCheck(System.String,System.String)">
            <summary>
            [dbo].[op_TemplateCheck]
            输入
              @DN nvarchar(10), 
              @doctpye nvarchar(100)
            输出
              select @templatename
            </summary>
            <param name="dn"></param>
            <param name="doctype"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.PAK.BSam.BSamLocation">
            <summary>
            this table is read only data structure
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BSam.BSamLocation.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BSam.BSamLocation.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TestLog.TestLogDefect">
            <summary>
            测试Log的Defect
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLogDefect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TestLog.TestLogDefect.#ctor(System.Int32,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.TestLogID">
            <summary>
            product/Mb标识 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.DefectCode">
            <summary>
            DefectCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TestLog.TestLogDefect.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TPCB.TPCB">
            <summary>
            Maintain TPCB and TP数据维护
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.TPCB.#ctor">
            <summary>
            Maintain TPCB Class
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.TPCB.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Maintain TPCB数据属性
            </summary>
            <param name="id"></param>
            <param name="tpcb"></param>
            <param name="tp"></param>
            <param name="vcode"></param>
            <param name="editor"></param>
            <param name="cdt"></param>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.ID">
            <summary>
            自增ID序号
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:IMES.FisObject.Common.TPCB.TPCB.Tpcb" -->
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.Tp">
            <summary>
            TouchPad
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.Vcode">
            <summary>
            Vcode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.TPCB.TPCB.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.ReworkProcess">
            <summary>
            Rework使用的流程
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ReworkProcess.ReworkCode">
            <summary>
            ReworkCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ReworkProcess.Process">
            <summary>
            流程名字
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ReworkProcess.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ReworkProcess.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ReworkProcess.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartStrategyConfig.PartStrategyMappingCollection">
            <summary>
            配置文件中自定义的ConfigurationElementCollection
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartStrategyConfig.PartStrategyMappingCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.PartPolicy.NeedDefectComponentCheck">
            <summary>
            To check whether a PartCheckType need defect component check according to its checksetting data
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartPolicy.PartPolicy.RepairPartType">
            <summary>
            To repair part Type according to its checksetting data
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.NumControl.NumControl">
            <summary>
            Number Control类
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.NOType">
            <summary>
            号码类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.NOName">
            <summary>
            号码名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.Value">
            <summary>
            号码值
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.Customer">
            <summary>
            客户别
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.NumControl.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Model.Family">
            <summary>
            Family of product
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Family.#ctor(System.String,System.String,System.String)">
            <summary>
            Family构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.FamilyName">
            <summary>
            FamilyName
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Customer">
            <summary>
             Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Editor">
            <summary>
             Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Cdt">
            <summary>
             Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Udt">
            <summary>
             Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Family.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.FindFamily(System.String)">
            <summary>
            根据Family获取Family对象
            </summary>
            <param name="family">family</param>
            <returns>Family对象</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetFamilyList">
            <summary>
            获得Family列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.FillFamilyObj(IMES.FisObject.Common.Model.Model)">
            <summary>
            晚加载Family对象
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.FindFamiliesByCustomer(System.String)">
            <summary>
            根据customer获得Family列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetQCRatio(System.String)">
            <summary>
            根据Family获取OQCRatio
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetAllFamily">
            <summary>
            SELECT [Family] FROM [Family] order by [Family]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetFamilyList(System.String)">
            <summary>
            取得Customer下的family数据的list(按Family列的字母序排序)
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetFamilyObjList">
            <summary>
            取得所有family数据的list(按Family列的字母序排序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.ChangeFamily(IMES.FisObject.Common.Model.Family,System.String)">
            <summary>
            更改Family信息
            </summary>
            <param name="Object"></param>
            <param name="oldModelName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetQCRatioList(System.String)">
            <summary>
            SELECT C.NewFamily,A.[QCRatio],A.[EOQCRatio],A.[PAQCRatio],A.Editor,C.Model,A.Cdt,A.Udt, C.FamilyKey ,C.Flag FROM [QCRatio] AS A INNER JOIN
            (
            SELECT Customer AS FamilyKey,0 AS Flag, Customer AS NewFamily, '' AS Model FROM Customer WHERE Customer=@ Customer
            UNION  
            SELECT [Model] AS FamilyKey,2 AS Flag, [Family] AS NewFamily, [Model] AS Model FROM [Model] WHERE Family in (SELECT Family FROM [Family] WHERE [CustomerID]=@ Customer)
            UNION
            SELECT Family AS FamilyKey,1 AS Flag, Family AS NewFamily, '' AS Model FROM [Family] WHERE [CustomerID]= @ Customer 
            ) AS C ON A.[Family]=C.FamilyKey ORDER BY NewFamily, Model 
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetQCRatioList3(System.String)">
            <summary>
            SELECT A.[Family],A.[QCRatio],A.[EOQCRatio],A.Editor,A.Cdt,A.Udt FROM [QCRatio] AS A INNER JOIN
            (
            SELECT Family FROM [Family] WHERE [CustomerID]=@Customer 
            UNION 
            SELECT Customer AS [Family] FROM Customer WHERE Customer=@Customer
            Union 
            select distinct LEFT(Line,1) as [Family] from Line  where (Stage = 'FA' or Stage = 'PAK') and CustomerID = @Customer
            ) AS C ON A.[Family]=C.[Family] ORDER BY [Family]
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.AddQCRatio(IMES.FisObject.Common.Model.QCRatio)">
            <summary>
            新增QCRatio
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.SaveQCRatio(IMES.FisObject.Common.Model.QCRatio)">
            <summary>
            更新QCRatio
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.DeleteQCRatio(IMES.FisObject.Common.Model.QCRatio)">
            <summary>
            删除QCRatio
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.UpdateQCRatio(IMES.FisObject.Common.Model.QCRatio,System.String)">
            <summary>
            更新QCRatio (可改主键)
            </summary>
            <param name="item"></param>
            <param name="oldId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetExistQCRatio(System.String,System.String)">
            <summary>
            SELECT t.[Family]
            FROM [IMES_FA]..[QCRatio] t INNER JOIN(
            SELECT Family 
            FROM [Family]
            WHERE [CustomerID]='customer' 
            UNION 
            SELECT Customer AS [Family] 
            FROM Customer
            WHERE Customer='customer'
            ) AS C
            ON t.[Family]=C.[Family]
            WHERE t.[Family]='QCRatioId'
            </summary>
            <param name="customer"></param>
            <param name="QCRatioId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetMatchedCustomer(System.String)">
            <summary>
            返回选择到的CustomerID
            SELECT [CustomerID]
              FROM dbo.Family
            where [Family]='param'
            union 
            select Customer from dbo.Customer
            where Customer='param'
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetExistQCRatio(System.String)">
            <summary>
            取得存在的QCRatio
            SELECT [Family]
            FROM [QCRatio]
            WHERE [QCRatio].[Family]=@qcRatioFamily
            </summary>
            <param name="QCRatioFamily"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetModelListByFamily(System.String)">
            <summary>
            取得family下的Model
            SELECT [Model] FROM [Model] WHERE [Family]=@family ORDER BY [Model]
            </summary>
            <param name="Family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetFamilysByCustomer(System.String[])">
            <summary>
            sql select family from family where customerD='HP' order by family
            </summary>
            <param name="customerIds"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetExistFamilyInfo(IMES.DataModel.FamilyInfoDef)">
            <summary>
            获取FamilyInfo表记录 
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.AddFamilyInfo(IMES.DataModel.FamilyInfoDef)">
            <summary>
            增加一条FamilyInfo表记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.RemoveFamilyInfo(IMES.DataModel.FamilyInfoDef)">
            <summary>
            删除指定条件的FamilyInfo表记录
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.UpdateFamilyInfo(IMES.DataModel.FamilyInfoDef,IMES.DataModel.FamilyInfoDef)">
            <summary>
            更新指定条件的FamilyInfo表记录
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetCountOfQCStatusInCurrentMonth(System.String,System.String,System.String)">
            <summary>
            Select count(DISTINCT ProductID) from QCStatus where line=@pdline and model=@model and Tp=’PIA’and Cdt年月=当前年月
            </summary>
            <param name="line"></param>
            <param name="model"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IFamilyRepository.GetEOQCRatioList(IMES.DataModel.QCRatioInfo)">
            <summary>
            1、select QCRatio.EOQCRatio from QCRatio where QCRatio.Family=@input;
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialAttr.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialAttr.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialAttr.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Model.Model">
            <summary>
            儂倰濬
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Model.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Model.Model._attributes">
            <summary>
            儂倰腔孺桯扽俶
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Model.GetAttribute(System.String)">
            <summary>
            鳳儂倰腔硌隅孺桯扽俶
            </summary>
            <param name="name">孺桯扽俶靡備</param>
            <returns>孺桯扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Model.AddAttribute(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            崝樓Model扽俶
            </summary>
            <param name="item">扽俶</param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Model.ChangeAttribute(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            載陔Model扽俶
            </summary>
            <param name="item">扽俶</param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.Model.DeleteAttribute(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            刉壺Model扽俶
            </summary>
            <param name="item">扽俶靡</param>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.ModelName">
            <summary>
            儂倰靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.FamilyName">
            <summary>
            儂倰垀扽腔Family靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.CustPN">
            <summary>
            儂倰腔CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.ShipType">
            <summary>
            ShipType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Status">
            <summary>
            儂倰袨怓, 褫夔腔硉毓峓???
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.OSCode">
            <summary>
            儂倰腔OsCode???
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.OSDesc">
            <summary>
            儂倰腔OsDesc???
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.BOMApproveDate">
            <summary>
            BOMApproveDate
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Udt">
            <summary>
            党蜊奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Family">
            <summary>
            儂倰垀扽腔Family勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Attributes">
            <summary>
            Attributes of Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Model.Model.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.DN.DeliveryLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryLog.DeliveryNo">
            <summary>
            HDVD
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.LCM.LCM">
            <summary>
            LCM实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.LCM.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{IMES.FisObject.FA.LCM.LCMME})">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.LCM.AddMEParts(IMES.FisObject.FA.LCM.LCMME)">
            <summary>
            为LCM绑定一个ME
            </summary>
            <param name="me"></param>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCM.IECSn">
            <summary>
            IECSn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCM.Pn">
            <summary>
            Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCM.VendorSn">
            <summary>
            VendorSn
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCM.MEParts">
            <summary>
            LCM绑定的所有ME
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.LCM.LCM.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Warranty.IWarrantyRepository">
            <summary>
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetDCodeRuleListForMB(System.Boolean,System.String)">
            <summary>
            为MB获得DCodeRule列表 (区分是否FRU)
            </summary>
            <param name="isFRU"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetDCodeRuleListForMB(System.String)">
            <summary>
            为MB获得DCodeRule列表
             SELECT  [ID], [Descr]  FROM [IMES2012_GetData].[dbo].[Warranty] where Type='MBDateCode' and Customer=(select Value from [SysSetting] where Name = @Customer)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetDCodeRuleListForVB(System.String)">
            <summary>
            为VB获得DCodeRule列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetDCodeRuleListForKP(System.String)">
            <summary>
            为KP获得DCodeRule列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetDCodeRuleListForDK(System.String)">
            <summary>
            为DK获得DCodeRule列表
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetWarrantyListByCondition(IMES.FisObject.Common.Warranty.Warranty)">
            <summary>
            Almighty
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetWarrantyList(System.String)">
            <summary>
            取得Customer Id下的Warranty数据的list(按Description栏位排序)
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetWarranty(System.Int32)">
            <summary>
            取得一条Warranty的记录数据
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetExistWarranty(System.String,System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.Common.Warranty.IWarrantyRepository.GetExistWarranty(System.String,System.String)">
            <summary>
            SELECT [ID]      
             FROM [IMES_GetData].[dbo].[Warranty]
            where [Customer]='Customer' AND [Descr]='Descr'
            </summary>
            <param name="customer"></param>
            <param name="descr"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Process.IProcessRepository">
            <summary>
            用于访问Process对象的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.FillProcessStations(IMES.FisObject.Common.Process.Process)">
            <summary>
            读取流程站序列
            </summary>
            <param name="proc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessByModel(System.String)">
            <summary>
            根据机型获取Process对象
            </summary>
            <param name="model">指定机型</param>
            <returns>Process对象</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.SFC(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            SFC卡站
            </summary>
            <param name="Line"></param>
            <param name="Customer"></param>
            <param name="CurrentStation"></param>
            <param name="key"></param>
            <param name="ProcessType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.CreateModelProcess(System.String,System.String,System.String)">
            <summary>
            建立ModelProcess
            </summary>
            <param name="model"></param>
            <param name="editor"></param>
            <param name="line"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReleaseType(System.String)">
            <summary>
            找到DISMANTLE Process，得到对应的Release Type：
            select ReleaseType from Rework_ReleaseType where Process=(select Process from Rework_Process where ReworkCode=@code)
            </summary>
            <param name="reworkCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetModelProcessByModelLine(System.String,System.String)">
            <summary>
            获得ModelProcess
            </summary>
            <param name="model"></param>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.getProcessList(System.String)">
            <summary>
            取process表中等于process的纪录 order by Process
            </summary>
            <param name="process_like"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetModelProcessListByModel(System.String)">
            <summary>
            取model_process表中等于model的纪录
            </summary>
            <param name="model_like"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPalletProcessListByCustomer(System.String)">
            <summary>
            取palletprocess表中等于customer的纪录
            </summary>
            <param name="customer_like"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPartProcessListByMBFamily(System.String)">
            <summary>
            取partprocess表中等于mbFaily的纪录
            </summary>
            <param name="mbFamily_like"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReworkProcessListByReworkCode(System.String)">
            <summary>
            取rework_process表中等于reworkCode的纪录
            </summary>
            <param name="reworkCode_like"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPalletProcessListByProcess(System.String)">
            <summary>
            取palletprocess表中等于process的纪录
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPartProcessListByProcess(System.String)">
            <summary>
            取partprocess表中等于process的纪录
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReworkProcessListByProcess(System.String)">
            <summary>
            取rework_process表中等于process的纪录
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPalletProcessList">
            <summary>
            取palletprocess表中所有纪录
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPartProcessList">
            <summary>
            取partprocess表中所有纪录
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReworkProcessList">
            <summary>
            取rework_process表中所有纪录
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeletePalletProcessByProcess(System.String)">
            <summary>
            删除palletprocess表中等于process的记录
            </summary>
            <param name="process"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeletePartProcessByProcess(System.String)">
            <summary>
            删除partprocess表中等于process的记录
            </summary>
            <param name="process"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteReworkProcessByProcess(System.String)">
            <summary>
            删除reworkprocess表中等于process的记录
            </summary>
            <param name="process"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessStationList(System.String)">
            <summary>
            取得processstation表中等于process的记录
            按Pre Station, Status, Station排序
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessStation(System.Int32)">
            <summary>
            从processstation表中取得一条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteProcessStation(System.Int32)">
            <summary>
            删除processstation表中等于id的记录
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddProcessStation(IMES.FisObject.Common.Process.ProcessStation)">
            <summary>
            在processstation表中新增一条记录
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.SaveProcessStation(IMES.FisObject.Common.Process.ProcessStation)">
            <summary>
            在processstation表中保存一条记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddPartProcess(IMES.FisObject.Common.Process.PartProcess)">
            <summary>
            向partprocess新增一条记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddReworkProcess(IMES.FisObject.Common.Process.ReworkProcess)">
            <summary>
            向reworkprocess新增一条记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddPalletProcess(IMES.FisObject.Common.Process.PalletProcess)">
            <summary>
            向palletprocess新增一条记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetAllProcessRuleset">
            <summary>
            select * from ProcessRuleset order by Priority desc
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.UpdateRuleSetPriority(IMES.FisObject.Common.Process.ProcessRuleSet)">
            <summary>
            update ProcessRuleset 
            set Priority=ruleSet.Priority 
            where ID=ruleSet.ID
            </summary>
            <param name="ruleSet"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteProcessRulesetByID(System.Int32)">
            <summary>
            删除当前被选Rule Set及所有应用该Rule Set的所有Rule
            表ProcessRuleset，表ProcessRule
            </summary>
            <param name="rule_set_id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddProcessRuleSet(IMES.FisObject.Common.Process.ProcessRuleSet)">
            <summary>
            insert ProcessRuleset(Priority,Condition1, Condition2, Condition3, Condition4, Condition5) 
            select ISNULL(max(Priority),'0')+1,' ruleset .Condition1' , ' ruleset .Condition2', ' ruleset .Condition3', ' ruleset .Condition4', ' ruleset .Condition5'
            from ProcessRuleset
            </summary>
            <param name="ruleset"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.UpdateProcessRuleSet(IMES.FisObject.Common.Process.ProcessRuleSet)">
            <summary>
            update ProcessRuleset 
            set Condition1='singleRuleSet.Condition1' ,
            Condition2='singleRuleSet.Condition2' ,
            Condition3='singleRuleSet.Condition3' ,
            Condition4='singleRuleSet.Condition4' ,
            Condition5='singleRuleSet.Condition5' ,
            where ID='singleRuleSet.ID'
            </summary>
            <param name="singleRuleSet"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetAllRuleByRuleSetID(System.Int32)">
            <summary>
            select * from ProcessRule where RuleSetID='rule_set_id' order by Process
            </summary>
            <param name="rule_set_id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddProcessRule(IMES.DataModel.ProcessRule)">
            <summary>
            返回插入数据的ID
            insert ProcessRule(RuleSetID,Process, Value1, Value2, Value 3, Value 4, Value 5) 
            values(‘processrule.RuleSetID’,’ processrule.Process’,’ processrule.Value1’,’ processrule.Value2’,’ processrule.Value3’,’ processrule.Value4’,’ processrule.Value5’)
            </summary>
            <param name="processrule"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.UpdateProcessRule(IMES.DataModel.ProcessRule)">
            <summary>
            Update  ProcessRule
            Set RuleSetID='processrule.RuleSetID',
            Process='processrule.Process', 
            Value1='processrule.Value1',
            Value2='processrule.Value2',
            Value3='processrule.Value3',
            Value4='processrule.Value4', 
            Value5='processrule.Value5' 
            WhereID='processrule.ID'
            </summary>
            <param name="processrule"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteProcessRuleByID(System.Int32)">
            <summary>
            删除ProcessRule
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.CheckExistedProcess(System.String)">
            <summary>
            取得process表中等于processName的记录数
            </summary>
            <param name="processName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteModelProcessByModel(System.String)">
            <summary>
            删除一条Model_Process表的记录，where Model=?
            </summary>
            <param name="modelName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.SaveProcess(System.String,IMES.FisObject.Common.Process.Process)">
            <summary>
            保存Process
            </summary>
            <param name="strOldProcessName"></param>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessRuleIDByModel(System.String)">
            <summary>
            select b.ID from ProcessRuleSet a inner join ProcessRule b on a.ID = b.RuleSetID where a.Condition1='Model' 
            and ISNULL(a.Condition2, '')='' and b.Value1 = ? and ISNULL(b.Value2, '')=''
            </summary>
            <param name="modelName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteRuleByRuleSetID(System.Int32)">
            <summary>
            Delete ProcessRule Where RuleSetID='ruleSetId'
            </summary>
            <param name="ruleSetId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessRuleById(System.Int32)">
            <summary>
            根据ID获得ProcessRule
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetRuleSetById(System.Int32)">
            <summary>
            根据ID获得ProcessRuleSet
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.TruncateModelProcess">
            <summary>
            Truncate table Model_Process
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetAllProcessForRework">
            <summary>
            取得Rework_ReleaseType表中的所有Process,按字符序排列
            参考sql
            select distinct a.* 
            from Process a
                 join Rework_ReleaseType b on a.Process=b.Process 
            order by a.Process
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteAllModelProcess">
            <summary>
            delete from Model_Process
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Process.IProcessRepository.IFRuleSetIsExists(IMES.FisObject.Common.Process.ProcessRuleSet)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Process.IProcessRepository.IFRuleIsExists(IMES.DataModel.ProcessRule)" -->
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.IFConditionIsModel(System.Int32)">
            <summary>
            判断ProcessRuleset是否是Model
            参考sql：
            Select * from ProcessRuleset where ID=? And Condition1=’Model’ and isnull(Condition2,’’)==’’ and isnull(Condition3,’’)==’’ and isnull(Condition4,’’)==’’ and isnull(Condition5,’’)==’’
            </summary>
            <param name="rulesetID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReworkReleaseTypeListByProcess(System.String)">
            <summary>
            取rework_releasetype表中等于process的纪录
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetReworkReleaseTypeList">
            <summary>
            选项包括：BWEIGHT、CN、COA、CPQSNO、Delivery、KIT ID、MB、MMI、PCMAC、PLT、WEIGHT和PartCheck和CheckItem中所有type(Distinct)
            参考sql如下：
            select distinct ReleaseType from 
            (     (select 'BWEIGHT' as ReleaseType)
            union (select 'CN' as ReleaseType)
            union (select 'COA' as ReleaseType)
            union (select 'CPQSNO' as ReleaseType)
            union (select 'Delivery' as ReleaseType)
            union (select 'KIT ID' as ReleaseType)
            union (select 'MB' as ReleaseType)
            union (select 'MMI' as ReleaseType)
            union (select 'PCMAC' as ReleaseType)
            union (select 'PLT' as ReleaseType)
            union (select 'WEIGHT' as ReleaseType)
            union (select 'CN' as ReleaseType)
            union
            (select distinct PartType as ReleaseType from PartCheck)
            union
            (select distinct ItemName as ReleaseType from CheckItem)) as A
            order by ReleaseType
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.DeleteReworkReleaseTypeByProcess(System.String)">
            <summary>
            删除rework_releasetype表中等于process的记录
            </summary>
            <param name="process"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddReworkReleaseType(IMES.DataModel.ReworkReleaseType)">
            <summary>
            向rework_releasetype表新增一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.CheckExistedProcessStation(System.String,System.String,System.String)">
            <summary>
            返回在Process_Station表中等于Process，Station和PreStation的值对的数量
            参考sql如下：
            select count(*) from Process_Station where Process=? and Station = ? and PreStation = ?
            </summary>
            <param name="process"></param>
            <param name="station"></param>
            <param name="preStation"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPCBFamilyList">
            <summary>
            参考sql:
            select distinct Descr as Family from Part where BomNodeType='MB'
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetPCBModelList">
            <summary>
            参考sql:
            select distinct PCBModelID as PCBModel from IMES_PCA..PCB order by PCBModel
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetProcessList">
            <summary>
            1）取得process列表
            SELECT [Type]
            ,[Process]
            ,[Descr]
            ,[Editor]
            ,[Cdt]
            ,[Udt]
            FROM [IMES2012_GetData].[dbo].[Process] ORDER BY [Type],[Process]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.ExistProcessRule(System.String)">
            <summary>
            2）
            if Exists
            (SELECT [ID]
            ,[RuleSetID]
            ,[Process]
            ,[Value1]
            ,[Value2]
            ,[Value3]
            ,[Value4]
            ,[Value5]
            ,[Value6]
            ,[Editor]
            ,[Cdt]
            ,[Udt]
            FROM [IMES2012_GetData].[dbo].[ProcessRule] where [Process]=@Process)
            select true
            else
            select false
            </summary>
            <param name="process"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.AddProcessStations(System.Collections.Generic.List{IMES.FisObject.Common.Process.ProcessStation})">
            <summary>
            3)批量添加ProcessStation
            </summary>
            <param name="stationList"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Process.IProcessRepository.GetExistPartProcess(System.String)">
            <summary>
            SELECT [MBFamily],Process 
            FROM PartProcess
            where [MBFamily]='MBFamily'
            </summary>
            <param name="mbFamily"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartForbidden">
            <summary>
            Part禁用信息
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartForbidden.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Family">
            <summary>
            family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Descr">
            <summary>
            描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.PartNo">
            <summary>
            Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.AssemblyCode">
            <summary>
            AssemblyCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Status">
            <summary>
            禁用状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartForbidden.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartCheckMatchRule">
            <summary>
            PartCheck的匹配规则
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.PartCheckID">
            <summary>
            所属的PartCheckId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.RegExp">
            <summary>
            正则表达式匹配规则
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.PnExp">
            <summary>
            使用Pn与匹配目标关系定义的匹配规则
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.PartPropertyExp">
            <summary>
            使用Part属性与匹配目标之间关心定义的匹配规则
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.ContainCheckBit">
            <summary>
            该匹配规则是否假定匹配目标带校验位
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheckMatchRule.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.Part">
            <summary>
            Part实现类
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.GetAttribute(System.String)">
            <summary>
            获取Part扩展属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.AddAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            增加Part属性
            </summary>
            <param name="attr">Part属性</param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.ChangeAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            更新Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.DeleteAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            删除Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.GetProperty(System.String)">
            <summary>
            获取属性值
            </summary>
            <param name="propertyName">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.GetProperty(System.String,System.String)">
            <summary>
            根据属性名获取属性值， 属性包括基础属性和扩展属性，仅用于KP类型
            </summary>
            <param name="propertyName">属性名</param>
            <param name="assemblyCode">属性值</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.Part.GetAttribute(System.String,System.String)">
            <summary>
            获取Part扩展属性，仅用于KP类型
            </summary>
            <param name="name">属性名</param>
            <param name="assemblyCode">assCode</param>
            <returns>属性值</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.PN">
            <summary>
            PartNumber, Part的唯一性标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Type">
            <summary>
            Part具体类型: CPU, DIMM
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.TypeGroup">
            <summary>
            类型分组
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.CustPn">
            <summary>
            Part的CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Descr">
            <summary>
            Part描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.AutoDL">
            <summary>
            AutoDL
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Descr2">
            <summary>
            Part描述信息 2
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Attributes">
            <summary>
            Part属性
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Part.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IPartRepository">
            <summary>
            Part Repository 接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FillPartInfos(IMES.FisObject.Common.Part.IPart)">
            <summary>
            晚加载PartInfo
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindAssemblyCode(System.String)">
            <summary>
            根据AssemblyCode查找AssemblyCode对象列表.
            </summary>
            <param name="assCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeList">
            <summary>
            获得PartType列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartType(System.String)">
            <summary>
            根据Part type获取PartType对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPPIDTypeList">
            <summary>
            取得PPID类型信息列表
            </summary>
            <returns>PPID类型信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPPIDDescriptionList(System.String)">
            <summary>
            取得PPID描述信息列表
            </summary>
            <returns>PPID描述信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartNoList(System.String,System.String)">
            <summary>
            取得PartNo信息列表
            </summary>
            <param name="PPIDTypeId">PPID类型标识</param>
            <param name="PPIDDescrptionId">PPID描述标识</param>
            <returns>PartNo信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetKPTypeList">
            <summary>
            取得KP类型列表
            </summary>
            <returns>KP类型列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartCheck(System.String,System.String)">
            <summary>
            获取指定PartType的Match,Check,Save设定
            </summary>
            <param name="partType">part类型</param>
            <param name="customer">customer</param>
            <returns>Match,Check,Save设定</returns>
            <remark>需要提供缓存，以PartType为Key</remark>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FillMatchRule(IMES.FisObject.Common.Part.PartCheck)">
            <summary>
            晚加载PartCheck的MatchRule
            </summary>
            <param name="partCheck"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartForbidden(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            获得PartForbidden列表
            </summary>
            <param name="family"></param>
            <param name="model"></param>
            <param name="descr"></param>
            <param name="pn"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssemblyCodeInfo(System.String,System.String)">
            <summary>
            根据AssemblyCode和InfoType获得AssemblyCode
            </summary>
            <param name="assemblyCode"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssemblyCodesByModel(System.String)">
            <summary>
            select distinct AssemblyCode from IMES_GetData..AssemblyCode where PartNo IN (Select Value from IMES_GetData..ModelInfo where Name='PN' and Model='') and Model=''
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssemblyCodesByPartNo(System.String)">
            <summary>
            select distinct AssemblyCode from AssemblyCode where PartNo=''
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindBSParts(System.String)">
            <summary>
            根据PartNo查找BSParts
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeListByCustomerFromPartCheck(System.String)">
            <summary>
            select PartType from PartCheck where Customer=@customer
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetFamilyList">
            <summary>
            取得Switch Board的Family信息列表
            SELECT DISTINCT b.InfoValue as Family
            FROM IMES_GetData..Part a, IMES_GetData..PartInfo b, IMES_GetData..PartInfo c
            WHERE a.PartNo = b.PartNo
               AND a.PartNo = c.PartNo 
               AND a.PartType = 'SB'
               AND a.Descr = 'TPM'
               AND LEFT(a.PartNo, 3) = '111'
               AND b.InfoType = 'MN'
               AND c.InfoType = 'MDL'
               ORDER BY Family
            </summary>
            <returns>Switch Board的Family信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPCBListByFamily(System.String)">
             <summary>
            取得Family的PCB信息列表 
              SELECT DISTINCT b.InfoValue as PCB
              FROM IMES_GetData..Part a, IMES_GetData..PartInfo b, IMES_GetData..PartInfo c
              WHERE a.PartNo = b.PartNo
              AND a.PartNo = c.PartNo
              AND a.PartType = 'SB'
              AND a.Descr = 'TPM'
              AND LEFT(a.PartNo, 3) = '111'
              AND b.InfoType = 'MDL'
              AND c.InfoType = 'MN'
              AND c.InfoValue = @Family
              ORDER BY PCB 
             </summary>
             <param name="family"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.Get111ListByPCB(System.String,System.String)">
            <summary>
            取得PCB的111信息列表
            SELECT DISTINCT a.PartNo as [111]
             FROM IMES_GetData..Part a, IMES_GetData..PartInfo b, IMES_GetData..PartInfo c
             WHERE a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             AND a.PartType = 'SB'
             AND a.Descr = 'TPM'
             AND LEFT(a.PartNo, 3) = '111'
             AND b.InfoType = 'MDL'
             AND b.InfoValue = @PCB
             AND c.InfoType = 'MN'
             AND c.InfoValue = @Family
             ORDER BY [111]
            </summary>
            <param name="pcb"></param>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetFruNoBy111(System.String)">
            <summary>
             取得111的FruNo信息列表
             SELECT ISNULL(InfoValue, '') as [FRUNO] FROM IMES_GetData..PartInfo
             WHERE PartNo = @PartNo
             AND InfoType = 'FRUNO'
            </summary>
            <param name="pn111"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartListByPreStr(System.String)">
            <summary>
            根据PN前缀获得Part的列表
            </summary>
            <param name="partNoPreStr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssemblyCodeList(System.String)">
            <summary>
            根据PN获得AssemblyCode列表
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddAssemblyCode(IMES.FisObject.Common.Part.AssemblyCode)">
            <summary>
            新增AssemblyCode
            </summary>
            <param name="Object"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateAssemblyCode(IMES.FisObject.Common.Part.AssemblyCode)">
            <summary>
            修改AssemblyCode
            </summary>
            <param name="Object"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistedAssemblyCode(System.String,System.String)">
            <summary>
            获得指定PartNo和AssemblyCode的assemblyCode的ID列表
            </summary>
            <param name="partNo"></param>
            <param name="assemblyCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteAssemblyCode(System.Int32)">
            <summary>
            删除AssemblyCode
            </summary>
            <param name="assemblyCodeId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeObjList">
            <summary>
            取得全部PartType List
            栏位包括Group和Part Type、Editor、Cdt、Udt
            按Group、Part Type列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeDescriptionList(System.String)">
            <summary>
            依据PartType，取得全部PartTypeDescription List
            </summary>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindAssemblyCodeById(System.Int32)">
            <summary>
            根据AssemblyCode ID获得AssemblyCode
            </summary>
            <param name="assCodeId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssemblyCodeList(System.String,System.String)">
            <summary>
            根据model和partNo获得AssemblyCode列表
            </summary>
            <param name="model"></param>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartCheckList">
            <summary>
            14)取得partCheck列表
            SELECT [Customer],[PartType],[ValueType],[NeedSave],[NeedCheck], Editor,Cdt,Udt,[ID]
              FROM [IMES_GetData].[dbo].[PartCheck] order by [Customer],[PartType],[ValueType]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypes">
            <summary>
            15)PartType列表,
            SELECT [PartType]
             FROM [IMES_GetData].[dbo].[PartType] ORDER BY [PartType]
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetValueTypeList(System.String)">
            <summary>
            16)Value Type列表
            SELECT [Code]      
              FROM [IMES_GetData].[dbo].[PartTypeAttribute]
            where PartType='partType' ORDER BY [Code]
            </summary>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetExistPartCheck(System.String,System.String,System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetExistPartCheck(System.String,System.String,System.String)">
            <summary>
            17')
            SELECT [ID]
              FROM [IMES_GetData].[dbo].[PartCheck]
            WHERE [Customer]='customer' AND [PartType]='partType' AND [ValueType]='valueType'
            </summary>
            <param name="customer"></param>
            <param name="partType"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartCheck(IMES.FisObject.Common.Part.PartCheck)">
            <summary>
            18)删除PartCheck
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartCheck(IMES.FisObject.Common.Part.PartCheck)">
            <summary>
            19) 新增PartCheck
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartCheck(IMES.FisObject.Common.Part.PartCheck)">
            <summary>
            20)更新PartCheck
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetMatchRuleByPartCheckID(System.Int32)">
            <summary>
            21)取得MatchRule列表
            SELECT [RegExp],[PnExp],[PartPropertyExp],[ContainCheckBit],Editor,Cdt,Udt,[ID],[PartCheckID]    
              FROM [IMES_GetData].[dbo].[PartCheckMatchRule]
            where [PartCheckID]=partCheckID
            order by [RegExp],[PnExp],[PartPropertyExp]
            </summary>
            <param name="partCheckID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartCheckMatchRule(IMES.FisObject.Common.Part.PartCheckMatchRule)">
            <summary>
            22)删除一条PartCheckMatchRule
            DELETE FROM [IMES_GetData].[dbo].[PartCheckMatchRule]
             WHERE ID=id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartCheckMatchRule(IMES.FisObject.Common.Part.PartCheckMatchRule)">
            <summary>
            23)添加一条PartCheckMatchRule
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartCheckMatchRule(IMES.FisObject.Common.Part.PartCheckMatchRule)">
            <summary>
            24)更新一条PartCheckMatchRule
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetExistPartCheckMatchRule(System.String,System.String,System.String,System.Int32,System.Int32)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetExistPartCheckMatchRule(System.String,System.String,System.String,System.Int32)">
            <summary>
            25')
            SELECT [ID]
              FROM [IMES_GetData].[dbo].[PartCheckMatchRule]
            Where [RegExp]='regExp' AND [PartPropertyExp]='partPropertyExp' AND [PnExp]='pnExp'
            当regExp=""时，[RegExp]='regExp'条件变为[RegExp]='regExp' OR [RegExp] is Null 
            当partPropertyExp =""时，[partPropertyExp]='partPropertyExp' 条件变为[PartPropertyExp]='partPropertyExp' OR [PartPropertyExp] is Null
            当pnExp=""时，[PnExp]='pnExp'条件变为[PnExp]='pnExp' OR [PnExp] is Null
            </summary>
            <param name="regExp"></param>
            <param name="partPropertyExp"></param>
            <param name="pnExp"></param>
            <param name="partCheckID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetCustomerPartTypeList(System.String)">
            <summary>
            28)SELECT distinct [PartType] FROM [IMES_GetData_Datamaintain].[dbo].[PartCheck] WHERE [Customer]='customer' order by [PartType]
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartList">
            <summary>
            所有的Flag栏位为1的PartNo，来自于Part数据表，按照part no排序。
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartByAssemblyCode(System.String)">
            <summary>
            根据assembly code，取得part，其中包含editor, cdt, udt信息等。
            </summary>
            <param name="strAssemblyCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistedAssemblyCode(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            查询等于指定partNo, family, model, region而不等于指定assemblyCodeId的AssemblyCode的数目.
            </summary>
            <param name="partNo"></param>
            <param name="family"></param>
            <param name="model"></param>
            <param name="region"></param>
            <param name="assemblyCodeId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeAttributeAndPartInfoValueListByPartNo(System.String,System.String)">
            <summary>
            参考sql如下：
            select PartTypeAttribute.Code as Item, PartTypeAttribute.Description as Description,  isNull(A.InfoValue, '') as Content,
                    A.Editor  as Editor, A.Cdt as Cdt
            From (select PartNo, InfoType, InfoValue, Editor, Cdt from PartInfo where PartNo = ？) as A 
            Right Outer Join PartTypeAttribute 
            On A.InfoType = PartTypeAttribute.Code
            where PartTypeAttribute.PartType = ?
            </summary>
            <param name="partNo"></param>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeAttributeAndPartInfoValueListByAssemblyCode(System.String,System.String)">
            <summary>
            参考sql如下：
            select PartTypeAttribute.Code as Item, PartTypeAttribute.Description as Description,  isNull(A.InfoValue, '') as Content, 
                    A.Editor as Editor, A.Cdt as Cdt
            From (select AssemblyCode, InfoType, InfoValue, Editor, Cdt from AssemblyCodeInfo where AssemblyCode = ？) as A 
            Right Outer Join PartTypeAttribute 
            On A.InfoType = PartTypeAttribute.Code
            where PartTypeAttribute.PartType = ?
            </summary>
            <param name="assemblyCode"></param>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            新增AssemblyCodeInfo
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SaveAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            修改AssemblyCodeInfo
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteAssemblyCodeInfo(IMES.FisObject.Common.Part.AssemblyCodeInfo)">
            <summary>
            删除AssemblyCodeInfo
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetRegionList">
            <summary>
            查询系统中所有已维护的Region值,按Region列的字母序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddRegion(IMES.FisObject.Common.Part.Region)">
            <summary>
            新增Region
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateRegion(IMES.FisObject.Common.Part.Region,System.String)">
            <summary>
            参考sql
            update Region 
            set Region=?,
                Description=?,
                Editor=?,
                Udt=? 
            where Region=? 
            </summary>
            <param name="region"></param>
            <param name="regionname"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteRegionByName(System.String)">
            <summary>
            删除Region
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.IFRegionIsExists(System.String)">
            <summary>
            判断Region是否存在
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.IFRegionIsInUse(System.String)">
            <summary>
            参考sql
            select * from Model where Region=?
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartType(IMES.FisObject.Common.Part.PartType)">
            <summary>
            新增PartType
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartType(IMES.FisObject.Common.Part.PartType,System.String)">
            <summary>
            根据strOldPartType更新PartType记录
            </summary>
            <param name="item"></param>
            <param name="strOldPartType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartTypeByPartType(System.String)">
            <summary>
            根据PartType删除PartType记录
            </summary>
            <param name="partType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeAttributes(System.String)">
            <summary>
            根据PartType取得PartTypeAttribute表对应的记录
            栏位包括Code和Description、Editor、Cdt、Udt
            按Code列的字符序排序
            </summary>
            <param name="strPartType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartTypeAttribute(IMES.FisObject.Common.Part.PartTypeAttribute)">
            <summary>
            新增PartTypeAttribute
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartTypeAttribute(IMES.FisObject.Common.Part.PartTypeAttribute,System.String,System.String)">
            <summary>
            根据strPartType, strOldCode保存PartTypeAttribute
            </summary>
            <param name="item"></param>
            <param name="strOldPartType"></param>
            <param name="strOldCode"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartTypeAttribute(System.String,System.String)">
            <summary>
            根据strPartType, strOldCode删除PartTypeAttribute
            </summary>
            <param name="strPartType"></param>
            <param name="strCode"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartTypeDesc(IMES.FisObject.Common.Part.PartTypeDescription)">
            <summary>
            新增PartTypeDesc
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartTypeDesc(IMES.FisObject.Common.Part.PartTypeDescription)">
            <summary>
            保存PartTypeDesc
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartTypeDesc(IMES.FisObject.Common.Part.PartTypeDescription)">
            <summary>
            删除PartTypeDesc
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistedDesc(System.String,System.String,System.String)">
            <summary>
            如果strDescID == "", where 子句不包含该查询条件
            否则where 中包含条件 PartTypeDesciption.ID != strDescID
            </summary>
            <param name="strPartType"></param>
            <param name="strDesc"></param>
            <param name="strDescID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeMappingList(System.String)">
            <summary>
            取得PartTypeMapping表的PartTypeMapping.FISType = strPartType记录
            按字符序排序
            </summary>
            <param name="strPartType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartTypeMapping(IMES.FisObject.Common.Part.PartTypeMapping)">
            <summary>
            新增PartTypeMapping
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartTypeMapping(IMES.FisObject.Common.Part.PartTypeMapping)">
            <summary>
            修改PartTypeMapping
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartTypeMapping(IMES.FisObject.Common.Part.PartTypeMapping)">
            <summary>
            删除PartTypeMapping
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistedSAPType(System.String,System.String,System.String)">
            <summary>
            如果strID == "", where 子句不包含该查询条件
            否则where 中包含条件 PartTypeMapping.ID != strID
            </summary>
            <param name="strFISType"></param>
            <param name="strSAPType"></param>
            <param name="strID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetFamilyListForIECVersion">
            <summary>
            SELECT DISTINCT Descr as Family
            FROM IMES_GetData..Part 
            WHERE LEFT(PartNo, 3) = '111'
            AND PartType IN ('MB', 'VB', 'SB')
            ORDER BY Family
            
            现在要变成
            SA的Family仍然从Part表中取Description，但对应的PartNo改为以“131”开头，并且PartType只能是“MB”
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartForbiddenListByFamily(System.String)">
            <summary>
            从PartForbidden取得等于family的记录
            栏位包括Model、Description、Part No、Assembly Code、Status、Editor、Cdt、Udt
            按Model、Description、Part No、Assembly Code栏位排序
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistedPartForbidden(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            返回在PartForbidden表中等于Model、Description、PartNo和AssemblyCode的值对的数量
            参考sql如下：
            select count(*) from PartForbidden where Model=? and Description = ? and PartNo = ? and AssemblyCode=?
            </summary>
            <param name="strModel"></param>
            <param name="strDescription"></param>
            <param name="strPartNo"></param>
            <param name="strAssemblyCode"></param>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartForbidden(IMES.FisObject.Common.Part.PartForbidden)">
            <summary>
            新增PartForbidden
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.SavePartForbidden(IMES.FisObject.Common.Part.PartForbidden)">
            <summary>
            修改PartForbidden
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartForbidden(IMES.FisObject.Common.Part.PartForbidden)">
            <summary>
            删除PartForbidden
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartForbidden(System.Int32)">
            <summary>
            根据ID获得PartForbidden信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetPartByPartNo(System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartNoList">
            <summary>
            参考sql如下：
            select PartNo Name from Part
            按PartNo 列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoList">
            <summary>
            参考sql如下：
            select Distinct InfoType from PartInfo
            按InfoType列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssetCheckRuleList">
            <summary>
            1)取得AssetCheckRuleList
            SELECT Code AS [Ast Type],CheckTp AS [Check Type], 
            CASE WHEN Station='65' THEN '65 After MVS' 
            WHEN Station='8C' THEN '8C Combine Pizza' 
            WHEN Station='85' THEN '85 Unit Weight' END AS [Check Station],
            CustName AS [Cust Name], CheckItem AS [Check Item],Editor,Cdt,Udt,[Id] FROM AstRule (NOLOCK) ORDER BY Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAstRule">
            <summary>
            get all AstRule 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAstRuleByCondition(IMES.DataModel.AstRuleInfo)">
            <summary>
            get all AstRule  by Condition
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddAstRule(IMES.DataModel.AstRuleInfo)">
            <summary>
            insert AssetRule
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateAstRule(IMES.DataModel.AstRuleInfo)">
            <summary>
            update AstRue
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteAstRule(System.Int32)">
            <summary>
            delete AstRule table
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteAssetCheckRule(System.Int32)">
            <summary>
            2) Delete(int id)
            删除一条AssetCheckRule记录
            </summary>
            <param name="id"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetAstTypes(System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddAssetRule(IMES.DataModel.AssetRule)">
            <summary>
            4)添加一条记录
            返回后item中的id已经被填充
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.ExistAssetRule(IMES.DataModel.AssetRule)">
            <summary>
            5)取得存在条件下的记录
            SELECT [Id]   
             FROM [AssetRule]
            WHERE [AstType]='[AstType]' AND [Station]='[Station]' AND [CheckType]='[CheckType]' AND [CustName]='[CustName]' AND [CheckItem]='[CheckItem]'
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetBatteryInfoList">
            <summary>
            1、 取得全部battery信息 select * from OlymBattery order by HPPN
            </summary>
            <param name="batteryVC"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetBatteryInfoList(System.String)">
            <summary>
            2、按左端匹配原则搜索Battery数据表中HPPN栏位 select * from OlymBattery where HPPN like "'" +batteryVC+"%'" order by HPPN
            </summary>
            <param name="batteryVC"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetExistBattery(System.String)">
            <summary>
            3、 根据batteryVC取得Battery的记录数据 select * from OlymBattery where HPPN=batteryVC
            </summary>
            <param name="batteryVC"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.ChangeBattery(IMES.DataModel.OlymBatteryInfo,System.String)">
            <summary>
            4、 保存一条Battery的记录数据(update) update OlymBattery　所有字段whereHPPN=oldBattery
            </summary>
            <param name="item"></param>
            <param name="oldBattery"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddBattery(IMES.DataModel.OlymBatteryInfo)">
            <summary>
            5、Add(OlymBattery item, IUnitOfWork uow)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.RemoveBattery(IMES.DataModel.OlymBatteryInfo)">
            <summary>
            6、Remove(OlymBattery item, IUnitOfWork uow)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindBattery(System.String)">
            <summary>
            7、OlymBattery Find(String batteryVC)
            </summary>
            <param name="batteryVC"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindAllInternalCOA">
            <summary>
            取得全部InternalCOA信息
            按照type,code排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetExistInternalCOA(System.String)">
            <summary>
            根据code取得InternalCOA的记录数据
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddInternalCOA(IMES.DataModel.InternalCOAInfo)">
            <summary>
            Add InternalCOA
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.RemoveInternalCOA(IMES.DataModel.InternalCOAInfo)">
            <summary>
            Remove InternalCOA
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.FindInternalCOA(System.Int32)">
            <summary>
            Find InternalCOA
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPODLabelPartListByPartNo(System.String)">
            <summary>
            1      取得前段起包含于PartNo字符串的PODLabelPart数据的list(按Family列的字母序排序)
                  select * from PODLabelPart t
                  where CHARINDEX(RTRIM(t.PartNo),PartNo)=1
                  order by family
            </summary>
            <param name="PartNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetListByPartNoAndFamily(System.String,System.String)">
            <summary>
            2     取得某family和包含partno字符串的PODLabelPart数据的list
                 select *
                 from PODLabelPart t
                 where t.Family = Family
                 and CHARINDEX(RTRIM(t.PartNo),PartNo) = 1
            </summary>
            <param name="PartNo"></param>
            <param name="Family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPODLabelPartList">
            <summary>
            3      取得所有PODLabelPart数据的list(按Family列的字母序排序)
                  select * from PODLabelPart
                  order by family
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPodLabelPartListByPartNoLike(System.String)">
            <summary>
            SELECT * FROM dbo.PODLabelPart WHERE @Model LIKE (Rtrim(PartNo) +'%')
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdatePODLabelPart(IMES.DataModel.PODLabelPartDef,System.String)">
            <summary>
            4     修改一条PODLabelPart的记录数据(update)
                 update PODLabelPart
                 set
                 Family = @Family,
                 ParNo = @PartNo,
                 Editor = @Editor,
                 Cdt = @Cdt,
                 Udt = @Udt
                 where PartNo = partNo
            </summary>
            <param name="obj"></param>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPODLabelPart(IMES.DataModel.PODLabelPartDef)">
            <summary>
            5    插入一条新的PODLabelPart数据
                 
                 insert into  PODLabelPart
                 values(@Family,@PartNo,@Editor,@Cdt,@Udt) 
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePODLabelPart(System.String)">
            <summary>
            6  "删除一条PODLabelPart的记录数据
                delete from PODLabelPart
                where PartNo = partNo
            </summary>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAllTypeDescr">
            <summary>
            6,填充TypeDescr下拉框的项:
            SQL:select distinct Descr from Part (nolock) where(BomNodeType='C2' or BomNodeType='P1') and GetPartInfo(“FU”)='Y'
            
            select distinct a.Descr from Part a, PartInfo b where a.PartNo=b.PartNo and (a.BomNodeType='C2' or a.BomNodeType='P1') and b.InfoType=“FU” and b.InfoValue='Y
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetPartNoByTypeDescr(System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAllPAKikittingStationName(System.String)">
            <summary>
            8,
            Sql:select DISTINCT Name from station where stationtype='PAKKitting' order by name
            </summary>
            <param name="stationtype"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeDefList">
            <summary>
            1. 获取PartType表的所有记录 
            select * from PartType order by Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeInfo(System.Int32)">
            <summary>
            2. 根据id取出相应数据
            select * from PartType where ID=id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetTPList">
            <summary>
            3.取得PartType表中的所有TP值
            select TP from PartType order by TP
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetCodeListByTp(System.String)">
            <summary>
            4.根据TP取得PartType表的Code值
            select Code from PartType where TP=tp order by Code
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartType(IMES.DataModel.PartTypeDef)">
            <summary>
            5.添加一条记录
            </summary>
            <param name="partTypeDef"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdatePartType(IMES.DataModel.PartTypeDef)">
            <summary>
            6.更新指定的记录，所有字段 where ID=id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartType(System.Int32)">
            <summary>
            7.删除指定Id的数据 where ID=id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartType(System.String)">
            <summary>
            根据PartType删除PartType记录
            </summary>
            <param name="partType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeByCode(System.String)">
            <summary>
            8.根据code取出所有PartType的记录
            select * from PartType where CODE=code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeListByTp(System.String)">
            <summary>
            9.取得PartType 表中TP=tp的所有数据
            select * from ParType where TP=tp order by Code
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAllAssetRanges">
            <summary>
            1,SQL:select * from AssetRange order by code;
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddAssetRangeItem(IMES.DataModel.AssetRangeInfo)">
            <summary>
            2,SQL:insert into AssetRange values ( [Item中的各个字段...]);
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateAssetRangeItem(IMES.DataModel.AssetRangeInfo)">
            <summary>
            3,SQL:根据ID,更新Item中的字段.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteAssetRangeItem(System.Int32)">
            <summary>
            4,SQL:根据ID,删除记录.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAllCeldatas">
            <summary>
            1,SQL:select * from CELDATA order by ZMOD;
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddCeldataItem(IMES.DataModel.CeldataInfo)">
            <summary>
            2,SQL:insert into CELDATA values ( [Item中的各个字段...]);
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeleteCeldataItem(System.String)">
            <summary>
            4,SQL:根据ZMOD,删除记录.
            </summary>
            <param name="ZMOD"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartNodeType(System.String)">
            <summary>
            1.PartType表的数据需求
            1.1从part type表获取PartNodeType
            select *
            from PartType(NOLOCK) 
            where Tp=tp order by Indx
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetListByPartType(System.String)">
            <summary>
            2.Part表的数据需求
            2.1.根据part node type获取part数据列表,按照partno排序
            select * from part
            where PartType = PartType 
            order by partno
            </summary>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdatePartByPartNo(IMES.DataModel.PartDef,System.String)">
            <summary>
            2.2.修改part数据
            </summary>
            <param name="obj"></param>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPart(IMES.DataModel.PartDef)">
            <summary>
            2.3.添加一条part记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePart(System.String)">
            <summary>
            2.4.根据partno删除一条记录
            </summary>
            <param name="partNo"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetDescriptionList(System.String)">
            <summary>
            3 DescType表的数据需求
            3.1.根据type获取所有Description的数据列表
            select * from DescType 
            where TP = tp
            </summary>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddPartInfo(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            4.PartInfo表的数据需求
            4.1.写入PartInfo表一条数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.DeletePartInfo(System.String)">
            <summary>
            4.2.根据InfoType删除PartInfo一条数据
            delete from PartInfo where InfoType = item
            </summary>
            <param name="infoType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdatePartInfo(IMES.FisObject.Common.Part.PartInfo,System.String,System.String,System.String)">
            <summary>
            4.3.修改partinfo数据
            根据partno、infoType、infoValue修改partInfo数据
            </summary>
            <param name="obj"></param>
            <param name="partno"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartTypeAndPartInfoValueListByPartNo(System.String,System.String)">
            <summary>
            5.联合查询partinfo与parttype表，此类似方法(GetPartTypeAttributeAndPartInfoValueListByPartNo)在程序中已经存在：
            SELECT partType.Code AS Item, partType.Description AS Description, ISNULL(A.InfoValue,'') 
            AS Content, A.Editor AS Editor, A.Cdt AS Cdt, A.ID, A.PartNo, A.Udt 
            FROM (SELECT PartNo, InfoType, InfoValue, Editor, Cdt, ID, Udt 
            FROM PartInfo WHERE PartNo=@PartNo) AS A 
            RIGHT OUTER JOIN partType 
            ON A.InfoType=partType.Code 
            WHERE partType.Code=@Code
            </summary>
            <param name="partNo"></param>
            <param name="partType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetLstByBomNode(System.String)">
            <summary>
            1.   添加: 根据bomnode获取part列表
            select * from part where BomNodeType = bomNode
            </summary>
            <param name="bomNode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetLstByPartNo(System.String)">
            <summary>
            2.   添加: 根据partNo获取part列表  
            select * from part where partNo = partNo
            </summary>
            <param name="partNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetLstPartInfo(System.String,System.String,System.String)">
            <summary>
            5    添加: 根据partno、infoType、infoValue获取partInfo数据
            </summary>
            <param name="partno"></param>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoValueByPartDescr(System.String,System.String)">
            <summary>
            1.partinfo与part表的联合查询
            getCode(string family);
            Select distinct(b.InfoValue) from Part a, PartInfo b 
            where a.Descr=@family
            and a.PartNo=b.PartNo 
            and b.InfoType=’MB’ 
            order by InfoValue
            </summary>
            <param name="descr"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoValueByPartDescr(System.String,System.String,System.String,System.String)">
            <summary>
            Select distinct(b.InfoValue) from Part a, PartInfo b , PartInfo c
            where 
            a.Descr=@family 
            and a.PartNo=b.PartNo 
            and b.InfoType='MB'
            and a.PartNo = c.PartNo 
            and c.InfoType = 'MAC'
            and c.InfoValue = 'T'
            order by b.InfoValue
            </summary>
            <param name="descr"></param>
            <param name="infoType"></param>
            <param name="infoType2"></param>
            <param name="infoValue2"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetAssetRangesByCode(System.String)">
            <summary>
            SELECT [Begin],[End] FROM AssetRange WHERE Code=@Code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartByBomNodeTypeAndDescr(System.String,System.String,System.String[])">
            <summary>
            7. Part类型 ： 
            查找在IMES_FA..Product_Part 表中与当前Product 绑定的Parts 中存在BomNodeType为'AT' ，Descr 属性为'ATSN1' 或'ATSN4'或'ATSN7'的Part记录;
            </summary>
            <param name="productId"></param>
            <param name="bomNodeType"></param>
            <param name="descrs"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartByBomNodeType(System.String,System.String)">
            <summary>
            8. Part类型 ： 
            查找在IMES_FA..Product_Part 表中与当前Product 绑定的Parts 中存在BomNodeType为'AT' 的Part记录;
            </summary>
            <param name="productId"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartSnListFromProductPart(System.String,System.String)">
            <summary>
            11.在IMES_FA..Product_Part 表中取PartSn 以字符'C' 开头BomNodeType为'KP' 的记录的PartSn
            </summary>
            <param name="partSnPrefix"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetInfoValue(System.String)">
            <summary>
            2.根据infotype获取part表与partinfo表的infoValue数据
            select distinct RTRIM(b.InfoValue) 
            from Part a, PartInfo b
            where a.PartNo = b.PartNo
            and a.BomNodeType=@Type 
            and b.InfoType=@Type 
            order by InfoValue
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistInternalCOA(System.String,System.String)">
            <summary>
            使用Code = @CustomerSN and Type = 'SN' 或者Code = @DeliveryNo and Type = 'DN'查询InternalCOA 表 存在记录时
            </summary>
            <param name="code"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueTypeList(System.String)">
             <summary>
             select  ID, Type, Value, Description, Editor, Cdt, Udt
            where Type=@Type
             </summary>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueTypeList(System.String,System.String)">
             <summary>
             select  ID, Type, Value, Description, Editor, Cdt, Udt
            where Type=@Type and Value=@Value
             </summary>
             <param name="type"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateConstValueType(IMES.DataModel.ConstValueTypeInfo)">
             <summary>
             update ConstValueType
             SET  Type, Value, Description, Editor, Cdt, Udt
            where ID=@ID
             </summary>
             <param> </param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.InsertConstValueType(IMES.DataModel.ConstValueTypeInfo)">
             <summary>
             Insert ConstValueType(Type, Value, Description, Editor, Cdt, Udt)
            values(Type, Value, Description, Editor, Cdt, Udt)
             </summary>
             <param> </param>
             <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.InsertMultiConstValueType(System.String,System.Collections.Generic.IList{System.String},System.String,System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.RemoveConstValueType(System.Int32)">
            <summary>
            Delete ConstValueType
            where ID =@ID
            </summary>
            <param> </param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.RemoveMultiConstValueType(System.String,System.String)">
            <summary>
            Delete ConstValueType
            where Type in (@Type)
            </summary>
            <param> </param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueTypeList">
            <summary>
            select  distinct Type from ConstValueType        
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueListByType(System.String)">
            <summary>
            Select EptName,Descr From FaException OA、OFT、Other、PE
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetProductPart(System.String,System.String)">
            <summary>
            首先在IMES_FA..Product_Part 表中取PartSn 以字符'C' 开头BomNodeType 为'KP' 的记录Part
            </summary>
            <param name="partSnPrefix"></param>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateForceNWCByProductID(System.String,System.String,System.String)">
            <summary>
            1. Update [ForceNWC], Station为returnstation 
            Update [ForceNWC] 
            [ForceNWC]= ReturnWC# , [PreStation]= '45'
            Where [ProductID]= ProductID# 
            </summary>
            <param name="forceNwc"></param>
            <param name="preStation"></param>
            <param name="productId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueNameListByType(System.String)">
            <summary>
            实现功能：返回KeyPartType列表（select Name from IMES2012_GetData..ConstValue where Type='ChangeKP'）
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateForceNWC(IMES.DataModel.ForceNWCInfo,IMES.DataModel.ForceNWCInfo)">
            <summary>
            Update [ForceNWC] SET [ForceNWC]= ReturnWC# ,[PreStation]= 'RK'Where [ProductID]= ProductID#
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetValueFromSysSettingByName(System.String)">
            <summary>
            SQL：select Value  FROM SysSetting
            where name=’SITECODE’;
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueInfoList(IMES.DataModel.ConstValueInfo)">
            <summary>
            ex: Select Name,Value From ConstValue WHERE Type=’FaException’ 
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.   
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetTypeListFromConstValue">
            <summary>
            Select distinct Type fromConstValue order by Type
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetConstValueListByType(IMES.DataModel.ConstValueInfo,IMES.DataModel.ConstValueInfo)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddConstValue(IMES.DataModel.ConstValueInfo)">
            <summary>
            //向ConstValue表增加记录
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateConstValue(IMES.DataModel.ConstValueInfo,IMES.DataModel.ConstValueInfo)">
            <summary>
            更新ConstValue表某条记录
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.RemoveConstValue(IMES.DataModel.ConstValueInfo)">
            <summary>
            删除ConstValue数据
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartsByBomNodeTypeAndLikeDescr(System.String,System.String)">
            <summary>
            Part数据表中Part.PartNo(Part.BomNodeType='P1'  and  Part.Descr like 'CommonParts%')
            </summary>
            <param name="bomNodeType"></param>
            <param name="descrPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoValue(System.String,System.String)">
            <summary>
            select InfoValue from PartInfo where PartNo = @Pno and InfoType=@InfoType
            </summary>
            <param name="partno"></param>
            <param name="infotype"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckExistForceNWC(IMES.DataModel.ForceNWCInfo)">
            <summary>
            判断[ForceNWC]表是否有指定ProductID的记录的接口
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.   
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.CheckBySP(System.String,System.String,System.String)">
            <summary>
            Check by SP
            </summary>
            <param name="spName"></param>
            <param name="prodId"></param>
            <param name="checkItem"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetDescrListFromPartByBomNodeType(System.String)">
            <summary>
            1.加载cmbQryFamily 数据:
            select distinct Descr from Part nolock where BomNodeType = 'MB' order by Descr
            </summary>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetCauseItemListByType(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetCountOfKpRepairCount(IMES.DataModel.KeyPartRepairInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetKPRepairDefectList(System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddKPRepair(IMES.DataModel.KeyPartRepairInfo)">
            <summary>
            在KeyPartRepair表中添加一条记录，返回其ID
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.AddKPRepairDefect(IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            在KeyPartRepair_DefectInfo表中添加一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateKPRepairDefect(IMES.FisObject.Common.Repair.RepairDefect,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            更新KeyPartRepair_DefectInfo表中的记录
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.UpdateKPRepair(IMES.DataModel.KeyPartRepairInfo,IMES.DataModel.KeyPartRepairInfo)">
            <summary>
            对于KeyPartRepair表中记录，更新其值，同时更新记录的UDT
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.CheckIfKPRepairFinished(System.String)" -->
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetKPRepairList(IMES.DataModel.KeyPartRepairInfo)">
            <summary>
            select * from KeyPartRepair where ProductID='…' and Status=… ...order by Udt desc
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetInfoValueList(System.String[],System.String)">
            <summary>
            输入参数：string[] Pnlist， @InfoType
            SELECT DISTINCT  InfoValue FROM PartInfo (nolock)
                  WHERE PartNo in (Pnlist)
                  AND InfoType = 'VendorCode'
                  ORDER BY InfoValue
            </summary>
            <param name="pnlist"></param>
            <param name="infoType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoValueByInfoTypesAndInfoValuePrefix(System.String[],System.String)">
            <summary>
            select a.InfoValue as IECPN from PartInfo a, PartInfo b
            where a.PartNo = b.PartNo 
            and a.InfoType in ('RDESC','RRRDESC','RRRRRDESC')
            and b.InfoValue = left('[CTNo]',5)
            </summary>
            <param name="infoTypes"></param>
            <param name="ctno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IPartRepository.GetPartInfoList(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            1、查询PartInfo
            PartInfo.PartNo = Part.PartNo and PartInfo.InfoValue=Left([CT No],5)
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetAssetRangeInfoByRangeAndId(System.String,System.String,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Part.IPartRepository.GetAssetRangeInfoByRangeAndIdReversely(System.String,System.String,System.Int32)" -->
        <member name="T:IMES.FisObject.Common.PartSn.PartSn">
            <summary>
             PartSn (CT sn)
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PartSn.PartSn.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.IecSn">
            <summary>
            Iec Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.IecPn">
            <summary>
            Iec Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.Type">
            <summary>
            Part 类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.VendorSn">
            <summary>
            Vendor Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.VendorDCode">
            <summary>
            Vendor Dcode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.VCode">
            <summary>
            Vcode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.DateCode">
            <summary>
            Date code
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.PartSn.PartSn.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.FillRepair">
            <summary>
            填充repair对象
            </summary>
            <param name="rep">repair</param>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.Repair">
            <summary>
            MB/Product维修记录
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,IMES.FisObject.Common.Repair.Repair.RepairStatus,System.String,System.String,System.Int32,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.SetStatus(IMES.FisObject.Common.Repair.Repair.RepairStatus)">
            <summary>
            设置维修状态
            </summary>
            <param name="status">维修状态</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.SetLine(System.String)">
            <summary>
             设置Line
            </summary>
            <param name="line">Line</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.SetStation(System.String)">
            <summary>
            设置Station
            </summary>
            <param name="station">Station</param>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.Repair.SetEditor(System.String)">
            <summary>
            设置Editor
            </summary>
            <param name="editor">Editor</param>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Sn">
            <summary>
            Repair记录所属的主板/机器标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Model">
            <summary>
            机型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Type">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.LineID">
            <summary>
            维修站Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Station">
            <summary>
            维修站
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Status">
            <summary>
            维修状态 
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.TestLogID">
            <summary>
            TestLogID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.LogId">
            <summary>
            LogId(PCBLog or ProductLog)
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Defects">
            <summary>
            一次维修的Defect列表
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.Repair.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.Repair.RepairStatus">
            <summary>
            维修状态
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBMO.MBMO">
            <summary>
            翋啣秶婖隆等濬﹝珨跺秶婖隆等隅汜莉嗣屾輸議珨倰瘍腔翋啣﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.IncreasePrintedQty(System.Int32)">
            <summary>
            崝樓湖荂翋啣梓杅講
            </summary>
            <param name="byQty">陔崝杅講</param>
            <returns>妗暱崝樓杅講</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.DecreasePrintedQty(System.Int32)">
            <summary>
            熬屾湖荂翋啣梓杅講
            </summary>
            <param name="byQty">熬屾杅講</param>
            <returns>妗暱熬屾杅講</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.DismantleMB(System.String,System.String)">
            <summary>
            隙彶眒郪蚾腔翋啣﹝眕晞蔚懂笭陔汜莉﹝
            </summary>
            <param name="startMBSn">宎翋啣唗瘍</param>
            <param name="endMBSn">賦旰翋啣唗瘍</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.GenerateMB(System.Int32)">
            <summary>
            莉汜翋啣陓洘﹝
            </summary>
            <param name="qty">渾莉汜杅講</param>
            <returns>莉汜腔翋啣唗瘍摩磁</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MBMO.MBMO.AddDismantleLog">
            <summary>
            氝樓翋啣隙彶祩﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.MONo">
            <summary>
             MONo
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Family">
            <summary>
             MB Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Model">
            <summary>
             Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Qty">
            <summary>
             Mo婦漪腔Mb軞杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.PrintedQty">
            <summary>
             森MO笢眒莉汜MB唗瘍腔杅講
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Remark">
            <summary>
             Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Status">
            <summary>
             Status
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Editor">
            <summary>
             Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Cdt">
            <summary>
             Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Udt">
            <summary>
             Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBMO.MBMO.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.IMB">
            <summary>
            翋啣杅擂勤砓諉諳﹝
            籵徹珨脯諉諳猾蚾ㄛ妏扂蠅褫眕婓杅擂勤砓脯棒俇傖晊喧紱釬﹜遣湔紱釬睿窒煦枑脹髡夔奧拸剒曹載覃蚚測鎢睿源楊﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.AddLog(IMES.FisObject.PCA.MB.MBLog)">
            <summary>
            氝樓祩﹝
            </summary>
            <param name="log">祩勤砓</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.GetLatestFailLog">
            <summary>
            Get Latest Fail Log
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.GenerateChildMB(System.Int32)">
            <summary>
            蟀啣莉汜硌隅杅講腔赽啣
            </summary>
            <param name="qty">赽啣杅講</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.SetMTAMark">
            <summary>
            扢离MTA梓暮﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.ResetMTAMark">
            <summary>
            葩弇MTA梓暮﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.BindCPUVendor(System.String)">
            <summary>
            堂隅CPU鼎茼妀陓洘﹝
            </summary>
            <param name="vendor">CPU鼎茼妀梓妎(趼睫揹)</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.GetLogByStation(System.String,System.Boolean)">
            <summary>
            鳳硌隅station腔log
            </summary>
            <param name="station">station</param>
            <param name="isPass">isPass</param>
            <returns>MBLog</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.AddTestLogDefect(System.Int32,IMES.FisObject.Common.TestLog.TestLogDefect)">
            <summary>
            崝樓翋啣腔TestLogDefect
            </summary>
            <param name="testLogId">testLogId</param>
            <param name="defect">Test log defect</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.RemoveTestLogDefect(System.Int32,System.Int32)">
            <summary>
            刉壺翋啣腔TestLogDefect
            </summary>
            <param name="testLogId">testLogId</param>
            <param name="testLogDefectId">testLogDefectId</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.UpdateTestLogDefect(System.Int32,IMES.FisObject.Common.TestLog.TestLogDefect)">
            <summary>
            刉壺翋啣腔TestLogDefect
            </summary>
            <param name="testLogId">testLogId</param>
            <param name="defect">defect</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.SetAttributeValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            扢离秶最諷秶袨怓硉
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor">Editor</param>
            <param name="station">Station</param>
            <param name="descr">Description</param>
            <remarks>
            硌隅扽俶眒湔婓寀葡裔埻扽俶硉肮奀暮翹PCBAttributeLog,瘁寀陔崝扽俶
            </remarks>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>殿隙扽俶硉,硌隅扽俶祥湔婓寀殿隙null</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.AddMBInfo(IMES.FisObject.PCA.MB.MBInfo)">
            <summary>
            崝樓翋啣扽俶
            </summary>
            <param name="info">翋啣扽俶</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.AddRptRepair(IMES.FisObject.PCA.MB.MBRptRepair)">
            <summary>
            Add rpt repair record
            </summary>
            <param name="rptRepair"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMB.SetSn(System.String)">
            <summary>
            Set a new PCB serial number.
            </summary>
            <param name="newSn"></param>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Sn">
            <summary>
            翋啣唗瘍﹝趼睫揹濬倰﹝
            翋啣唗瘍蚚衾峔珨梓妎珨輸翋啣﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.CustSn">
            <summary>
            Custom Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.SMTMO">
            <summary>
            秶婖隆等瘍﹝趼睫揹濬倰﹝
            秶婖隆等瘍蚚衾峔珨梓妎珨跺秶婖隆等﹝珨跺秶婖隆等隅汜莉嗣屾輸議珨倰瘍腔翋啣﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Model">
            <summary>
            翋啣倰瘍﹝趼睫揹濬倰﹝
            翋啣倰瘍蚚衾峔珨梓妎珨笱翋啣﹝
            </summary> 
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.PCBModelID">
            <summary>
            翋啣倰瘍﹝趼睫揹濬倰﹝
            翋啣倰瘍蚚衾峔珨梓妎珨笱翋啣﹝
            </summary> 
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.DateCode">
            <summary>
            鎢﹝趼睫揹濬倰﹝
            翋啣腔鎢﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.MAC">
            <summary>
            羸极湔諷秶鎢﹝趼睫揹濬倰﹝
            羸极湔諷秶鎢匋備MAC華硊ㄛ蚚衾婓眕怮厙釐奻峔珨梓妎珨怢籵陓扢掘昜燴華硊﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.UUID">
            <summary>
            籵蚚峔珨梓妎睫﹝趼睫揹濬倰﹝
            翋啣腔峔珨梓妎睫峔珨梓妎珨輸翋啣﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.ECR">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.IECVER">
            <summary>
            IEC唳掛瘍﹝趼睫揹濬倰﹝
            IEC隅砱腔翋啣唳掛瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.CUSTVER">
            <summary>
            諦誧唳掛瘍﹝趼睫揹濬倰﹝
            諦誧隅砱腔翋啣唳掛瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Udt">
            <summary>
            暮翹載陔鎢﹝濬倰﹝
            暮翹蜆沭杅擂腔載陔睿奀潔﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Cdt">
            <summary>
            暮翹斐膘鎢﹝濬倰﹝
            暮翹蜆沭杅擂腔斐膘睿奀潔﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.MBStatus">
            <summary>
            翋啣汜莉袨怓梓妎﹝繹撼濬倰﹝
            梓妎翋啣絞腔汜莉袨怓﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.ModelObj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.MB1397">
            <summary>
            翋啣1397論model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Model1397Obj">
            <summary>
            翋啣1397論Model勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Customer">
            <summary>
            1397論勤茼腔cusomer, 硐衄翋啣湔婓勤茼1397論奀符衄硉
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.HasBeenCut">
            <summary>
            翋啣賃袨怓﹝票嫌濬倰﹝
            殿隙翋啣岆瘁眒酕徹蟀售賃﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.IsTrialRun">
            <summary>
            岆瘁岆Trial Run翋啣
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.IsVB">
            <summary>
            岆瘁岆VB
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.IsRCTO">
            <summary>
            岆瘁岆RCTO
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.MBRptRepairs">
            <summary>
            mb rpt repair history
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.IMB.MBCode">
            <summary>
            mbcode
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.PalletWeight">
            <summary>
            Pallet称重对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Id">
            <summary>
            自增ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.FamilyID">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Qty">
            <summary>
            满栈板机器数量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Weight">
            <summary>
            标准重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Tolerance">
            <summary>
            允许误差
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletWeight.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonInfo.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonInfo.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartStrategyConfig.PartStrategySection">
            <summary>
            PartStrategySection配置文件中自定义Section
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.AssemblyCode">
            <summary>
            Assembly Code勤砓
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.AssemblyCode.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.AssemblyCode.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.AssCode">
            <summary>
            AssemblyCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Pn">
            <summary>
            Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCode.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PartSn.IPartSnRepository.FindPartSnByVendorSn(System.String)">
            <summary>
            根据Vendor SN取PartSn
            </summary>
            <param name="vendorSn">vendorSn</param>
            <returns>PartSn</returns>
        </member>
        <member name="M:IMES.FisObject.Common.PartSn.IPartSnRepository.GetCombineCountByPartType(System.String,System.DateTime,System.DateTime)">
            <summary>
            获取不同时间段内KeyParts已结合的数量
            夜班：前一天晚上20:30到早上7:30
            白班：早上8:00到晚上20:30
            线别最后一位D是白班(从早上8:00开始)，N是夜班(从晚上20:30开始)
            注：
            A.若当天班次还没有到开班时间，则取前一天的数量
            B.从PartSN表里按照PartType获取时间段内已结合的数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Material.Material.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.Material.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Material.Material.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.Material.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Hold.Hold.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Defect.Defect">
            <summary>
            炵苀笢妏蚚腔DefectCode, DefectCode煦峈2濬ㄩPRD, QC
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Defect.Defect.#ctor(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            蘇凳婖滲杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.DefectCode">
            <summary>
            Defect code
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Type">
            <summary>
            DefectCode濬倰ㄛ硉毓峓ㄩ'PRD', 'QC'
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Descr">
            <summary>
            Defect鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.EngDescr">
            <summary>
            English Defect鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Defect.Defect.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Defect.Defect.DefectType">
            <summary>
            Defect濬倰
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MODismantleLog">
            <summary>
             MODismantleLog
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MODismantleLog.#ctor(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Int32)">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.PcbNo">
            <summary>
            PcbNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Tp">
            <summary>
            Tp
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.SmtMo">
            <summary>
            SmtMo
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Reason">
            <summary>
            Reason
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MODismantleLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MB">
            <summary>
            翋啣濬﹝翋啣岆PCA桴腔翋猁紱釬勤砓ㄛ湮窒煦紱釬飲價衾翋啣俇傖﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            斐膘珨跺陔腔翋啣勤砓﹝
            </summary>
            <param name="sn">翋啣唗瘍</param>
            <param name="mo">秶婖隆等瘍</param>
            <param name="custSn">翋啣諦誧唗蹈瘍</param>
            <param name="model">翋啣倰瘍</param>
            <param name="datecode">翋啣鎢</param>
            <param name="mac">翋啣羸极湔諷秶華硊</param>
            <param name="uuid">翋啣籵蚚峔珨梓妎</param>
            <param name="ecr">???</param>
            <param name="iecVer">IEC諦誧唳掛瘍</param>
            <param name="custVer">翋啣諦誧唳掛瘍</param>
            <param name="udt">翋啣暮翹載陔</param>
            <param name="cdt">翋啣暮翹斐膘</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.FillingRepairDefects(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            沓喃RepairDefects
            </summary>
            <param name="rep"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.FillingTestLogDefects(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            沓喃TestLogDefects
            </summary>
            <param name="tstlg"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetRepair">
            <summary>
            腕翋啣垀衄峎党暮翹﹝
            </summary>
            <returns>峎党勤砓摩磁</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddRepair(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            砃翋啣笢氝樓珨沭氝樓峎党暮翹﹝
            </summary>
            <param name="rep">峎党暮翹勤砓</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair崝樓珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemoveRepairDefect(System.Int32,System.Int32)">
            <summary>
            峈硌隅Repair刉壺珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="repairDefectId">硌隅RepairDefect腔Id</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.UpdateRepairDefect(System.Int32,IMES.FisObject.Common.Repair.RepairDefect)">
            <summary>
            峈硌隅Repair載陔珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect">硌隅RepairDefect</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetCurrentRepair">
            <summary>
            腕翋啣絞峎党暮翹﹝
            </summary>
            <returns>絞峎党勤砓</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetRepairDefectBySiteComponent(System.String,System.String)">
            <summary>
            鳳硌隅Site+Component腔峎党盪妢
            </summary>
            <param name="site">site</param>
            <param name="component">component</param>
            <returns>峎党盪妢</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.CompleteRepair(System.String,System.String,System.String)">
            <summary>
            complte珨棒峎党
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.ChangePart(System.Int32,IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            蔚硌隅partID勤茼腔Part杸遙
            </summary>
            <param name="partID">硌隅partID</param>
            <param name="newPart">陔Part</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddLog(IMES.FisObject.PCA.MB.MBLog)">
            <summary>
            氝樓祩﹝
            </summary>
            <param name="log">祩勤砓</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetTestLog">
            <summary>
            腕聆彸祩摩磁﹝籵都蚚衾脤梑麼潰脤杻隅祩陓洘﹝
            </summary>
            <returns>殿隙聆彸祩勤砓蹈桶﹝</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddTestLog(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            氝樓聆彸暮翹
            </summary>
            <param name="testLog">聆彸暮翹</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddTestLogDefect(System.Int32,IMES.FisObject.Common.TestLog.TestLogDefect)">
            <summary>
            峈硌隅Repair崝樓珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemoveTestLogDefect(System.Int32,System.Int32)">
            <summary>
            峈硌隅Repair刉壺珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="repairDefectId">硌隅RepairDefect腔Id</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.UpdateTestLogDefect(System.Int32,IMES.FisObject.Common.TestLog.TestLogDefect)">
            <summary>
            峈硌隅Repair載陔珨跺RepairDefect
            </summary>
            <param name="repairId">硌隅Repair腔Id</param>
            <param name="defect">硌隅RepairDefect</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetAttributeValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            扢离秶最諷秶袨怓硉
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor">Editor</param>
            <param name="station">Station</param>
            <param name="descr">Description</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GenerateChildMB(System.Int32)">
            <summary>
            蟀啣莉汜硌隅杅講腔赽啣
            </summary>
            <param name="qty">赽啣杅講</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetMTAMark">
            <summary>
            扢离MTA梓暮﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.ResetMTAMark">
            <summary>
            葩弇MTA梓暮﹝
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.BindCPUVendor(System.String)">
            <summary>
            堂隅CPU鼎茼妀陓洘﹝
            </summary>
            <param name="vendor">CPU鼎茼妀梓妎(趼睫揹)</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetLogByStation(System.String,System.Boolean)">
            <summary>
            鳳硌隅station腔log
            </summary>
            <param name="station">station</param>
            <param name="isPass">isPass</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddMBInfo(IMES.FisObject.PCA.MB.MBInfo)">
            <summary>
            崝樓翋啣扽俶
            </summary>
            <param name="info">翋啣扽俶</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetModelProperty(System.String)">
            <summary>
            鳳Model硌隅扽俶
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetModelProperty(System.String,System.Object)">
            <summary>
            悵湔Model硌隅扽俶
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔價掛扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetExtendedProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔孺桯扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetProperty(System.String,System.Object)">
            <summary>
            扢离潰脤醴梓勤砓腔價掛扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetExtendedProperty(System.String,System.Object,System.String)">
            <summary>
            扢离潰脤醴梓勤砓腔孺桯扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetPizzaProperty(System.String)">
            <summary>
            鳳潰脤醴梓勤砓腔pizza扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.SetPizzaProperty(System.String,System.Object)">
            <summary>
            扢离潰脤醴梓勤砓腔pizza扽俶
            </summary>
            <param name="name">扽俶靡</param>
            <param name="value">扽俶硉</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.FuzzyQueryExtendedProperty(System.String)">
            <summary>
            腕潰脤沭醴﹝潰脤沭醴籵徹賜醱峎誘甜湔揣婓杅擂踱笢﹝
            </summary>
            <param name="customer">諦誧梓妎(趼睫揹)</param>
            <param name="station">桴梓妎(趼睫揹)</param>
            <returns>潰脤沭醴勤砓摩磁</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.PartUniqueCheck(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿坳PartOwner堂隅, 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.PartUniqueCheckWithoutOwner(System.String,System.String)">
            <summary>
            潰脤硌隅part岆瘁眒冪睿any PartOwner堂隅(including current owner), 硐偌桽籵蚚寞寀潰脤ㄛ
            撈峈眒堂隅Part飲湔溫婓Product_Part, PCB_Part, Pizza_Part
            </summary>
            <param name="pn">pn</param>
            <param name="sn">sn</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.CheckPartBinded(System.String,System.Collections.Generic.IList{System.String},System.String,System.String,System.String)">
            <summary>
            檢查刷入PartNo/PartType/CT/CheckItemType 是否已收集過,若未收集過報錯
            </summary>
            <param name="partType"></param>
            <param name="partNoList"></param>
            <param name="BomNodeType"></param>
            <param name="checkItemType"></param>
            <param name="sn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.BindPart(System.Collections.Generic.List{IMES.FisObject.Common.Part.IProductPart})">
            <summary>
            蔚Part堂隅善PartOwner勤砓
            跦擂Part濬倰鳳眈茼腔IPartStrategy妗珋ㄛ覃蚚IPartStrategy.BindTo()
            眕妗珋祥肮濬倰Part腔堂隅軀憮
            </summary>
            <param name="parts">猁堂隅腔part蹈桶</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddPart(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            婓ProductPart蹈桶笢氝樓硌隅part
            涴岆PartOwner腔蘇俴峈ㄛ硐蔚
            Part等曾堂隅善Owner祥頗渀勤祥
            肮腔Part濬倰輛俴杻忷腔揭燴
            </summary>
            <param name="part">part</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.AddRptRepair(IMES.FisObject.PCA.MB.MBRptRepair)">
            <summary>
            婓MBRepair蹈桶笢氝樓Repair record
            </summary>
            <param name="rptRepair">Repair record</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemovePart(System.String,System.String)">
            <summary>
            婓ProductPart蹈桶笢刉壺硌隅part
            </summary>
            <param name="partSn">partSn</param>
            <param name="partPn">partPn</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemovePartsByType(System.String)">
            <summary>
            刉壺硌隅CheckItemType腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemovePartsByBomNodeType(System.String)">
            <summary>
            刉壺硌隅BomNodeType濬倰腔Part
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.RemoveAllParts">
            <summary>
            刉壺垀衄腔Parts
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.GetProductPartByStation(System.String)">
            <summary>
            鳳硌隅桴堂隅腔Part
            </summary>
            <param name="station">station</param>
            <returns>Part蹈桶</returns>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Sn">
            <summary>
            殿隙翋啣唗瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.CustSn">
            <summary>
            Custom Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.SMTMO">
            <summary>
            殿隙秶婖隆等瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Model">
            <summary>
            殿隙翋啣倰瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.PCBModelID">
            <summary>
            殿隙翋啣倰瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.DateCode">
            <summary>
            殿隙翋啣鎢
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MAC">
            <summary>
            殿隙羸极湔諷秶華硊
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.UUID">
            <summary>
            殿隙籵蚚峔珨梓妎
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.ECR">
            <summary>
            ECR
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.IECVER">
            <summary>
            IEC唳掛瘍﹝趼睫揹濬倰﹝
            IEC隅砱腔翋啣唳掛瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.CUSTVER">
            <summary>
            諦誧唳掛瘍﹝趼睫揹濬倰﹝
            諦誧隅砱腔翋啣唳掛瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.CVSN">
            <summary>
            Cpu vendor sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.State">
            <summary>
            PCB State:Ship out
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.ShipMode">
            <summary>
            Shiping Mode: RCTO/FRU/SKU
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Udt">
            <summary>
            暮翹載陔鎢﹝濬倰﹝
            暮翹蜆沭杅擂腔載陔睿奀潔﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Cdt">
            <summary>
            暮翹斐膘鎢﹝濬倰﹝
            暮翹蜆沭杅擂腔斐膘睿奀潔﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.ModelObj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Model1397Obj">
            <summary>
            Product垀扽儂倰勤砓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MB1397">
            <summary>
            翋啣1397論model
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Customer">
            <summary>
            1397論勤茼腔cusomer, 硐衄翋啣湔婓勤茼1397論奀符衄硉
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.IsTrialRun">
            <summary>
            岆瘁岆Trial Run翋啣
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:IMES.FisObject.PCA.MB.MB.IsVB" -->
        <member name="P:IMES.FisObject.PCA.MB.MB.MBStatus">
            <summary>
            翋啣汜莉袨怓梓妎﹝繹撼濬倰﹝
            梓妎翋啣絞腔汜莉袨怓﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MBParts">
            <summary>
            眒堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MBRptRepairs">
            <summary>
            mb rpt repair history
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MBInfos">
            <summary>
            MB扽俶蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Repairs">
            <summary>
            峎党暮翹蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.MBLogs">
            <summary>
            徹桴log蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.TestLogs">
            <summary>
            聆彸log蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.PCBAttributes">
            <summary>
            PCB 秶最諷秶袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.PCBAttributeLogs">
            <summary>
            PCB 秶最諷秶袨怓Log
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.RepairTargetModel">
            <summary>
            掩峎党勤砓(MB/Product)腔儂倰
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.IsFirstRepair">
            <summary>
            岆瘁場棒峎党
            瓚剿寞寀ㄩ1.祥湔婓淏婓峎党腔暮翹˙
                              2.郔陔珨捩TestLog腔Status = Fail
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.LatestTestLog">
            <summary>
            郔陔腔聆彸log
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.HasBeenCut">
            <summary>
            翋啣賃袨怓﹝票嫌濬倰﹝
            殿隙翋啣岆瘁眒酕徹蟀售賃﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MB.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MB.MBType">
            <summary>
            啣縐濬倰
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MB.MBType.GetAllTypes">
            <summary>
            鳳垀衄啣縐濬倰
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMODismantleLogRepository.AddBatch(System.Collections.Generic.IList{IMES.FisObject.PCA.MB.MODismantleLog})">
            <summary>
            插入一组MoDismantleLog记录
            </summary>
            <param name="items"></param>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.IPalletRepository">
            <summary>
            Pallet对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.FillPalletLogs(IMES.FisObject.PAK.Pallet.Pallet)">
            <summary>
            晚加载PalletLog
            </summary>
            <param name="currentPallet"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDeliveryPallet(System.String)">
            <summary>
            根据PalletNo获得DeliveryPallet列表
            </summary>
            <param name="PalletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePltWeightToSAP(System.String)">
            <summary>
            调用PAK库中的SP:op_Plt_upload_to_SAP
            </summary>
            <param name="PalletNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDeliveryPalletByDNAndPallet(System.String,System.String)">
            <summary>
            根据DnNo, PalletNo获得DeliveryPallet列表
            </summary>
            <param name="DnNo"></param>
            <param name="PalletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.RemoveFwdPltByPickID(System.String)">
            <summary>
            1.清理FwdPlt 旧有数据
            接口参考：
            public 
            实现参考：
            DELETE FROM FwdPlt WHERE PickID = @pickID
            </summary>
            <param name="pickID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPickIDCtrlInfoByPickID(System.String)">
            <summary>
            
            </summary>
            <param name="pickID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletList(System.String)">
            <summary>
            根据DNId获得Pallet列表
            </summary>
            <param name="DNId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetAllPalletWeightByFamily(System.String)">
            <summary>
            根据family获得PalletWeight列表
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletWeightByID(System.Int32)">
            <summary>
            根据ID删除PalletWeight
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddPalletWeight(IMES.FisObject.PAK.Pallet.PalletWeight)">
            <summary>
            新增PalletWeight
            </summary>
            <param name="palletWeight"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePalletWeight(IMES.FisObject.PAK.Pallet.PalletWeight)">
            <summary>
            参考sql
            update PalletWeight 
            set Family=?,
                Region=?,
                QTY=?,
                Weight=?,
                Tolerance=?,
                Editor=?,
                Udt=?
            where ID=?
            </summary>
            <param name="palletWeight"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.IFPalletWeightIsExists(System.String,System.String)">
            <summary>
            参考sql 
            select * from PalletWeight where Family=? and Region=?
            </summary>
            <param name="family"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddForwarder(IMES.DataModel.ForwarderInfo)">
            <summary>
            添加一条Forwarder
            id被写回在item里面返回
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetForwarderList(System.String,System.String)">
            <summary>
            取得查询列表
            SELECT [Date], [Forwarder],[MAWB],[Driver],[TruckID],[Editor],CONVERT(char(10), [Cdt], 21) as [UploadDate],CONVERT(char(10), [Udt], 21) as Udt, Id  
                    FROM [Forwarder]
                    WHERE CONVERT(char(10), Cdt, 21) BETWEEN @StartDate AND @EndDate
                    ORDER BY [Cdt]
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateForwarder(IMES.DataModel.ForwarderInfo)">
            <summary>
            更新Forwarder
            UPDATE [Forwarder]
             SET [Driver] = @NewDriver,
             [TruckID] = @NewTruckID,
             [Editor] = @Editor,
             [Udt] = GETDATE()
             WHERE [Id] = @Id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeleteForwarder(IMES.DataModel.ForwarderInfo)">
            <summary>
            删除数据
            DELETE FROM [IMES_PAK].[dbo].[Forwarder] WHERE [Forwarder] = @Id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetExistForwarder(IMES.DataModel.ForwarderInfo)">
            <summary>
            取得存在的Forwarder相关数据
            SELECT Id FROM [Forwarder]
            WHERE [Forwarder]=@Forwarder AND [Date]=@Date AND [MAWB]=@MAWB AND [Driver]=@Driver AND [TruckID]=@TruckID
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.ImportForwarders(System.Collections.Generic.IList{IMES.DataModel.ForwarderInfo})" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletIDByPalletNo(System.String)">
            <summary>
            根据Pallet No删除PalletID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChepPalletList">
            <summary>
            1..获取所有的ChepPallet信息。
            select * from ChepPallet order by ChepPalletNo;
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChepPalletInfo(System.String)">
            <summary>
            2.获取一条ChepPallet 信息
            select ChepPalletNo,Editor,Cdt,Udt from ChepPallet where ChepPalletNo=chepPalletNo;
            </summary>
            <param name="chepPalletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddGetChepPalletInfo(IMES.DataModel.ChepPalletInfo)">
            <summary>
            3.添加一条ChepPallet信息
            insert into ChepPallet values (item.chepPalletNo,item.editor,item.cdt,item.udt);
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeleteChepPalletInfo(System.Int32)">
            <summary>
            4.删除一条ChepPallet数据
            delete from ChepPallet where ID=@id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetQtyInfoList">
            <summary>
            1.取得所有的PalletStatndard信息
            select *  from PalletStatndard order by FullQty
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetQtyInfo(System.Int32)">
            <summary>
            2.根据fullQty取得PalletStatndard的一条记录
            select *  from PalletStatndard where ID=@id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddQtyInfo(IMES.DataModel.PalletQtyInfo)">
            <summary>
            3.添加一条记录
            insert into PalletStatndard
            values ('pqInfo.fullQty','pqInfo.tireQty','pqInfo.mediumQty','pqInfo.litterQty',''pqInfo.editor','pqInfo.cdt','pqInfo.udt')
            </summary>
            <param name="pqInfo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeleteQtyInfo(System.Int32)">
            <summary>
            4.删除一条记录
            delete from PalletStatndard where ID=@id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateQtyInfo(IMES.DataModel.PalletQtyInfo,System.Int32)">
            <summary>
            5.更新一条记录
            update PalletStatndard
            set fullQty=pqInfo.fullQty,tireQty='pqInfo.tireQty',mediumQty='pqInfo.mediumQty',litterQty='pqInfo.litterQty',
            editor=''pqInfo.editor',udt='pqInfo.udt'
            where ID=id
            </summary>
            <param name="pqInfo"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateStatusForPakBtLocMas(System.String,System.String)">
            <summary>
            UPDATE PAK_BTLocMas SET [Status] = 'Close' WHERE SnoId = @Location
            </summary>
            <param name="status"></param>
            <param name="snoId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakBtLocMasInfos(System.String,System.String)">
            <summary>
            Query PakBtLocMasInfos by model and status ORDER BY SnoId
            </summary>
            <param name="model"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertSnoDetBtLocInfo(IMES.DataModel.SnoDetBtLocInfo)">
            <summary>
            Insert SnoDet_BTLoc
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetSnoDetBtLocInfosByCondition(IMES.DataModel.SnoDetBtLocInfo)">
            <summary>
            Query SnoDetBtLocInfos by any 'AND' conditions.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateForIncPakBtLocMas(System.String,System.String)">
            <summary>
            Update PAK_BTLocMas SET CmbQty = CmbQty + 1, Editor = @editor WHERE (SnoId = @snoId) 
            </summary>
            <param name="snoId"></param>
            <param name="editor"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateForIncPakBtLocMas(System.String)">
            <summary>
            Update PAK_BTLocMas SET CmbQty = CmbQty + 1 WHERE (SnoId = @snoId) 
            </summary>
            <param name="snoId"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletNoByUcc(System.String)">
            <summary>
            select PalletNo from Pallet where UCC = @UCCID
            </summary>
            <param name="ucc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetTierQtyFromPalletQtyInfo(System.String)">
            <summary>
            SELECT @pqty2=TierQty FROM PalletStandard WHERE FullQty=@PalletQty
            按照PalletTotal得到一层数量PalletTier：
            PalletStandard.TierQty where FullQty=PalletTotal
            </summary>
            <param name="fullQty"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetInfoTypeInfoValuePairsFromDeliveryInfo(System.String)">
            <summary>
            SELECT @carrier = a.InfoValue FROM DeliveryInfo a (nolock), Delivery_Pallet b (nolock)
            WHERE a.DeliveryNo = b.DeliveryNo
             AND b.Pallet = @PalletNo
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakBtLocMasInfo(System.String,System.String)">
            <summary>
            select top 1 * from PAK_BTLocMas where Model=@Model and Status=@Status order by SnoId asc
            </summary>
            <param name="model"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetQtyOfPackedPalletToday" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletByFullQty(System.String)">
            <summary>
            根据fullQty取得表PalletStatndard的相应记录where FullQty= fullQty
            </summary>
            <param name="fullQty"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.IsScan2DBarCode(System.String)">
             <summary>
             使用Pallet No 查询IMES_PAK..Delivery_Pallet 表，得到Shipment，然后按照如下方法确定是否需要提示用户Scan 2D Barcode
            SELECT @setnum=DOC_SET_NUMBER FROM HP_EDI..[PAK.PAKComn] (NOLOCK) WHERE InternalID=@shipment 
            IF EXISTS (SELECT * FROM HP_EDI..[PAK.PAKRT] 
             WHERE DOC_SET_NUMBER=@setnum AND XSL_TEMPLATE_NAME like '%Verizon2D%' 
             AND DOC_CAT='Pallet Ship Label- Pack ID Single' )
             BEGIN
                 SELECT '1'	
             END
            ELSE 
             BEGIN 
                 SELECT '0'	
             END
             </summary>
             <param name="palletNo"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UnPackPakOdmSessionByDeliveryNo(System.String)">
            <summary>
            DELETE PAKODMSESSION FROM PAKODMSESSION O
            inner join IMES2012_FA.dbo.Product as P on O.SERIAL_NUM =P.CUSTSN
            WHERE P.DeliveryNo =@DeliveryNo and (P.Model LIKE 'PC%' or P.Model LIKE 'QC%')
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UnPackPackingDataByDeliveryNo(System.String)">
            <summary>
            DELETE PAK_PackkingData WHERE InternalID = @DeliveryNo
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetCountOfDummyShipDetByPlt(System.String)">
            <summary>
            @qty=count(SnoId) from Dummy_ShipDet (nolock) where PLT=@plt
            </summary>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertWhPltLog(IMES.DataModel.WhPltLogInfo)">
            <summary>
            insert WH_PLTLog values (@plt,'IN',@user,getdate())
            INSERT WH_PLTLog VALUES (@PalletNo,'OT',@PickID,GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateWhPltMas(IMES.DataModel.WhPltMasInfo,System.String)">
            <summary>
            UPDATE WH_PLTMas set WC='IN',Editor=@user,Udt=getdate() where PLT=@plt
            UPDATE WH_PLTMas set WC='RW',Editor=@user,Udt=getdate() where PLT=@plt
            UPDATE WH_PLTMas SET WC='OT',Editor=@PickID,Udt=GETDATE()WHERE PLT=@PalletNo 
            </summary>
            <param name="item"></param>
            <param name="plt"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWHPltMas(System.String)">
            <summary>
            SELECT * FROM [WH_PLTMas] WHERE PLT =@PalletNo
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertWhPltMas(IMES.DataModel.WhPltMasInfo)">
            <summary>
            insert WH_PLTMas values (@plt,'IN',@user,getdate(),getdate())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDummyShipDetListByPlt(System.String)">
            <summary>
            b) 当@plt存在于Dummy_ShipDet时
            </summary>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakWhPltTypeListByPlt(System.String)">
            <summary>
            PAK_WHPLT_Type.BOL from PAK_WHPLT_Type WHERE PLT=@plt
            </summary>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePakWhPltTypeByPlt(System.String)">
            <summary>
            a.首先需要先删除相同PLT的记录
            </summary>
            <param name="plt"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPakWhPltTypeInfo(IMES.DataModel.PakWhPltTypeInfo)">
            <summary>
            写入PAK_WHPLT_Type
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakWhLocMasListByBolAndPlt1(System.String,System.String)">
            <summary>
            1）当按照以下条件(PAK_WH_LocMas where BOL=@bol  and PLT1='')不能得到记录时
            1）select @col=Col,@loc=Loc  from PAK_WH_LocMas where BOL=@bol and PLT1=''order by Loc desc
            </summary>
            <param name="bol"></param>
            <param name="plt1"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetCountOfPakWhPltType(System.String,System.String)">
            <summary>
            select @n=count(PLT) from PAK_WHPLT_Type where BOL=@bol and Tp='F'
            </summary>
            <param name="bol"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakWhLocMasListByBolAndPlt1AndCarrier(System.String,System.String,System.String)">
            <summary>
            3）select @col=Col,@loc=Loc from dbo.PAK_WH_LocMas where BOL=''and PLT1=''and charindex(@carrier,Carrier)>0 order by Loc desc,Col
            </summary>
            <param name="bol"></param>
            <param name="plt1"></param>
            <param name="carrier"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocBolByColAndLoc(System.String,System.String,System.Int32)">
            <summary>
            update PAK_WH_LocMas set BOL=@bol where Col=@col and Loc=@loc
            </summary>
            <param name="bol"></param>
            <param name="col"></param>
            <param name="loc"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertWhPltLocLogInfo(IMES.DataModel.WhPltLocLogInfo)">
            <summary>
            2） insert WH_PLTLocLog values(@plt, rtrim(@col)+rtrim(@loc), '',getdate())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocByColAndLoc(IMES.DataModel.PakWhLocMasInfo,System.String,System.Int32)">
            <summary>
            update PAK_WH_LocMas set BOL=@bol,PLT1=@plt,Udt=getdate() where Col=@col and Loc=@loc
            </summary>
            <param name="item"></param>
            <param name="col"></param>
            <param name="loc"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocByPltForClearPlt1AndPlt2(System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPoPltByPlt(System.String)">
            <summary>
            SELECT * FROM PoPlt WHERE PLT=@PLT
            </summary>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPoPlt(IMES.DataModel.PoPltInfo)">
            <summary>
            在DOA..PoPlt表中增加记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPoData(IMES.DataModel.PoDataInfo)">
            <summary>
            在DOA..PoData表中增加记录
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletCapacityInfoList(System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetCountOfBoundProduct(System.String)">
            <summary>
            Scanned Qty：从Product表里得到PalletNo=@plt的记录数
            </summary>
            <param name="plt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletsByDn(System.String)">
            <summary>
            入参：string dn
            功能：删除Pallet表中相关数据
            </summary>
            <param name="dn"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletsByShipmentNo(System.String)">
            <summary>
            入参：string shipmentNo
            功能：删除Pallet表中相关数据
            </summary>
            <param name="shipmentNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChepPalletListByPalletNo(System.String)">
            <summary>
            IMES_PAK..ChepPallet.PalletNo = @PalletNo
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetBolFromPakWhLocMasByPlt1AndPlt2(System.String)">
            <summary>
            SELECT @bol=RTRIM(BOL) FROM PAK_WH_LocMas WHERE PLT1=RTRIM(@PalletNo) or PLT2=RTRIM(@PalletNo)
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocByPltForClearBol(System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocByPltForClearBolAndPlt1AndPlt2(System.String)">
            <summary>
            UPDATE PAK_WH_LocMas SET BOL='',PLT1='',PLT2='',Editor=@PickID,Udt=GETDATE() 
            WHERE PLT1=RTRIM(@PalletNo) or PLT2=RTRIM(@PalletNo)
            </summary>
            <param name="bol"></param>
            <param name="palletNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocTmpForClearPltAndTpAndBol(System.String)">
            <summary>
            UPDATE PAK_WHLoc_TMP SET PLT='',Tp='',BOL='' WHERE PLT=RTRIM(@PalletNo)
            </summary>
            <param name="palletNo"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakWhLocTmpForClearBol(System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeleteChepPalletInfo(System.String)">
            <summary>
            DELETE ChepPallet WHERE PalletNo=@ChepPalletNo
            </summary>
            <param name="palletNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletRfid(System.String,System.String)">
            <summary>
            DELETE Pallet_RFID WHERE PLT=@PalletNo and RFIDCode=@ChepPalletNo
            </summary>
            <param name="plt"></param>
            <param name="rfidCode"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPalletRfid(IMES.DataModel.PalletRfidInfo)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDummyShipDet(System.String)">
            <summary>
            找到，则返回查找到的DummyShipDetInfo类型数据；找不到，不要抛异常，返回Null
            </summary>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDummyShipDetListByBol(System.String)">
            <summary>
            满足BOL=传入的bol的Dummy_ShipDet
            </summary>
            <param name="bol"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDeliveryPalletByShipmentNoList(System.Collections.Generic.IList{System.String})">
            <summary>
            1. Delivery_Pallet表
            查询IMES_PAK..Delivery_Pallet 表,取得shipmentNoList对应的DeliveryPallet记录集
            </summary>
            <param name="shipmentNoList"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetSnoIdFromPakLocMasByPno(System.String)">
            <summary>
            按照pallet得到Location：PAK_LocMas.SnoId where Pno=@plt
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetModelByTypeAndPartNo(System.String,System.String)">
            <summary>
            13.使用条件Type,PartNo查询IMES_PAK..PAK_CHN_TW_Light表,得到的记录的Model 字段值;
            </summary>
            <param name="type"></param>
            <param name="partno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetModelbyTypeAndPartNoAndFamily(System.String,System.String,System.String)">
            <summary>
            14.使用Type AND PartNo AND Model查询IMES_PAK..PAK_CHN_TW_Light 表存在记录;
            </summary>
            <param name="type"></param>
            <param name="partno"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetByModelStatisticsForSinglePallet(System.String)">
            <summary>
            放在栈板上的Product Model以及数量
            </summary>
            <param name="pltNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakChnTwLightInfoListByLikeModel(System.String)">
            <summary>
            ii:  使用Model LIKE @family3 + '%' 查询IMES_FA..PAK_CHN_TW_Light 表存在记录
            </summary>
            <param name="modelPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakChnTwLightInfoListByModelAndPno(System.String,System.String)">
            <summary>
            SELECT a.PartNo, a.Descr, 1
             FROM PAK_CHN_TW_Light a (nolock), ModelBOM b (nolock)
             WHERE a.Model = @model AND b.Material = @Pno AND b.Component = a.PartNo
            </summary>
            <param name="model"></param>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakChnTwLightInfoListByModelAndPno2(System.String,System.String)">
            <summary>
            SELECT a.PartNo, a.Descr, 1
            FROM PAK_CHN_TW_Light a (nolock), ModelBOM b (nolock)
            WHERE a.Model = LEFT(@model,CHARINDEX(' ',@model)-1) AND b.Material = @Pno AND b.Component = a.PartNo
            </summary>
            <param name="model"></param>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetTypeListFromPakChnTwLightByModel(System.String)">
            <summary>
            SELECT DISTINCT Type FROM PAK_CHN_TW_Light (nolock)WHERE Model=@family2
            SELECT DISTINCT Type FROM PAK_CHN_TW_Light (nolock)WHERE Model=@family2
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.CheckExistPakLocMas(System.String,System.String,System.String)">
            <summary>
            1. 当使用Pno=@plt and Tp='PakLoc' and FL=@floor (@floor 来自页面用户的选择)查询PAK_LocMas表存在记录时
            </summary>
            <param name="pno"></param>
            <param name="tp"></param>
            <param name="fl"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakLocMasForPdLine(System.String,System.String,System.String)">
            <summary>
            并更新PAK_LocMas表中满足Pno=@plt and Tp='PakLoc' 条件的记录的PdLine字段值
            </summary>
            <param name="pdLine"></param>
            <param name="pno"></param>
            <param name="tp"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakLocMasList(System.String,System.String,System.String)">
            <summary>
            按照SnoId 字段转为整型逆序排序，取第一条记录的SnoId 字段值保存到变量@loc 中
            </summary>
            <param name="pno"></param>
            <param name="tp"></param>
            <param name="fl"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakLocMasForPdLineAndPno(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            并更新PAK_LocMas表中满足SnoId=@loc and Tp='PakLoc' and Pno='' 条件的记录的Pno 字段值为@plt，PdLine 字段值为Product Id 的第一位字符，Udt 为当前时间
            </summary>
            <param name="pdLine"></param>
            <param name="newPno"></param>
            <param name="oldPno"></param>
            <param name="tp"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakLocMasList(System.String,System.String)">
            <summary>
            1. 查询PAK_LocMas表，取满足条件Tp='PakLoc' and Pno=@plt 记录的SnoId 字段值保存到变量@loc 中
            </summary>
            <param name="pno"></param>
            <param name="tp"></param>
            <param name="fl"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakLocMasList(IMES.DataModel.PakLocMasInfo)">
            <summary>
            Almighty
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakLocMasList(IMES.DataModel.PakLocMasInfo,IMES.DataModel.PakLocMasInfo)">
            <summary>
            Almighty too
            </summary>
            <param name="eqCondition"></param>
            <param name="neqCondition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakLocMasForPno(System.String,System.String,System.String)">
            <summary>
            并更新PAK_LocMas表中满足条件Pno=@plt and Tp='PakLoc' 记录的Pno 字段值为''
            </summary>
            <param name="newPno"></param>
            <param name="oldPno"></param>
            <param name="tp"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPakOdmSession(IMES.DataModel.PakOdmSessionInfo)">
            <summary>
            INSERT HP_EDI.dbo.PAKODMSESSION
            VALUES (@SN,'ODM_TEXT1',RTRIM(@plt),@mrpdesc,@desc,1)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.CheckExistFromPakDotPakRtByDocCatAndDocSetNumer(System.String,System.String,System.String)">
            <summary>
            IF EXISTS (SELECT * FROM HP_EDI..[PAK.PAKRT] 
            WHERE DOC_SET_NUMBER=@setnum 
            AND XSL_TEMPLATE_NAME like '%Verizon2D%' 
            AND DOC_CAT='Pallet Ship Label- Pack ID Single')
            </summary>
            <param name="docCat"></param>
            <param name="docSetNumer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWhPltWeightList(IMES.DataModel.WhPltWeightInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateWhPltWeight(IMES.DataModel.WhPltWeightInfo,IMES.DataModel.WhPltWeightInfo)">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetAllDistinctPalletNoAndWeights">
            <summary>
            取得所有Pallet 重量
            参考方法：
            SELECT DISTINCT PalletNo as SnoId, convert(decimal(9,1), ISNULL(RTRIM([Weight]), '0')) as KG
            FROM Pallet nolock
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletNoAndWeightConsiderProduct(System.Collections.Generic.IList{IMES.DataModel.PalletNoAndWeight})">
            <summary>
            SELECT a.PalletNo, SUM(CONVERT(decimal(9,1), ISNULL(a.UnitWeight, '0')))
            FROM IMES_FA..Product a (nolock), #plt b(nolock)
            WHERE a.PalletNo = b.PLT
            GROUP BY a.PalletNo
            
            LD: 重复计算有意义么？这样的SUM肯定会多.
            </summary>
            <param name="plts"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChinaLabel(IMES.DataModel.ChinaLabelInfo)">
            <summary>
            使用family查询IMES_PAK..ChinaLabel这个表
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChinaLabelByLikeFamily(System.String)">
            <summary>
            使用UPPER(Family) like @family3 +'%' 查询IMES_PAK..ChinaLabel表存在记录
            </summary>
            <param name="familyPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetKitLocPLMapST(System.String,System.String,System.Int16)">
            <summary>
            2.use IMES2012_KIT
            select * from dbo.Kitting_Loc_PLMapping_St
            where PdLine=@line and Station=@station and LightNo=@lightno
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <param name="lightno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateKitLocationFVOn(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            3.
            update dbo.Kitting_Location_FV
            set ConfigedLEDStatus=@configstatus，RunningLEDStatus=@runningStatus，LEDValues=@ledvalue
            where TagID=@tagid
            </summary>
            <param name="tagid"></param>
            <param name="configstatus"></param>
            <param name="runningStatus"></param>
            <param name="ledvalue"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateKitLocationFVOn(System.String[],System.Boolean,System.Boolean,System.String)">
            <summary>
            update dbo.Kitting_Location_FV
            set ConfigedLEDStatus=@configstatus，RunningLEDStatus=@runningStatus，LEDValues=@ledvalue
            where TagID IN (@tagid1,@tagid2,...,@tagidN) 
            </summary>
            <param name="tagids"></param>
            <param name="configstatus"></param>
            <param name="runningStatus"></param>
            <param name="ledvalue"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateKitLocationFVOff(System.String,System.Boolean,System.Boolean)">
            <summary>
            4.
            update dbo.Kitting_Location_FV
            set ConfigedLEDStatus=configstatus，RunningLEDStatus=@runningStatus 
            where TagID=@tagid
            </summary>
            <param name="tagid"></param>
            <param name="configstatus"></param>
            <param name="runningStatus"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateKittingLocationFaXInfo(IMES.DataModel.KittingLocationFaXInfo,System.Int32,System.Int32,System.Int32,IMES.DataModel.KittingLocationFaXInfo,System.Int32[])">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetKittingLocPLMappingInfoList(IMES.DataModel.KittingLocPLMappingInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetCountOfWhPltMas(System.String)">
            <summary>
            2. 得到库里的栈板数			select count(PLT) from WH_PLTMas (nolock) where  WC='IN'
            </summary>
            <param name="wc"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWhPltMasList(System.String,System.Int32)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.CallOp_PackingData(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            SP: op_PackingData
            Parameters
            
            OLD:
            
            @snoid char(9),    // --Product Id
            @model char(12),   //--Product Model
            @dn char(16),      //--Delivery
            @plt char(12),     //--Pallet
            @loc varchar(10),  //--Location
            @pltqty int        //--Select Sum(DeliveryQty) from Delivery_Pallet where PalletNo = @plt
            
            NEW:
            
            @snoID char(9),		--Product Id
            @Model char(12),	--Product Model
            @Delivery char(16),	
            @Pallet char(12),	
            @Location varchar(10),
            @pltqty int, 
            @BoxId varchar(20),
            @UCC varchar(20)
            </summary>
            <param name="snoid"></param>
            <param name="model"></param>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="loc"></param>
            <param name="pltqty"></param>
            <param name="boxid"></param>
            <param name="ucc"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.CallOp_PackingData(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            调用HP_EDI.dbo.op_PackingData_20111031 @BoxId,@dn,@plt,@cn,@cdtEDI实现
            Parameters:
            @BoxId – Box Id
            @dn – Delivery No
            @plt – Pallet No
            @cn – Carton No
            @cdtEDI - GETDATE()
            </summary>
            <param name="boxid"></param>
            <param name="dn"></param>
            <param name="plt"></param>
            <param name="cn"></param>
            <param name="cdt"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetAllCOMSetting">
            <summary>
            1,SQL:select * from COMSetting order by name;
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.RemoveCOMSettingItem(System.Int32)">
            <summary>
            2,SQL:delete from COMSetting where id=[id]
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddCOMSettingItem(IMES.DataModel.COMSettingInfo)">
            <summary>
            3,SQL:insert into COMSetting (item各个字段);
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateCOMSettingItem(IMES.DataModel.COMSettingInfo)">
            <summary>
            4,SQL: update COMSetting set [Item各个字段] where id=[item.id]
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.FindCOMSettingByName(System.String)">
            <summary>
            5,SQL:select * from COMSetting where name=[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePallets(System.Collections.Generic.IList{System.String})">
            <summary>
            Remove Pallets
            </summary>
            <param name="pltNos"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletAttrs(System.Collections.Generic.IList{System.String})">
            <summary>
            Remove Pallet Attributes
            </summary>
            <param name="pltNos"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakLocMasInfo(IMES.DataModel.PakLocMasInfo,IMES.DataModel.PakLocMasInfo)">
            <summary>
            setValue哪个字段赋值就有更新哪个字段
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DismantlePalletWeight(System.String,System.String)">
            <summary>
            Call SP [IMES_DismantlePalletWeight] @PalletOrDn varchar(20),@Editor varchar(30)
            </summary>
            <param name="palletOrDn"></param>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.QueryPalletWeight(System.String)">
            <summary>
            Call SP [IMES_QueryPalletWeight] @PalletOrDn varchar(20)
            </summary>
            <param name="palletOrDn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetDTPalletByUdt(System.String,System.String,System.String)">
            <summary>
            Select PalletNo, Editor, Cdt,Udt from Pallet where Udt between @From and @To ORDER BY Udt, PalletNo
            select PalletNo, Editor, Cdt,Udt from Pallet where Udt between '2012/02/04' and '2012/02/07' and Station = 'DT' 
            from,to 格式为 YYYY/MM/DD,
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.ExecSpRptPAKKittingLocUp(System.String)">
            <summary>
            2) 执行存储过程 rpt_PAKKittingLoc_up @pdline char(2)
            </summary>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.ExecSpRptKittingLocUp(System.String)">
            <summary>
            3) 执行存储过程 rpt_KittingLoc_up @pdline char(2)
            </summary>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.ExecSpRptKittingLoc(System.String,System.String,System.String)">
            <summary>
            4) 执行存储过程 [rpt_KittingLoc] @code varchar(25), @kittingType varchar(20), @isLine char(4)
            </summary>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakWhLocMasListByPlt1OrPlt2(System.String)">
            <summary>
            当栈板号等于PAK_WH_LocMas.PLT1或PLT2时
            </summary>
            <param name="plt1Orplt2"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.ExecSpRptKittingLocUp(System.String,System.String)">
            <summary>
            执行存储过程[rpt_KittingLoc_up] 参数为  @pdline char(2), @family varchar(40)
            </summary>
            <param name="line"></param>
            <param name="family"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWhPltLogInfoList(System.String[],System.DateTime,System.DateTime)">
            <summary>
            1.Select PLT, Editor, Cdt from WH_PLTLog where WC IN ('DT','RD') and Cdt between @From and @To ORDER BY Cdt, PLT 
            </summary>
            <param name="wcs"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWhPltLogInfoList(System.String[],System.String)">
            <summary>
            2.Select PLT, Editor, Cdt from WH_PLTLog where WC IN ('DT','RD') and PLT = @PalletNo ORDER BY Cdt, PLT
            </summary>
            <param name="wcs"></param>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetWhPltLogInfoNewestly(System.String)">
            <summary>
            3.Select top 1 * from WH_PLTLog where PLT = @PalletNo ORDER BY Cdt desc
            </summary>
            <param name="palletNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeleteDummyDetInfoByPlt(System.String)">
            <summary>
            
            </summary>
            <param name="palletNo"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetSnoListFromSnoDetBtLoc(IMES.DataModel.SnoDetBtLocInfo)">
            <summary>
            SELECT @btloc = Sno FROM SnoDet_BTLoc WHERE SnoId = @snoid
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetCountOfSnoIdFromSnoDetBtLoc(IMES.DataModel.SnoDetBtLocInfo)">
            <summary>
            SELECT @cmbqty = COUNT(SnoId) FROM SnoDet_BTLoc WHERE Sno = @btloc and Status = 'In'
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdateSnoDetBtLoc(IMES.DataModel.SnoDetBtLocInfo,IMES.DataModel.SnoDetBtLocInfo)">
            <summary>
            UPDATE SnoDet_BTLoc SET Status = 'Out',Udt = GETDATE(),Editor=@user WHERE SnoId = @snoid
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakBtLocMas(IMES.DataModel.PakBtLocMasInfo,IMES.DataModel.PakBtLocMasInfo)">
            <summary>
            UPDATE PAK_BTLocMas SET CmbQty=@cmbqty WHERE SnoId = @btloc
            UPDATE PAK_BTLocMas SET [Status] = 'OPEN',Model = 'Other' WHERE SnoId = @btloc
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPakChnTwLightInfoList(IMES.DataModel.PakChnTwLightInfo)">
            <summary>
            1）PAK_CHN_TW_Light表: 获取该表所有记录集数据；
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.InsertPakChnTwLightInfo(IMES.DataModel.PakChnTwLightInfo)">
            <summary>
            2）PAK_CHN_TW_Light表: 添加一条记录；
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePakChnTwLightInfo(IMES.DataModel.PakChnTwLightInfo,IMES.DataModel.PakChnTwLightInfo)">
            <summary>
            3）PAK_CHN_TW_Light表: 修改一条记录；
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePakChnTwLightInfo(IMES.DataModel.PakChnTwLightInfo)">
            <summary>
            4）PAK_CHN_TW_Light表: 删除一条记录；
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetMinSnoIdByTpAndPno(System.String,System.String)">
            <summary>
            SELECT @loc=SnoId FROM PAK_LocMas(NOLOCK) WHERE Tp='WHLoc' AND Pno='' ORDER BY CONVERT(int, SnoId)
            </summary>
            <param name="tp"></param>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetChepPalletQty(System.String,System.String)">
            <summary>
            SELECT COUNT(DISTINCT b.PLT)
            FROM FwdPlt a (NOLOCK) LEFT JOIN Pallet_RFID b (NOLOCK)
                  ON a.Plt = b.PLT
            WHERE a.PickID = @PickId
                  AND a.Status = 'Out'
                  AND CONVERT(char(10), a.Udt, 111) = CONVERT(char(10), GETDATE(), 111) 
            </summary>
            <param name="pickId"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.PickCardCheck(System.String,System.String)" -->
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPltstandardInfoList(IMES.DataModel.PltstandardInfo)">
            <summary>
            1）SELECT * FROM PLTStandard WHERE PLTNO=@PLT
            2）SELECT * FROM PLTStandard
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPltspecificationInfoList(IMES.DataModel.PltspecificationInfo)">
            <summary>
            3）SELECT Descr FROM PLTSpecification NOLOCK ORDER BY ID
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.UpdatePltstandardInfo(IMES.DataModel.PltstandardInfo,IMES.DataModel.PltstandardInfo)">
            <summary>
            5）update PLTStandard表的通用方法
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.AddPltstandardInfo(IMES.DataModel.PltstandardInfo)">
            <summary>
            6）insert PLTStandard表的通用方法
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePltstandardInfo(IMES.DataModel.PltstandardInfo)">
            <summary>
            删除PLTStandard表
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetPalletLogInfoList(IMES.DataModel.PalletLogInfo)">
            <summary>
            检索PalletLog表
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.DeletePalletLog(IMES.DataModel.PalletLogInfo)">
            <summary>
            Delete PalletLog – 删除该Pallet Pass Pallet Verify_RCTO 的Log
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.Pallet.IPalletRepository.GetFlListFromPakLacMas(IMES.DataModel.PakLocMasInfo)">
            <summary>
            SELECT DISTINCT FL AS Floor FROM PAK_LocMas
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PAK.Pallet.IPalletRepository.CheckAllPalletWeightOnDeliverysByPallet(System.String)" -->
        <member name="M:IMES.FisObject.PAK.FRU.FRUGift.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.FRU.FRUGift.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Station.IStation">
            <summary>
             Station濬ㄛ蚚衾桶尨莉盄腔紱釬桴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.StationId">
            <summary>
            Station測鎢
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.StationType">
            <summary>
            StationType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.OperationObject">
            <summary>
            蜆桴紱釬腔勤砓濬倰0:帤隅砱 1:MB; 2:Product;
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.Descr">
            <summary>
            Station鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.IStation.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.ProcessRuleSet">
            <summary>
            用于生成流程数据的规则数据类
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition1">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition2">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition3">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition4">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition5">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Condition6">
            <summary>
            Condition
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ProcessRuleSet.ConditiionValueList">
            <summary>
            resolve condition value in collection
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.PartProcess">
            <summary>
            MB使用的流程
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.MBFamily">
            <summary>
            Family of MB
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.Process">
            <summary>
            流程名字
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.PilotRun">
            <summary>
            = Y ,表示试产流程;
            = N ,表示量产流程.
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.PartProcess.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelList(System.String)">
            <summary>
            根据family获得Model列表
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListFor014_RecentOneMonth(System.String)">
            <summary>
            只列出可以产生ProdId的MO对应的model，即MO.Status=’H’ and MO.Qty>MO.Print_Qty and  MO.SAPStatus=’’, AND Model.Status=1 按照Model排序
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListFor014(System.String)">
            <summary>
            只列出可以产生ProdId的MO对应的model，即MO.Status=’H’ and MO.Qty>MO.Print_Qty and  MO.SAPStatus=’’, AND Model.Status=1 按照Model排序
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetFamilyListFor008">
            <summary>
            GetData..[Part] – Tp = ‘MA’， 按照Descr 排序显示Descr
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.Get1397ListFor008(System.String)">
            <summary>
            GetData..[Part] – Tp = ‘MA’， Descr = @Family 为条件
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListFor102">
            <summary>
            SELECT Model FROM IMES_GetData..Model WHERE Status = '1' ORDER BY Model
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.FillModelAttributes(IMES.FisObject.Common.Model.Model)">
            <summary>
            晚加载Model
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetSampleCount(System.String,System.String)">
            <summary>
            得到已抽样数量
            select @cnt=count(*) from QCStatus where Tp='PIA' and PdLine=@pdline and Pno=model# and convert(char(10),Cdt,111)=convert(char(10),getdate(),111) 
            @pdline：Product_Status.LineID 
            </summary>
            <returns>已抽样数量</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetModelListFor094(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetKittingCodeByModel(System.String)" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetMaxModelInfoValue(System.String,System.String)">
            <summary>
            查找CUST（其中@cust是Product.Model对应的ModelInfo中Name=’Cust’对应的值）已用过的最大号 
            </summary>
            <param name="modelName"></param>
            <param name="infoName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelInfoByModelAndName(System.String,System.String)">
            <summary>
            5.根据model和name，取IMES_GetData..ModelInfo记录 (class: IMES.FisObject.Common.Model.ModelInfo);
            </summary>
            <param name="model"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetCodeFromHPWeekCodeInRangeOfDescr" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetHPWeekCodeInRangeOfDescr" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListByFamly(System.String,System.Int32)">
            <summary>
            SELECT [Model] FROM [IMES2012_GetData].[dbo].[Model] where Family=@family and [Status]=1 ORDER By [Model]
            </summary>
            <param name="family"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListByFamilyAndStatus(System.String,System.Int32)">
            <summary>
            1.SELECT [Model]
            FROM [IMES2012_GetData].[dbo].[Model] where Family=@family and [Status]=1 ORDER By [Model]
            </summary>
            <param name="family"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetModelByNameAndValue(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetCurrentStationList(System.String)" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetCountOfQcStatus(System.String,System.String)">
            <summary>
            SELECT @cnt=count(DISTINCT ProductID) FROM QCStatus WHERE Tp='PAQC' 
            AND LEFT(Line,1)=LEFT(@pdline,1)
            </summary>
            <param name="tp"></param>
            <param name="pdline"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetCountOfQcStatus(System.String,System.String,System.DateTime,System.DateTime)" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetPreviousFailTimeList(System.String,System.String)">
            <summary>
            PAQC Sorting接口需求
            Previous Fail Time
            SELECT * FROM PAQCSorting
            WHERE Status = 'O'
            AND LEFT(Line, 1) = LEFT(@Line, 1)
            AND Station = @Station
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetPaqcsortingInfoList(System.String,System.String)">
            <summary>
            SELECT * FROM PAQCSorting WHERE Station = @Station AND LEFT(Line, 1) = LEFT(@Line, 1)   
            </summary>
            <param name="line"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetPaqcsortingInfoList(IMES.DataModel.PaqcsortingInfo)">
            <summary>
            ex: SELECT * FROM PAQCSorting where id = @id
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetCountOfPqacSortingProduct(IMES.DataModel.PaqcsortingProductInfo)">
            <summary>
            2)Pass Qty
            SELECT COUNT(CUSTSN) FROM PAQCSorting_Product NOLOCK
            WHERE PAQCSortingID = @PAQCSortingID
            AND Status=1
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetPaqcsortingProductInfoList(IMES.DataModel.PaqcsortingProductInfo,IMES.DataModel.PaqcsortingProductInfo)" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetCountOfPqacSortingProduct(IMES.DataModel.PaqcsortingProductInfo,System.DateTime)">
            <summary>
            3)Least Pass Qty
            SELECT COUNT(CUSTSN) FROM PAQCSorting_Product NOLOCK
            WHERE PAQCSortingID = @PAQCSortingID
            AND Status=1
            AND Cdt>@PreviousFailTime
            </summary>
            <param name="condition"></param>
            <param name="previousFailTime"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.InsertPqacSortingProductInfo(IMES.DataModel.PaqcsortingProductInfo)">
            <summary>
            Insert PAQCSorting_Product
            INSERT INTO [PAQCSorting_Product]([PAQCSortingID],[CUSTSN],[Status],[Editor],[Cdt])
            VALUES(@PAQCSortingID, @CustomerSN, 1, @Editor, GETDATE())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.UpdatePqacSortingInfo(IMES.DataModel.PaqcsortingInfo,IMES.DataModel.PaqcsortingInfo)">
            <summary>
            Update PAQCSorting
            UPDATE PAQCSorting SET Stauts = 'C', Editor = @Editor, Udt = GETDATE() WHERE ID = @PAQCSortingID
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.InsertPqacSortingInfo(IMES.DataModel.PaqcsortingInfo)">
            <summary>
            Insert PAQCSorting
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetMinCdtFromPaqcSortingProduct(System.Int32)">
            <summary>
            SELECT @StartTime = MIN(Cdt) FROM PAQCSorting_Product NOLOCK WHERE PAQCSortingID = @PAQCSortingID
            </summary>
            <param name="paqcSortingId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.InsertIntoPaqCSortingProductFromProductAndProductLog(System.DateTime,System.String,System.String,System.Int32)">
            <summary>
            INSERT INTO PAQCSorting_Product (PAQCSortingID, CUSTSN, Status, Editor, Cdt)		
            SELECT @PAQCSortingID, a.CUSTSN, b.Status, b.Editor, b.Cdt
                FROM Product a (NOLOCK), ProductLog b (NOLOCK)
                WHERE a.ProductID = b.ProductID
                    AND b.Cdt > @StartTime
                    AND LEFT(b.Line, 1) = LEFT(@Line, 1)
                    AND b.Station = @Station 
                    AND a.CUSTSN NOT IN (SELECT CUSTSN FROM PAQCSorting_Product NOLOCK WHERE PAQCSortingID = @PAQCSortingID)
            </summary>
            <param name="startTime"></param>
            <param name="line"></param>
            <param name="station"></param>
            <param name="paqcSortingId"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.InsertIntoPaqCSortingProductFromProductAndProductLog(System.DateTime,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            INSERT INTO PAQCSorting_Product (PAQCSortingID, CUSTSN, Status, Editor, Cdt) 
            SELECT TOP (@N3) @PAQCSortingID, a.CUSTSN, b.Status, b.Editor, b.Cdt
            FROM Product a (NOLOCK), ProductLog b (NOLOCK)
            WHERE a.ProductID = b.ProductID
            AND b.Cdt > @StartTime
            AND LEFT(b.Line, 1) = LEFT(@Line, 1)
            AND b.Station = @Station 
            AND a.CUSTSN NOT IN (SELECT CUSTSN FROM PAQCSorting_Product NOLOCK WHERE PAQCSortingID = @PAQCSortingID)
            ORDER BY b.Cdt
            </summary>
            <param name="startTime"></param>
            <param name="line"></param>
            <param name="station"></param>
            <param name="paqcSortingId"></param>
            <param name="n3"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelObjList(System.String)">
            <summary>
            取得Family下的所有Model数据的list(按Model列的字母序排序)
            </summary>
            <param name="familyId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelInfoById(System.Int32)">
            <summary>
            根据modelInfoId获得ModelInfo
            </summary>
            <param name="modelInfoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.CheckExistedModelInfo(System.String,System.String)">
            <summary>
            是否有同名记录，若有，返回true，否则,false
            </summary>
            <param name="modelId"></param>
            <param name="attrName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.ChangeModel(IMES.FisObject.Common.Model.Model,System.String)">
            <summary>
            更新Model (可修改Model)
            </summary>
            <param name="Object"></param>
            <param name="oldModelName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.FindFromDB(System.String)">
            <summary>
            从数据库获得Model
            </summary>
            <param name="ModelId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetCustomerModelList(System.String)">
            <summary>
            26)SELECT distinct Model.Model
            FROM  Family INNER JOIN
            Model ON Family.Family = Model.Family WHERE CustomerID ='customer' 
            order by Model
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetAllModelInfoName">
            <summary>
            select distinct Name from ModelInfo order by Name
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelListByModel(System.String,System.String)">
            <summary>
            取得匹配的所有Model数据的list(按Model列的字母序排序)，支持左匹配 like 'model%'
            </summary>
            <param name="family"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetShipTypeList">
            <summary>
            系统中所有已维护的ShipType值,按ShipType列的字母序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelInfoNameList">
            <summary>
            取ModelInfoName中所有记录,按Region、Info Name列的字母序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.CheckExistedModelInfoName(System.String,System.String,System.String)">
            <summary>
            取得ModelInfoName中等于region和modelInfoName的记录个数
            如果modelInfoNameID== "", where 子句不包含该查询条件
            否则where 中包含条件 ModelInfoName.ID != modelInfoNameID
            </summary>
            <param name="region"></param>
            <param name="modelInfoName"></param>
            <param name="modelInfoNameID"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.AddModelInfoName(IMES.FisObject.Common.Model.ModelInfoName)">
            <summary>
            新增一条ModelInfoName的记录数据，返回id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.SaveModelInfoName(IMES.FisObject.Common.Model.ModelInfoName)">
            <summary>
            修改一条ModelInfoName的记录数据，返回id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.DeleteModelInfoName(IMES.FisObject.Common.Model.ModelInfoName)">
            <summary>
            删除一条ModelInfoName的记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelInfoNameAndModelInfoValueListByModel(System.String)">
            <summary>
            参考sql如下：
            select B.Name as Name, B.Description as Description, isNull(A.Value, '') as Value,
                    A.Editor  as Editor, A.Cdt as Cdt, A.Udt as Udt, A.ID as ID
            From (select Model, Name, Value, Editor, Cdt, Udt, ID from ModelInfo where Model = ?) as A 
            Right Outer Join ModelInfoName as B
            On A.Name = B.Name
            按Region、Info Name列的字母序排序
            </summary>
            <param name="Model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.AddModelInfo(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            新增一条ModelInfo的记录数据，返回id
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.SaveModelInfo(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            修改一条ModelInfo的记录数据
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.DeleteModelInfo(IMES.FisObject.Common.Model.ModelInfo)">
            <summary>
            删除一条ModelInfo的记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.DeleteModelInfoNameByRegion(System.String)">
            <summary>
            Delete ModelInfoName where Region=?
            </summary>
            <param name="region"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.CheckExistModel(System.String,System.String)">
            <summary>
            SELECT Model.Model FROM Family INNER JOIN Model ON Family.Family = Model.Family
            WHERE Family.CustomerID = 'customer' AND  Model.Model='model'
            </summary>
            <param name="customer"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.Model.IModelRepository.GetFamilyList" -->
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelList">
            <summary>
            参考sql如下：
            select Model from Model
            按Model 列的字符序排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetAllShipType">
            <summary>
            取得全部的ShipType 
            参考sql：
            select * from ShipType order by ShipType 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.IfShipTypeIsEXists(System.String)">
            <summary>
            判断ShipType是否已经存在 
            参考sql:
            select * from ShipType where ShipType=?
            </summary>
            <param name="shipType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.UpdateShipType(IMES.FisObject.Common.Model.ShipType)">
            <summary>
            更新ShipType
            参考sql:
            Update ShipType Set Description=?,Editor=?,Udt=getdate() where ShipType=?
            </summary>
            <param name="shipType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.InsertShipType(IMES.FisObject.Common.Model.ShipType)">
            <summary>
            插入新的ShipType纪录
            参考sql:
            insert ShipType(ShipType,Description,Editor,Cdt,Udt)values(?,?,?,getdate(),getdate())
            </summary>
            <param name="shipType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.IfShipTypeIsInUse(System.String)">
            <summary>
            判断ShipType是否已经被Model使用
            参考sql:
            select count(1) from Model where ShipType=?
            </summary>
            <param name="shipType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetShipTypeByKey(System.String)">
            <summary>
            取得ShipType 
            参考sql:
            select * from ShipType where ShipType=?
            </summary>
            <param name="shipType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.DeleteShipTypeByKey(System.String)">
            <summary>
            删除ShipType 
            参考sql:
            delete from ShipType where ShipType=?
            </summary>
            <param name="shipType"></param>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.CheckExistModelInfo(System.String,System.String,System.String)">
            <summary>
            IF EXISTS (SELECT * FROM ModelInfo NOLOCK
            WHERE [Name] = 'PN'
            AND RIGHT(RTRIM([Value]), 4) = '#ABJ'
            AND Model = @Model)
            </summary>
            <param name="name"></param>
            <param name="model"></param>
            <param name="valuePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetModelChangeQtyByModelShipDate(System.String,System.DateTime)">
            <summary>
            order by line, Cdt
            </summary>
            <param name="model"></param>
            <param name="shipDate"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Model.IModelRepository.GetActiveModelChangeQty(System.String,System.String)">
            <summary>
             Query in transaction order by ShipDate, AssignedQty
            </summary>
            <param name="line"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialBox.GetAttributeValue(System.String)">
            <summary>
            鳳硌隅扽俶硉
            </summary>
            <param name="name">扽俶靡</param>
            <returns>扽俶硉</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBox.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBox.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialAttrLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialAttrLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialAttrLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialBoxAttrLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBoxAttrLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBoxAttrLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Line.Line">
            <summary>
            蚚衾桶尨Line腔珛昢妗极
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Id">
            <summary>
            Line Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.CustomerId">
            <summary>
            CustomerId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.StageId">
            <summary>
            StageId
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Descr">
            <summary>
            PdLine鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Line.Line.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"/> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.#ctor(IMES.FisObject.Common.Part.IPart,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.Match(System.String,System.String,System.String)">
            <summary>
            将指定字符串与此Part进行Match
            </summary>
            <param name="target">指定字符串</param>
            <param name="station">当前Station</param>
            <param name="valueType">需要匹配的Part属性类别</param>
            <returns>是否匹配</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.Check(IMES.FisObject.Common.Part.IPartOwner,System.String)">
            <summary>
            Part检查，通常包括唯一性检查等
            </summary>
            <param name="owner">owner</param>
            <param name="station">station</param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.CheckHold(System.String,System.String)">
            <summary>
            检查Part是否被Hold
            </summary>
            <param name="family">family</param>
            <param name="model">model</param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.GetAttribute(System.String)">
            <summary>
            获取Part扩展属性
            </summary>
            <param name="name">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.AddAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            增加Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.ChangeAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            更新Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.DeleteAttribute(IMES.FisObject.Common.Part.PartInfo)">
            <summary>
            删除Part属性
            </summary>
            <param name="attr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.GetProperty(System.String,System.String)">
            <summary>
            根据属性名获取属性值， 属性包括基础属性和扩展属性，仅用于KP类型
            </summary>
            <param name="propertyName">属性名</param>
            <param name="assemblyCode">属性值</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.GetAttribute(System.String,System.String)">
            <summary>
            获取Part扩展属性，仅用于KP类型
            </summary>
            <param name="name">属性名</param>
            <param name="assemblyCode">assCode</param>
            <returns>属性值</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.BOMPart.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.AssemblyCode">
            <summary>
            get AssemblCode:
               Model
               Famiy+Region
               Family
               Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Part">
            <summary>
            Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Customer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.ModelObj">
            <summary>
            Model Object
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.PN">
            <summary>
            PartNumber, Part的唯一性标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Type">
            <summary>
            Part具体类型: CPU, DIMM
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.TypeGroup">
            <summary>
            类型分组
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.CustPn">
            <summary>
            Part的CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Descr">
            <summary>
            Part描述信息
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.AutoDL">
            <summary>
            AutoDL
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Editor">
            <summary>
            维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Descr2">
            <summary>
            Part描述信息 2
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Attributes">
            <summary>
            Part属性
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.BOMPart.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.RepairDefect">
            <summary>
            维修记录中的Defect
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.RepairDefect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.RepairDefect.#ctor(System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.RepairID">
            <summary>
            Repiar Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.DefectCodeID">
            <summary>
            Defect Code
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Cause">
            <summary>
            Cause
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Obligation">
            <summary>
            Obligation
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Component">
            <summary>
            Component
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Site">
            <summary>
            Site
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.MajorPart">
            <summary>
            MajorPart
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.VendorCT">
            <summary>
            VendorCT
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.PartType">
            <summary>
            PartType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.OldPart">
            <summary>
            OldPart
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.OldPartSno">
            <summary>
            OldPartSno
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.NewPart">
            <summary>
            NewPart
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.NewPartSno">
            <summary>
            NewPartSno
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.NewPartDateCode">
            <summary>
            NewPartDateCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.IsManual">
            <summary>
            IsManual
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Manufacture">
            <summary>
            Manufacture
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.VersionA">
            <summary>
            VersionA
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.VersionB">
            <summary>
            VersionB
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.ReturnSign">
            <summary>
            ReturnSign
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Mark">
            <summary>
            Mark
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.SubDefect">
            <summary>
            SubDefect
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.PIAStation">
            <summary>
            PIAStation
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Distribution">
            <summary>
            Distribution
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect._4M">
            <summary>
            4M
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Responsibility">
            <summary>
            Responsibility
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Cover">
            <summary>
            Cover
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Uncover">
            <summary>
            Uncover
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.TrackingStatus">
            <summary>
            TrackingStatus
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.MTAID">
            <summary>
            MTAID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.RepairDefect.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBModel.MBModel">
            <summary>
            翋啣倰瘍濬﹝
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBModel.IMBModel">
            <summary>
            MBModel对象接口
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.Pn">
            <summary>
            主板型号零件号。
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.Mbcode">
            <summary>
            主板型号代码。
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.Mdl">
            <summary>
            Mdl
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.Type">
            <summary>
            主板类型：MB/SB/VB
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.IsCompositeBoard">
            <summary>
            是否为连扳
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.IMBModel.IsVB">
            <summary>
            Whether VB or not
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBModel.MBModel.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            蘇凳婖滲杅
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Pn">
            <summary>
            翋啣倰瘍錨璃瘍﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Mbcode">
            <summary>
            翋啣倰瘍測鎢﹝
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Mdl">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Type">
            <summary>
            翋啣濬倰ㄩMB/SB/VB
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.IsCompositeBoard">
            <summary>
            岆瘁峈蟀售
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Family">
            <summary>
            MB腔Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBModel.MBModel.Key">
            <summary>
            勤砓梓尨key
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository">
            <summary>
            ModelTolerance对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository.FindModelWeightToleranceByCustomer(System.String)">
            <summary>
            根据customer获取Model误差范围
            参考sql
            select * from IMES_PAK..ModelWeightTolerance where Model=? 
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository.FindModelWeightToleranceListByFamily(System.String)">
            <summary>
            参考sql
            select * 
            from IMES_PAK..ModelWeightTolerance a 
                 join IMES_GetData..Model b 
                      on a.Model=b.Model 
            where b.Family=?
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository.DeleteModelWeightToleranceByModel(System.String)">
            <summary>
            删除Model误差范围
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository.AddModelWeightTolerance(IMES.FisObject.PAK.StandardWeight.ModelTolerance)">
            <summary>
            增加Model误差范围
            </summary>
            <param name="modelWeightTolerance"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.StandardWeight.IModelToleranceRepository.UpdateModelWeightTolerance(IMES.FisObject.PAK.StandardWeight.ModelTolerance,System.String)">
            <summary>
            修改Model误差范围
            </summary>
            <param name="modelWeightTolerance"></param>
            <param name="model"></param>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.IFRUCartonRepository.FillCartonParts(IMES.FisObject.PAK.FRU.FRUCarton)">
            <summary>
            俀樓婥Part
            </summary>
            <param name="carton"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.IFRUCartonRepository.FillCartonGifts(IMES.FisObject.PAK.FRU.FRUCarton)">
            <summary>
            俀樓婥Gift
            </summary>
            <param name="carton"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PAK.FRU.IFRUCartonRepository.CheckExistForFRUCarton_FRUGift(System.String)">
            <summary>
            潰脤FRUCarton_FRUGift岆瘁湔婓
            </summary>
            <param name="giftId"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.PAK.DN.DeliveryInfo">
            <summary>
            Delivery腔孺桯扽俶濬
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.ID">
            <summary>
            赻崝ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.DeliveryNo">
            <summary>
            DN瘍鎢
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.InfoType">
            <summary>
            孺桯扽俶腔靡備
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.InfoValue">
            <summary>
            孺桯扽俶腔硉
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.Editor">
            <summary>
            峎誘埜馱瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.DN.DeliveryInfo.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonStatus.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonStatus.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonStatus.Parent">
            <summary>
            Parent object
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BSam.BSamModel.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.BSam.BSamModel.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.TPCB.ITPCBRepository">
            <summary>
            Maintain TPCB的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.GetVCodeInfo(System.String,System.String)">
            <summary>
            根据tpcb和tp号，取得VCode信息
            SELECT Vcode FROM GetData..TPCB_Maintain WHERE TPCB = @TPCB AND Tp = @Tp
            </summary>
            <param name="tpcb">tpcb</param>
            <param name="tp">tp</param>
            <returns>VCode Info</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.GetVCodeCombineInfo(System.String)">
            <summary>
            查询vcode是否已绑定
            SELECT * FROM GetData..TPCB_Maintain WHERE Vcode = @Vcode
            </summary>
            <param name="vcode">vcode</param>  
            <returns>VCode Info</returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.SaveVCodeInfo(IMES.DataModel.VCodeInfo)">
            <summary>
            更新或插入 tpcb,tp和vcode信息
              IF EXISTS(SELECT * FROM GetData..TPCB_Maintain WHERE TPCB = @TPCB AND Tp = @Tp)
                 UPDATE [TPCB_Maintain] SET [Vcode] = @Vcode, [Editor] = @Editor, [Cdt] = GETDATE() WHERE TPCB = @TPCB AND Tp = @Tp)
              ELSE
                 INSERT INTO [TPCB_Maintain]([TPCB],[Tp],[Vcode],[Editor],[Cdt])  VALUES(@TPCB, @Tp, @Vcode, @Editor, GETDATE())
            </summary>
            <param name="value">value</param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.DeleteVcodeInfo(System.String)">
            <summary>
            根据vcode号，删除vcode数据相关信息
            DELETE GetData..TPCB_Maintain WHERE Vcode = @Vcode
            </summary>
            <param name="vcode">vcode</param>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.CheckVCode(System.String,System.String,System.String)">
            <summary>
            检查用户输入的[TPCB]/[T/P]/[VCode]，在数据库中是否存在
            IF EXISTS(SELECT * FROM GetData..TPCB_Maintain WHERE TPCB = @TPCB AND Tp = @Tp AND Vcode = @Vcode)
                PRINT 'Exist'
            ELSE
                PRINT 'Not Exist'
            </summary>
            <param name="tpcb">tpcb</param>
            <param name="tp">tp</param>
            <param name="vcode">vcode</param>
            <returns>成功执行返回 影响行数 >1,否则返回 0 </returns>
        </member>
        <member name="M:IMES.FisObject.Common.TPCB.ITPCBRepository.QueryAll">
            <summary>
            显示全部vcode数据相关信息（全集）
            SELECT * FROM GetData..TPCB_Maintain ORDER BY TPCB,Tp,Vcode
            </summary>
            <returns>返回VCodeInfo信息 ：TPCB | T/P | Vcode | Editor | Create Date 信息</returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.ProductPart">
            <summary>
            ProductPart是Product/MB与Part的绑定关系类，该类实例不会脱离Product/MB对象单独存在；
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IProductPart">
            <summary>
            与Product/MB绑定的Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.ProductID">
            <summary>
            Product ID/MB Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.PartID">
            <summary>
            Pn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.PartSn">
            <summary>
            Part Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.Iecpn">
            <summary>
            Iecpn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.CustomerPn">
            <summary>
            CustomerPn
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.PartType">
            <summary>
            BOMNode Type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.Station">
            <summary>
            Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.IProductPart.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.ProductPart.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.ProductPart.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.ProductPart.PartReverseSpecialDeal(IMES.FisObject.Common.Part.IProductPart)">
            <summary>
            有些类型的Part保存前需要对part数据进行特殊改变, 取出后也要进行反向转换
            </summary>
            <param name="part"></param>
            <returns></returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.PartID">
            <summary>
            绑定到Product的Part No
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.ProductID">
            <summary>
            ProductID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.Station">
            <summary>
            Part与Product的绑定站
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.Editor">
            <summary>
            将Part与Product绑定的员工编号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.Udt">
            <summary>
            Product状态的更新日期时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.Cdt">
            <summary>
            Product状态记录的创建日期时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.ProductPart.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.BSParts">
            <summary>
            BSPart类
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.BSParts.PartNo">
            <summary>
            PartNo
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.BSParts.FURNO">
            <summary>
            FRU No
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.BSParts.Descr">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.BSParts.PartType">
            <summary>
            Part type
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.NumControl.MACRange.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.MO.IMORepository">
            <summary>
            Product订单的Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOListFor014(System.String)">
            <summary>
            select ID from MO where Qty-Print_Qty > 0 and Status='H' and Udt>dateadd(day,-30,getdate()) and Model=model# and MO.SAPStatus=’’order by ID
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOList(System.String)">
            <summary>
            根据机器Model号，取得MO信息列表
            </summary>
            <param name="modelId">机器Model号码</param>
            <returns>MO信息列表</returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOListFor013">
            <summary>
            MO.Prt_Qty>0 and MO.Status='H' and MO.SAPStatus=''
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMinUsableMO(System.String)">
            <summary>
            得到最小可用的Mo
            select @newmo=Min(ID)from MO where ModelID=@model and Qty-Print_Qty>0 and Print_Qty>=0 and Status='H'
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.IncreaseMOPrintedQty(IMES.FisObject.Common.MO.MO,System.Int16)">
            <summary>
            使Print_Qty增加指定数量
            </summary>
            <param name="mo"></param>
            <param name="count"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.DecreaseMOPrintedQty(IMES.FisObject.Common.MO.MO,System.Int16)">
            <summary>
            使Print_Qty减少指定数量
            </summary>
            <param name="mo"></param>
            <param name="count"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetVirtualMObyModel(System.String)">
            <summary>
            SELECT MO, Model, CreateDate, StartDate, Qty, Print_Qty FROM IMES_GetData..MO
            WHERE Model = @Model
                AND LEFT(MO, 1) = 'V'
                AND Cdt BETWEEN CONVERT(varchar, GETDATE(),111) AND CONVERT(varchar, DATEADD(day, 1, GETDATE()), 111)
            ORDER BY MO
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.MO.IMORepository.GetOldMOListFor094(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.MO.IMORepository.GetNewMOListFor094(System.String)" -->
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetUsableMOOrderByStartDate(System.String)">
            <summary>
            得到StartDate最靠前的可用的Mo
            SELECT TOP 1 MO FROM IMES_GetData..MO WHERE Model = @NewModel AND Qty > Print_Qty AND Status = 'H' ORDER BY StartDate
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOListFor014ConsiderStartDate(System.String)">
            <summary>
            select ID from MO where Qty-Print_Qty > 0 and  Status='H' and  Udt>dateadd(day,-10,getdate()) and StartDate>dateadd(day,-3,getdate())  and Model=model# and  MO.SAPStatus=’’ order by ID
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetQtyAndRemainedOfMo(System.String)">
            <summary>
            select Qty,Qty-Print_Qty from MO where Mo=mo#
            </summary>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.DecreaseMOTransferQty(IMES.FisObject.Common.MO.MO,System.Int16)">
            <summary>
            使Transfer_Qty减少指定数量
            </summary>
            <param name="mo"></param>
            <param name="count"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOListFor014ConsiderStartDateOrderByMo(System.String)">
            <summary>
            SELECT [MO]
            FROM [IMES2012_GetData].[dbo].[MO] 
            where [SAPStatus]='' 
            and [Qty]>[Print_Qty] 
            and [Status]='H' 
            and convert(varchar(8),Udt,112)>convert(varchar(8),dateadd(day,-10,getdate()),112) 
            and Convert(varchar(8),StartDate,112)>Convert(varchar(8),dateadd(day,-3,getdate()),112) 
            and [Model]=model# 
            Order By MO
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetVirtualMOAndRealMObyModel(System.String)">
            <summary>
            2.Get MO by Model（含Virtual Mo和真实Mo）
            SELECT MO, Model, CreateDate, StartDate, Qty, Print_Qty FROM IMES_GetData..MO
            WHERE Model = @Model
            AND Cdt BETWEEN CONVERT(varchar, GETDATE(),111) AND CONVERT(varchar, DATEADD(day, 1, GETDATE()), 111)
            ORDER BY MO
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOListByFamily(System.String)">
            <summary>
            SELECT MO, Model, CreateDate, StartDate, Qty, Print_Qty FROM MO a，Model b
            WHERE a.Model=b.Model and b.Family=@Family and  Qty>Print_Qty order by MO
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.ExecuteMoUploadJOB(System.String)">
            <summary>
            Execute JOB
            </summary>
            <param name="jobName"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.UpdateMoForIncreaseCustomerSnQty(System.String,System.Int16)">
            <summary>
            UPDATE [HPIMES].[dbo].[MO]
            SET [CustomerSN_Qty]=[CustomerSN_Qty]+1
            From Product a,MO b WHERE a.MO=b.MO and a.ProductID=ProductID#
            </summary>
            <param name="productId"></param>
            <param name="count"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetModelListFromMo(System.String)">
            <summary>
            1.select distinct Model.Model from Model, MO 
                where Model.Family = [Family]
                and Model.Model = MO.Model
                and Print_Qty ＜ Qty 
                order by Model.Model
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetMOByModel(System.String)">
            <summary>
            2.select * from MO 
               where Model=''
               and Print_Qty ＜ Qty
               order by Udt desc
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetProductPlanByLineAndShipDate(System.String,System.DateTime)">
             <summary>
             select ID, PdLine, ShipDate, Family, Model, PlanQty, AddPrintQty, PrePrintQty, Editor, Cdt, Udt 
            from ProductPlan
            where PdLine = @line and
            ShipDate =@shipdate
             </summary>
             <param name="Line">Phyical Line</param>
             <param name="ShipDate">ShipDate</param>
             <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.MO.IMORepository.GetProductPlanMOByLineAndShipDate(System.String,System.DateTime,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.MO.IMORepository.GetProductPlanLogByLineAndShipDateAndAction(System.String,System.DateTime,System.String)" -->
        <member name="M:IMES.FisObject.Common.MO.IMORepository.UploadProductPlan(System.Collections.Generic.IList{IMES.DataModel.TbProductPlan},System.String)">
            <summary>
            declare @ProductPlanUpload TbProductPlan 
             exec IMES_ProductPlanCheckInsert @ProductPlanUpload 
            </summary>
            <param name="ProdPlanList"> TVP parameter structure</param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.UploadProductPlan_Revise(System.Collections.Generic.IList{IMES.DataModel.TbProductPlan},System.String)">
            <summary>
            declare @ProductPlanUpload TbProductPlan 
             exec IMES_ProductPlanCheckInsert @ProductPlanUpload 
            </summary>
            <param name="ProdPlanList"> TVP parameter structure</param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetProductPlanFamily(System.String,System.DateTime)">
             <summary>
             SELECT distinct a.[Family]
             ,a.[Descr]
            ,a.[CustomerID]
            FROM [Family] a, ProductPlan b, MO c
            Where a.Family = b.Family 
             and b.PdLine = left(@PdLine,1) 
             and b.ShipDate=@ShipDate
             and GetPlanMONo(b.ID, b.PdLine) = c.MO 
            and c.Qty > c.Print_Qty 
             and c.[Status] = 'H'
             </summary>
             <param name="line"></param>
             <param name="shipdate"></param>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetProductPlanModel(System.String,System.DateTime,System.String)">
             <summary>
             SELECT a.[Model], b.[ID]
            FROM [Model] a, ProductPlan b, MO c
            Where a.Family = @Family 
                  and a.Model = b.Model
                  and b.PdLine = left(@PdLine,1) 
                  and b.ShipDate=@ShipDate
                  and GetPlanMONo(b.ID, b.PdLine) = c.MO 
                  and c.Qty > c.Print_Qty 
                  and c.[Status] = 'H' 
            Order by a.[Model]
             </summary>
             <param name="line"></param>
             <param name="shipdate"></param>
             <param name="Model"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetPlanMO(System.Int32)">
             <summary>
             SELECT a.*, b.PlanQty 
            FROM  MO a, ProductPlan b
            Where b.[ID] = @ID and 
                  a.MO= dbo. GetPlanMONo(b.ID, b.PdLine)
             </summary>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetNonCMOList">
            <summary>
            选项包括Status栏位不是“C”(已出货)的所有MO
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.MO.IMORepository.GetMoByModel(System.String)" -->
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetActiveMO(System.String)">
            <summary>
            order by CreateDate, (Qty-PrintQty) desc
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.MO.IMORepository.GetActiveMOWithNoneLock(System.String)">
            <summary>
             select top 1  MO
             from MO WITH (UPDLOCK,ROWLOCK,READPAST) 
             where  Model ='1510B0967701'   and
              Status='H'
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MBRptRepair">
            <summary>
            主板扩展信属性。表示一条主板的扩展属性。
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBRptRepair.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBRptRepair.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBRptRepair.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBRptRepair.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MBChangeLog.MBChangeLog">
            <summary>
            主板Regenerate日志值对象
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.#ctor(System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.Sn">
            <summary>
            MB Sn
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.NewSn">
            <summary>
            所属Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MBChangeLog.MBChangeLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.FISToSAPWeight">
            <summary>
            FISToSAPWeight类对应FISToSAPWeight表
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Weight">
            <summary>
            重量
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Shipment">
            <summary>
            Shipment号码
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.FISToSAPWeight.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Station.StationStatus">
            <summary>
            儂婓跪桴褫夔腔揭燴袨怓
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.FA.Product.ProductAttribute">
            <summary>
            Product制程控制状态
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.Product.ProductAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.ProductId">
            <summary>
            ProductId
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.AttributeName">
            <summary>
            AttributeName
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.AttributeValue">
            <summary>
            AttributeValue
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.FA.Product.ProductAttribute.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.GetLCMBindCount(System.String,System.String)">
            <summary>
            3.—query LCM by LCMSno and METype
            declare @CTNO varchar(20)
            declare @metype varchar(5)
            select count(*) from IMES_FA..LCMBind where LCMSno=@CTNO and METype=@metype
            </summary>
            <param name="lcmSno"></param>
            <param name="meType"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.GetLCMBindCount(System.String)">
            <summary>
            select count(*) from IMES_FA..LCMBind where MESno=@btdlsn
            </summary>
            <param name="meSno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.InsertLCMBind(IMES.FisObject.FA.LCM.LCMME)">
            <summary>
            Insert LCMBind: LCMSno=LCM CT#, MESno=BTDL SN#, METype='BTDL'
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.GetICASAList">
            <summary>
            1.获取ICASA的所有信息
            select * from ICASA ORDER BY VC
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.GetICASAInfoById(System.Int32)">
            <summary>
            2.用过id获取一条信息
            select * from ICASA where ID=id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.GetICASAInfoByVC(System.String)">
            <summary>
            3.用过vc获取一条信息
            select TOP 1 * from ICASA where VC=vc
            </summary>
            <param name="vc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.AddICASAInfo(IMES.DataModel.ICASADef)">
            <summary>
            4.添加一条记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.UpdateICASAInfo(IMES.DataModel.ICASADef,System.Int32)">
            <summary>
            5.更新指定id的记录 全字段where ID=id
            </summary>
            <param name="item"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.DeleteICASAInfo(System.Int32)">
            <summary>
            6.删除指定id的记录 where ID=id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.FA.LCM.ILCMRepository.CheckExistICASAByVC(System.String)">
            <summary>
            3) ICASA  where VC=@VC  取得 [Antel1],[ICASA] 不能全为空
            NOT (ISNULL([Antel1],'')='' AND ISNULL([ICASA],'')='')
            </summary>
            <param name="vc"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.UPS.UPSCombinePO.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.AssemblyCodeInfo">
            <summary>
            AssemblyCode熟悉你给
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.AssemblyCode">
            <summary>
            AssemblyCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.InfoType">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.InfoValue">
            <summary>
            属性值
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.AssemblyCodeInfo.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.GetECRVersionListByFamily(System.String)">
            <summary>
            SELECT RTRIM(Family), RTRIM(MBCode), RTRIM(ECR), RTRIM(IECVer) as [IEC Version],
            RTRIM(CustVer) as [Customer Version], RTRIM(Editor), Cdt as [Create Date], Udt as [Update Date]
            FROM EcrVersion 
            WHERE Family = @Family
            ORDER BY Family, MBCode, ECR
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.GetECRVersionByFamilyMBCodeAndECR(System.String,System.String,System.String)">
            <summary>
            SELECT * FROM IMES_PCA..EcrVersion 
            WHERE Family = @Family AND MBCode = @MBCode AND ECR = @ECR
            </summary>
            <param name="family"></param>
            <param name="mbCode"></param>
            <param name="ecr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.GetFamilyInfoListForECRVersion">
            <summary>
            SQL:SELECT Family FROM Family ORDER BY Family
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.UpdateEcrVersionMaintain(IMES.FisObject.PCA.EcrVersion.EcrVersion,System.String,System.String,System.String)">
            <summary>
            根据family,mbcode,ecr 更新item
            </summary>
            <param name="item"></param>
            <param name="family"></param>
            <param name="mbcode"></param>
            <param name="ecr"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.GetECRVersionByMBCodeAndECR(System.String,System.String)">
            <summary>
            select * from EcrVersion where MBCode=@MBCode and ECR=@ECR
            </summary>
            <param name="mbCode"></param>
            <param name="ecr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.IEcrVersionRepository.GetFamilyInfoListForSA(System.String)">
            <summary>
            select distinct Descr from Part nolock where BomNodeType = @bomNodeType order by Descr
            </summary>
            <param name="bomNodeType"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.PAK.Pizza.PizzaLog">
            <summary>
            Pizza log
            </summary>   
        </member>
        <member name="M:IMES.FisObject.PAK.Pizza.PizzaLog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.PizzaID">
            <summary>
            Pizza ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Id">
            <summary>
            Log腔ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Model">
            <summary>
            Pizza儂倰
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Station">
            <summary>
            Pizza冪徹腔Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Line">
            <summary>
            Pizza垀婓腔Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Descr">
            <summary>
            Pizza垀婓腔Descr
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Editor">
            <summary>
            婓蜆桴揭燴Product腔埜馱晤瘍
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Cdt">
            <summary>
            Pizza俇傖議桴腔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pizza.PizzaLog.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Station.Station">
            <summary>
            莉盄桴梗隅砱
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Station.Station.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.StationId">
            <summary>
            Station測鎢
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.StationType">
            <summary>
            StationType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.OperationObject">
            <summary>
            蜆桴紱釬腔勤砓濬倰0:帤隅砱 1:MB; 2:Product;
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Descr">
            <summary>
            Station鏡扴
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Editor">
            <summary>
            峎誘埜
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Cdt">
            <summary>
            斐膘奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Udt">
            <summary>
            載陔奀潔
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Station.Station.Key">
            <summary>
            勤砓梓尨key, 婓肮濬倰FisObject毓峓囀峔珨
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Process.ModelProcess">
            <summary>
            ModelProcess实体，表示Model和Process之间的关系
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Process">
            <summary>
            Process
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Process.ModelProcess.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.FlatBOMItem.Match(System.String,System.String)">
            <summary>
            try to match a string
            </summary>
            <param name="target">剒猁輛俴match腔趼睫揹</param>
            <param name="station">絞Station</param>
            <returns>match善腔part</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.FlatBOMItem.IsFull">
            <summary>
            岆瘁眒芃雛
            </summary>
            <returns>岆瘁眒芃雛</returns>
        </member>
        <member name="M:IMES.FisObject.Common.FisBOM.FlatBOMItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.ValueType">
             <summary>
            森BOMItem勤茼腔剒猁彶摩腔part扽俶濬倰
             </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.CustomerId">
            <summary>
            Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.Qty">
            <summary>
            猁芃腔Part杅講
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.AlterParts">
            <summary>
            鼠蚚蹋蹈桶
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.PrecheckedPart">
            <summary>
            絞桴眳眒冪堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.CheckedPart">
            <summary>
            絞桴堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.StationPreCheckedPart">
            <summary>
            絞桴眳誹萸堂隅腔Part
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.FisBOM.FlatBOMItem.GUID">
            <summary>
            CheckItem 唯一識別碼
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.MBInfo">
            <summary>
            主板扩展信属性。表示一条主板的扩展属性。
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.MBInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.ID">
            <summary>
            记录标识
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.PCBID">
            <summary>
            扩展信息所属MB
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.InfoType">
            <summary>
            扩展属性名
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.InfoValue">
            <summary>
            扩展属性值
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.Editor">
            <summary>
            维护人员
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.MB.MBInfo.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PCA.MB.IMBRepository">
            <summary>
            用于访问MB对象的Repository接口
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetMaxMBNO(System.String)" -->
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.SetMaxMBNO(System.String,System.String,IMES.FisObject.PCA.MB.IMB)">
            <summary>
            更新MBNO最大号(NumControl)
            </summary>
            <param name="mbCode">MbCode</param>
            <param name="mbType">MbType</param>
            <param name="maxMO">MO最大号</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillMBLogs(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载MBLogs
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillMBInfos(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载MBInfos
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillMBParts(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载MBParts
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillMBRptRepairs(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载RptRepairs
            select * from rpt_PCARep where SnoId=@MBSNo order by Cdt
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillRepairs(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载Repairs
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillTestLogs(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载TestLogs
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillRepairDefectInfo(IMES.FisObject.Common.Repair.Repair)">
            <summary>
            晚加载Repair Defect
            </summary>
            <param name="rep"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillTestLogDefectInfo(IMES.FisObject.Common.TestLog.TestLog)">
            <summary>
            晚加载TestLog Defect
            </summary>
            <param name="testLog"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillStatus(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载MB Statu
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FillModelObj(IMES.FisObject.PCA.MB.IMB)">
            <summary>
            晚加载Model对象
            </summary>
            <param name="mb"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteMBSection(System.String,System.String)">
            <summary>
            删除指定区间内的MB, MBStatus, 直接写db
            </summary>
            <param name="startSn">startSn</param>
            <param name="endSn">endSn</param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBBySection(System.String,System.String)">
            <summary>
            获取指定区间中的MB列表
            </summary>
            <param name="startSn">startSn</param>
            <param name="endSn">endSn</param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBBySectionAndMO(System.String,System.String,System.String)">
            <summary>
            获取指定MO,指定区间中的MB列表
            </summary>
            <param name="startSn"></param>
            <param name="endSn"></param>
            <param name="mo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GenerateUUID(System.String,System.DateTime,System.DateTime)">
            <summary>
            根据时间戳和MAC生成UUID
            </summary>
            <param name="mac"></param>
            <param name="currentTime"></param>
            <param name="currentUTCTime"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.IsUsedCvsn(System.String)">
            <summary>
            检查输入的cpuVendorSn是否已经和MB绑定
            用于CombineMBCPU之前检查CPU是否已与其他MB绑定;
            检查PCB表的CVSN栏位如果等于输入的cpuVendorSn存在返回和它绑定的MBSNO
            不存在返回""
            select top 1 PCBNo from PCB where CVSN=@CVSN
            </summary>
            <param name="cpuVendorSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetRepairDefectBySiteComponent(System.String,System.String,System.String)">
            <summary>
            获取指定mb的指定site,component的维修完成的RepairDefect列表
            select * from PCBRepair_DefectInfo inner join PCBRepair on PCBRepair_DefectInfo.PCARepairID = PCBRepair.ID where PCBNo = '' and Component = '' and Site = '' and Cause is not null 
            </summary>
            <param name="mbsn">mbsn</param>
            <param name="site">site</param>
            <param name="component">component</param>
            <returns>RepairDefect列表</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.TryToGetMBType(IMES.FisObject.Common.Part.IPart,System.String@)">
            <summary>
            获得MB的Type和MB Code
            </summary>
            <param name="part"></param>
            <param name="Mb_Code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBByMAC(System.String)">
            <summary>
            根据MAC获得MB
            </summary>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBListByMAC(System.String)">
            <summary>
            根据MAC获得MB列表
            </summary>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBPartsByPartNoAndValue(System.String,System.String)">
            <summary>
            根据PN和Value获得PCB Part的列表
            </summary>
            <param name="partNo"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBPartsByPartSn(System.String)">
            <summary>
            根据PartSn获得PCB Part的列表
            </summary>
            <param name="partSn"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBInfoByTypeValue(System.String,System.String)">
            <summary>
            根据PCBInfo表的InfoType和InfoValue获取PCB对象	
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.FilterMBNOList(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            查询在MBNOList范围内的MBNO，对应的MBStatus.Station 不为stationId  的MBNO记录集
            </summary>
            <param name="mbNOList"></param>
            <param name="stationId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemoveBatch(System.Collections.Generic.IList{IMES.FisObject.PCA.MB.IMB})">
            <summary>
            批删除MB记录
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateMBStatusBatch(System.Collections.Generic.IList{IMES.FisObject.PCA.MB.MBStatus})">
            <summary>
            批更新MB的Status
            </summary>
            <param name="mbstts"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddMBLogBatch(System.Collections.Generic.IList{IMES.FisObject.PCA.MB.MBLog})">
            <summary>
            批增加MB的Log
            </summary>
            <param name="mblogs"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetTheNewestStationFromPCBLog(System.String)">
            <summary>
            select Station from IMES_PCA..PCBLog where PCBNo='' (Cdt最大的)
            </summary>
            <param name="pcbno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ReplaceMBSn(System.String,System.String)">
            <summary>
            Replace Old MB Data with New MB Sno
            </summary>
            <param name="oldSn">oldSn</param>
            <param name="newSn">newSn</param>
            <remarks>
            将下列各表中的Old MB Sno 对应记录的PCBNo 栏位Update 为New MB Sno
            IMES_PCA..MODismantleLog
            IMES_PCA..PCB
            IMES_PCA..PCBInfo
            IMES_PCA..PCBLog
            IMES_PCA..PCBRepair
            IMES_PCA..PCBStatus
            IMES_PCA..PCBTestLog
            IMES_PCA..PCB_Part
            IMES_PCA..SnoLog3D
            IMES_PCA..TransferToFISList
            </remarks>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetRptPcaRepByTpAndSnoID(System.String,System.String)">
            <summary>
            2、Repair List
            参考方法：
            select SnoId,Remark,Username,Cdt,Udt from rpt_PCARep nolock where Tp='BGA' and SnoId=@MBSNo order by Cdt
            </summary>
            <param name="tp"></param>
            <param name="snoId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.CheckExistRptPcaRepBySnoIdAndTpAndRemark(System.String,System.String,System.String)">
            <summary>
            if exists(select SnoId from rpt_PCARep (nolock) where SnoId=@MBSno and Tp='BGA' and Remark=@remark)
            </summary>
            <param name="snoId"></param>
            <param name="tp"></param>
            <param name="remark"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertRptPcaRep(IMES.DataModel.RptPcaRepInfo)">
            <summary>
            Insert rpt_PCARep
            SnoId = @MBSno
            Tp = ‘BGA’
            Status= ‘1’
            Mark = ‘0’
            Remark = [Rework Station]
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddMBTest(IMES.DataModel.MBTestDef)">
            <summary>
            2.添加MB_Test一条数据
            addMB_Test(MB_TestDef mbTest);
            </summary>
            <param name="mbTest"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteMBTest(System.String,System.String,System.Boolean)">
            <summary>
            3.删除一条MB_Test数据
            DELETE FROM MB_Test
            WHERE Code = @code and Family=@family and Type=@type
            </summary>
            <param name="code"></param>
            <param name="family"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBTestbyFamily(System.String)">
            <summary>
            4.根据family显示所有testMB数据
            select * from MBTest
            where family=@family
            </summary>
            <param name="family"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdatePCBStatus(IMES.DataModel.PCBStatusInfo,IMES.DataModel.PCBStatusInfo)">
            <summary>
            C for MB 
            Update PCA..PCBStatus.Station=30,Status=0
            （setValue哪个字段赋值就有更新哪个字段;condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.）
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBTestByCodeFamilyAndType(System.String,System.String,System.Boolean)">
            <summary>
            根据code,family和type获取所有testMb列表
            </summary>
            <param name="code"></param>
            <param name="family"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetAllMBCFGLst">
            <summary>
            1.获取所有MBCFG数据
            按照MBCode字段排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddMBCFG(IMES.DataModel.MBCFGDef)">
            <summary>
            3.添加一条MBCFG数据
            </summary>
            <param name="mbcfgDef"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteMBCFG(System.Int32)">
            <summary>
            4.删除一条MBCFG数据
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateMBCFG(IMES.DataModel.MBCFGDef,System.String,System.String,System.String)">
            <summary>
            5.根据mbcode,series和Type修改MBCFG数据
            </summary>
            <param name="mbcfgDef"></param>
            <param name="mbCode"></param>
            <param name="series"></param>
            <param name="type"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBCFGByCodeSeriesAndType(System.String,System.String,System.String)">
            <summary>
            6.根据MBcode,series,和type获取一条MBCFG数据
            </summary>
            <param name="mbCode"></param>
            <param name="serices"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetAllITCNDDefectChecks">
            <summary>
            1,SQL:select * from Maintain_ITCNDefect_Check order by family
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddITCNDDefectCheck(IMES.DataModel.ITCNDDefectCheckDef)">
            <summary>
            2,SQL:insert into Maintain_ITCNDDefect_Check values(各个字段)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemoveITCNDDefectCheck(System.String)">
            <summary>
            3,SQL:delete from Maintain_ITCNDDefect_Chekc where family=[family]
            </summary>
            <param name="family"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemoveITCNDDefectCheckbyFamilyAndCode(System.String,System.String)">
            <summary>
            SQL: Delete from Maintain_ITCNDDefect_Chekc where family=[family] and code=[code]
            </summary>
            <param name="family"></param>
            <param name="code"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetCountOfPCB(System.String)">
            <summary>
            select @Count=COUNT(*) from PCB nolock where PCBNo = @MBSno
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbRepairList(System.String,System.String)">
            <summary>
            select * from PCBRepair nolock where PCBNo=@MBSno and Station='33'
            </summary>
            <param name="pcbNo"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMaxCdtFromPCBRepair(System.String,System.String)">
            <summary>
            select @cdt=max(Cdt) from PCBRepair nolock where PCBNo=@MBSno and Station='33'
            </summary>
            <param name="pcbNo"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbStatusList(System.String,System.String)">
            <summary>
            select * from PCBStatus nolock where PCBNo=@MBSno and Station='24'
            </summary>
            <param name="pcbNo"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetITCNDDefectChecks(System.String,System.String)">
            <summary>
            select * from Maintain_ITCNDefect_Check where Code=left(@MBSno,2) and Type='M/B'
            </summary>
            <param name="mbSno"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String,System.String[],System.Int32,System.String,System.DateTime)">
            <summary>
            select @remark=Remark from PCBTestLog nolock where PCBNo=@MBSno and Type='M/B' and Status=1 and Station=@Station and Cdt>@cdt
            select * from PCBTestLog nolock where PCBNo = @MBSno and Type in ('MB','M/B','RCTO') and Status = ‘0’ and Station=@Station and Cdt>@Rdt
            </summary>
            <param name="pcbNo"></param>
            <param name="types"></param>
            <param name="status"></param>
            <param name="station"></param>
            <param name="beginCdt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBTestList(System.String,System.Boolean)">
            <summary>
            Select * from MB_Test nolock where RTRIM(Code) = LEFT(@MBSno,2) and Type=0
            select * from MB_Test nolock where Code=left(@MBSno,2) and Type=0
            </summary>
            <param name="mbSno"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMaxCdtFromPCBLog(System.String)">
            <summary>
            select @Rdt=MAX(Cdt) from PCBLog nolock where PCBNo = @MBSno
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetITCNDDefectChecks(System.String)">
            <summary>
            select * from Maintain_ITCNDefect_Check nolock where Code=left(@MBSno,2)
            </summary>
            <param name="mbSno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String,System.Int32,System.String,System.DateTime)">
            <summary>
            select * from PCBTestLog nolock where PCBNo=@MBSno and Status='1' and Station=@Station and Cdt>@Rdt
            select * from PCBTestLog nolock where PCBNo=@MBSno and Cdt>@Rdt and Station=@Station and Status='1'
            </summary>
            <param name="pcbNo"></param>
            <param name="status"></param>
            <param name="station"></param>
            <param name="beginCdt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String,System.String,System.DateTime)">
            <summary>
            select * from PCBTestLog nolock where PCBNo = @MBSno and Station=当前站 and Cdt>PCBLog中当前MB的最大过站时间
            </summary>
            <param name="pcbNo"></param>
            <param name="status"></param>
            <param name="station"></param>
            <param name="beginCdt"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMbInfoListByInfoTypeAndPcbNoList(System.String,System.String[])">
            <summary>
            select * from PCBInfo nolock where InfoType='OLD MB' and PCBNo in (@OldMBSno,@NewMBSno)
            </summary>
            <param name="infoType"></param>
            <param name="pcbNos"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateMtaMarkByRepairId(System.Int32,System.String)">
            <summary>
            update [MTA_Mark] Mark = ‘1’
            </summary>
            <param name="repairId"></param>
            <param name="mark"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertMtaMarkInfo(IMES.DataModel.MtaMarkInfo)">
            <summary>
            Insert MTA_Mark
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMbCodeAndMdlInfoList(System.String,System.String,System.String,System.String)">
            <summary>
            SELECT DISTINCT b.InfoValue as [MB Code], c.InfoValue as [MDL],b.InfoValue + ' ' + c.InfoValue as [DisplayName]
            FROM IMES2012_GetData..Part a, IMES2012_GetData..PartInfo b, IMES2012_GetData..PartInfo c
            WHERE a.BomNodeType = 'MB'
             AND a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             AND b.InfoType = 'MB'
             AND c.InfoType = 'MDL'
             AND c.InfoValue LIKE '%B SIDE'
            order by b.InfoValue
            
            SELECT DISTINCT b.InfoValue as [MB Code], c.InfoValue as [MDL],b.InfoValue + ' ' + c.InfoValue as [DisplayName]
            FROM IMES2012_GetData..Part a, IMES2012_GetData..PartInfo b, IMES2012_GetData..PartInfo c
            WHERE a.BomNodeType = @bomNodeType
             AND a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             AND b.InfoType = @mbType
             AND c.InfoType = @mdlType
             AND c.InfoValue LIKE '%' + @mdlPostfix
            order by b.InfoValue
            </summary>
            <param name="bomNodeType"></param>
            <param name="mbType"></param>
            <param name="mdlType"></param>
            <param name="mdlPostfix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPartNoListByInfo(System.String,System.String,System.String)">
            <summary>
            select distinct b.PartNo 
            from IMES2012_GetData..Part a(nolock),IMES2012_GetData..PartInfo b(nolock) 
            where a.PartNo = b.PartNo 
            and a.BomNodeType = 'MB'
            and b.InfoType = 'MB'
            and b.InfoValue = @MBCode
            order by b.PartNo
            
            select distinct b.PartNo 
            from IMES2012_GetData..Part a(nolock),IMES2012_GetData..PartInfo b(nolock) 
            where a.PartNo = b.PartNo 
            and a.BomNodeType = @bomNodeType 
            and b.InfoType = @mbType 
            and b.InfoValue = @mbCode
            order by b.PartNo
            </summary>
            <param name="bomNodeType"></param>
            <param name="mbType"></param>
            <param name="mbCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMbCodeAndMdlInfoByPnoForMB(System.String)">
            <summary>
            SELECT TOP 1 b.InfoValue as [MB Code], c.InfoValue as [MDL],b.InfoValue + ' ' + c.InfoValue as [DisplayName]
            FROM IMES2012_GetData..Part a, IMES2012_GetData..PartInfo b, IMES2012_GetData..PartInfo c
            WHERE a.BomNodeType = 'MB'
             AND a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             AND b.InfoType = 'MB'
             AND c.InfoType = 'MDL'
             AND a.PartNo = @pno
            </summary>
            <param name="pno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ExistPCBRepair(System.String,System.Int32)">
            <summary>
            select * from PCBRepair where PCBNo=@MBSno and Status=@Status
            </summary>
            <param name="mbSno"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetBorrowLogBySno(System.String,System.String)">
            <summary>
            SELECT * BorrowLog WHERE Sn=@Sn and Status=@Status
            </summary>
            <param name="sn"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateBorrowLog(IMES.DataModel.BorrowLog,System.String)">
            <summary>
            UPDATE [IMES_FA].[dbo].[BorrowLog] SET Returner=@Lender, Accepter=@Editor, Status='R', 
             Rdate=GETDATE()
            WHERE Sno=@MBSno
            AND Status=@Status 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMbCodeAndMdlInfoList(System.String,System.String,System.String,System.String,System.String,System.String)">
             <summary>
             SQL：SELECT DISTINCT b.InfoValue as [MB Code], c.InfoValue as [MDL],b.InfoValue + ' ' + c.InfoValue as [DisplayName]
             FROM IMES2012_GetData..Part a, IMES2012_GetData..PartInfo b, IMES2012_GetData..PartInfo c,IMES2012_GetData..PartInfo d,SMTMO e
             WHERE a.BomNodeType = 'MB'
             AND a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             And a.PartNo = d.PartNo
             And a.PartNo = e.IECPartNo
             AND b.InfoType = 'MB'
             AND c.InfoType = 'MDL'
             AND c.InfoValue LIKE '%B SIDE'
             And d.InfoType = 'VGA'
             And d.InfoValue = 'SV'
             AND e.PrintQty ＜ e.Qty
             order by b.InfoValue
            
             SQL：SELECT DISTINCT b.InfoValue as [MB Code], c.InfoValue as [MDL],b.InfoValue + ' ' + c.InfoValue as [DisplayName]
             FROM IMES2012_GetData..Part a, IMES2012_GetData..PartInfo b, IMES2012_GetData..PartInfo c,IMES2012_GetData..PartInfo d,SMTMO e
             WHERE a.BomNodeType = @bomNodeType
             AND a.PartNo = b.PartNo
             AND a.PartNo = c.PartNo
             And a.PartNo = d.PartNo
             And a.PartNo = e.IECPartNo
             AND b.InfoType = @mbType
             AND c.InfoType = @mdlType
             AND c.InfoValue LIKE '%' + @mdlPostfix
             And d.InfoType = @vgaType
             And d.InfoValue = @vgaValue
             AND e.PrintQty ＜ e.Qty
             order by b.InfoValue
             </summary>
             <param name="bomNodeType"></param>
             <param name="mbType"></param>
             <param name="mdlType"></param>
             <param name="mdlPostfix"></param>
             <param name="vgaType"></param>
             <param name="vgaValue"></param>
             <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateRptPcaRepInfo(IMES.DataModel.RptPcaRepInfo,IMES.DataModel.RptPcaRepInfo)">
            <summary>
            1. Update [rpt_PCARep] Status = '1'
            setValue哪个字段赋值就有更新哪个字段;condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateMtaMarkInfo(IMES.DataModel.MtaMarkInfo,IMES.DataModel.MtaMarkInfo)">
            <summary>
            2. Update [MTA_Mark] Mark = '1'
            setValue哪个字段赋值就有更新哪个字段;condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.CheckExistPcbRepairWithDefectOfCertainCausePrefix(System.String,System.String)">
            <summary>
            3.SQL:EXISTS( select COUNT(1) from PCBRepair a (nolock) inner join PCBRepair_DefectInfo b (nolock) on a.ID=b.PCARepairID 
            where left(b.Cause,2)=@causePrefix and a.PCBNo=@mbSno )
            </summary>
            <param name="causePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbRepairDefectInfoIdListWithDefect(System.String)">
            <summary>
            4.SQL:select PCBRepair_DefectInfo.ID 
            from PCBRepair_DefectInfo inner join PCBRepair on PCBRepair_DefectInfo.PCARepairID = PCBRepair.ID 
            where PCBRepair.PCBNo = @MBSno
            </summary>
            <param name="mbSno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBLog(System.String,System.String,System.Int32)">
            <summary>
            select * from PCBLog where PCBNo=@PCBNo and Station=@Station and Status=@Status order by Cdt
            </summary>
            <param name="pcbno"></param>
            <param name="station"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBCode(System.String)">
            <summary>
            select * from MBCode where MBCode=@MBCode
            </summary>
            <param name="mbCode"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBInfoValue(System.String,System.String)">
            <summary>
            select top 1 InfoValue from PCBInfo where PCBNo=@pcbno and InfoType=@infotype order by ID desc
            </summary>
            <param name="pcbno"></param>
            <param name="infotype"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetQtyListFromPcaIctCountByCdtAndPdLine(System.DateTime,System.String)">
            <summary>
            select Qty 
            from PCAICTCount 
            where Cdt='1900-01-01 00:00:00.000' and PdLine=@PdLine
            </summary>
            <param name="cdt"></param>
            <param name="pdLine"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateQtyFromPcaIctCountByCdtAndPdLine(System.Int32,System.DateTime,System.String)">
            <summary>
            Update PCAICTCount
            set Qty=0
            where PdLine=@PdLine and Cdt='1900-01-01 00:00:00.000'
            </summary>
            <param name="qty"></param>
            <param name="cdt"></param>
            <param name="pdLine"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertPcaIctCountInfo(IMES.DataModel.PcaIctCountInfo)">
            <summary>
            insert into PCAICTCount values(@PdLine,@Qty ,getdate())
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBCFG(System.String,System.String)">
            <summary>
            select top 1 * from MBCFG where TP=@Type and MBCode=@MBCode order by Udt Desc
            </summary>
            <param name="mbCode"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLatestFailLog(System.String)">
            <summary>
            PCBLog.ID 
            Condition：PCBNo=MBSno and Status=0 Order By Cdt Desc
            </summary>
            <param name="productId">pcbNo</param>
            <returns>MBLog</returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLatestFailLogRegardlessStatus(System.String)">
            <summary>
            PCBLog.ID from PCBLog where PCBNo=#OldMB order by Cdt desc
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String)">
            <summary>
            select * from PCBTestLog nolock where PCBNo = @MBSno  order by cdt desc
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcaTestCheckInfoListByCode(System.String)">
            <summary>
            select MAC,MBCT,HDDV,BIOS from PCATest_check where code = left(@MBSno,2)
            </summary>
            <param name="mbSno"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcaTestCheckInfoListByCode(IMES.DataModel.PcaTestCheckInfo)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdatePcbStatuses(IMES.FisObject.PCA.MB.MBStatus,System.String[])">
            <summary>
            Update PCA..PCBStatus.Station=30
            setValue哪个字段赋值就有更新哪个字段;
            </summary>
            <param name="setValue"></param>
            <param name="pcbIds"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddMBLogs(IMES.FisObject.PCA.MB.MBLog[])">
            <summary>
            Insert PCA..PCBLog：Station=’DM’Status=1
            </summary>
            <param name="mbLogs"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.CheckExistByFamilyAndCode(System.String,System.String)">
            <summary>
            根据参数 family,code 查询Maintain_ITCNDefect_Check表中的记录.
            </summary>
            <param name="family"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.CheckSATestCheckRuleExist(System.String)">
            <summary>
            1,SQL: select * from PACTest_Check where Code=[code]
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemoveSATestCheckRuleItem(System.Int32)">
            <summary>
            2,SQL: delete from PACTest_Check where id=[id]
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddSATestCheckRuleItem(IMES.DataModel.PcaTestCheckInfo)">
            <summary>
            3,将一条item插入到PACTest_Check 表中.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateTestCheckRuleItem(IMES.DataModel.PcaTestCheckInfo,System.Int32)">
            <summary>
            4,update PACTest_Check set [item各个字段].
            </summary>
            <param name="item"></param>
            <param name="id"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetAllSATestCheckRuleItems">
            <summary>
            SQL : Select * from PCATest_Check
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdatePCBLotInfo(IMES.DataModel.PcblotInfo,IMES.DataModel.PcblotInfo)">
            <summary>
            1)Update PCBLot
            Update PCBLot.Status=0 where Status=1 and PCBNo=@MBSN
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateLotInfo(IMES.DataModel.LotInfo,IMES.DataModel.LotInfo)">
            <summary>
            2)Update Lot
            Update Lot---Update Lot：Status='1' where LotNo=@LotNo
            G---Update Lot SET Status='1' where  LotNo=@LotNo
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateLotInfoForDecQty(IMES.DataModel.LotInfo,IMES.DataModel.LotInfo)">
            <summary>
            Update Lot.Qty=Qty-1 where LotNo=@LotNo 
            setValue.Qty赋1，其他按需要赋值即可
            </summary>
            <param name="todec"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcblotInfoList(IMES.DataModel.PcblotInfo)">
            <summary>
            3) getPCBLot
            Select * from PCBLot where Status=1 and PCBNo=@MBSN
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetlotInfoList(IMES.DataModel.LotInfo)">
            <summary>
            获取[LotList]
            A．Select LotNo, Type, MBCode，Qty from Lot Where Line=[PdLine] and Status='0'
            1）[Lot]中是否存在@MBCode和@Type记录：
            B．select LotNo, Type, MBCode，Qty from Lot where MBcode=left(@MBSno,2) and [Type]= @Type
            2、Check @MBCode和@Type对应的Qty，
            B．select LotNo, Type, MBCode，Qty from Lot where MBcode=left(@MBSno,2) and [Type]= @Type（同上）
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertLotInfo(IMES.DataModel.LotInfo)">
            <summary>
            Insert Lot：LotNo=新产生No, Line=当前Line，Type=@Type, Qty=1, Status=0 
            C．insert into lot (lostNo, Line, Type, Qty,status,MBCode) value(@LostNo, @Line, @Type, @Qty,@Status,left(@MBSno,2))
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateLotInfoForIncQty(IMES.DataModel.LotInfo,IMES.DataModel.LotInfo)">
            <summary>
            Update Lot：Qty=Qty+1, Editor, Udt where LotNo=@LotNo 
            D．Update Lot SET Qty=Qty+1, Editor=@Editor, Udt=now where  LotNo=@LotNo
            setValue.Qty赋1，其他按需要赋值即可
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertPCBLotInfo(IMES.DataModel.PcblotInfo)">
            <summary>
            Insert PCBLot：LotNo=@LotNo, PCBNo=@MBSN, Status=1 
            E．Insert intoPCBLot (lotNo,PCBNo, Status) value(@LostNo,@MBSN,1)
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLotSettingInfoList(IMES.DataModel.LotSettingInfo)">
            <summary>
            1、获取LotSetting表中PassQty
            F--select PassQty,FailQty from LotSetting where Line=@Line
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertLotSettingInfo(IMES.DataModel.LotSettingInfo)">
            <summary>
            2、添加记录
            功能：向LotSetting表中添加一条记录
            入参：DS item
            出参：无
            返回值：void
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteLotSettingInfo(IMES.DataModel.LotSettingInfo)">
            <summary>
            3、删除记录
            功能：从LotSetting表中删除Id值为输入值的记录
            入参：string id
            出参：无
            返回值：void
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String,System.Int32,System.String)">
            <summary>
            select * from PCBTestLog where PCBNo='输入1' and Station='输入2' and Status='输入3'
            </summary>
            <param name="pcbNo"></param>
            <param name="status"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBTestLogListFromPCBTestLog(System.String,System.String)">
            <summary>
            select * from PCBTestLog where PCBNo='输入1' and Station='输入2' 
            </summary>
            <param name="pcbNo"></param>
            <param name="status"></param>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateLotSettingInfo(IMES.DataModel.LotSettingInfo,IMES.DataModel.LotSettingInfo)">
            <summary>
            2、update LotSetting表记录
            功能：从LotSetting表中更新制定记录
            入参：DS item
            出参：无
            返回值：void
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbNoAndCheckStatusList(System.String,System.String)">
            <summary>
            获取PCBLot信息，并显示
            select a.PCBNo, ISNULL(b.Status,'0') as Checked from PCBLot a
                  left Join PCBLotCheck b
                  on a.LotNo = b.LotNo
                  and a.PCBNo = b.PCBNo
               where a.LotNo=@LotNo and a.Status=1
               order by a.PCBNo
            </summary>
            <param name="lotNo"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertPCBLotCheckFromPCBLot(System.String,System.String,IMES.DataModel.PcblotInfo)">
            <summary>
            Insert PCBLotCheck Select LotNo, @PCBNo, ‘0’, @Editor, getdate() from PCBLot where PCBNo=@MBSN and Status=1)
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetCountOfPcblotCheck(IMES.DataModel.PcblotcheckInfo)">
            <summary>
            select count(*) from Pcblotcheck where lotNo=@lotNo and status ='1'
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetStationListFromPcbStatus(System.String)">
            <summary>
            1.通过PCBStatus.PCBNo获取以下信息
             [Station] = PCBStatus.Station + ‘  ’ + Station.Descr
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLineListFromPcbStatus(System.String)">
            <summary>
            1.通过PCBStatus.PCBNo获取以下信息
             [PdLine] = PCBStatus.Line + ‘  ’ +Line.Descr
            </summary>
            <param name="pcbNo"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLotList(System.String[],System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Select LotNo,Line,Type,Qty,Status,Cdt, MBCode From Lot
            Where (Status=1 or Status=2)
            And DateDiff(day, Cdt, getdate()) &gt;= @OQCTimeSpan
            And Line=@PdLine
            And MBCode=@MBCode
            And Qty &gt; @LotQty
            Order by Cdt
            </summary>
            <param name="statuses"></param>
            <param name="oqcTimeSpanDays"></param>
            <param name="pdLine"></param>
            <param name="mbCode"></param>
            <param name="lotQty"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcboqcrepairInfoList(IMES.DataModel.PcboqcrepairInfo)">
            <summary>
            9.Select * from PCBOQCRepair where Status=0 order by Cdt
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcboqcrepairInfoListOrderByCdtDesc(IMES.DataModel.PcboqcrepairInfo)">
            <summary>
            3.获取PCBOQCRepair  条件：Status=0 and PCBNo=@MBSN order by Cdt desc
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcboqcrepairDefectinfoInfoList(IMES.DataModel.Pcboqcrepair_DefectinfoInfo)">
            <summary>
            4.获取如下数据，显示在Defect List
            Select * from PCBOQCRepair_DefectInfo where PCBOQCRepairID = @PCBOQCRepairID order by Cdt
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdatePcboqcrepairInfo(IMES.DataModel.PcboqcrepairInfo,IMES.DataModel.PcboqcrepairInfo)">
            <summary>
            5.Update PCBOQCRepair
            条件是@RepairID = PCBOQCRepair.ID
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeletePcboqcrepairInfo(IMES.DataModel.PcboqcrepairInfo)">
            <summary>
            7.Delete PCBOQCRepair_DefectInfo where PCBOQCRepairID = @RepairID
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertPcboqcrepairInfo(IMES.DataModel.PcboqcrepairInfo)">
            <summary>
            6.Insert PCBOQCRepair
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertPcboqcrepairDefectinfo(IMES.DataModel.Pcboqcrepair_DefectinfoInfo)">
            <summary>
            8.Insert PCBOQCRepair_DefectInfo
            PCBOQCRepairID=@RepairID
            Defect = 刷入Defect
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetSMTLineList">
            <summary>
            获得所有SMTLine记录(按Line栏位排序)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemoveSMTLine(IMES.DataModel.SMTLineDef)">
            <summary>
            删除对应的数据
            </summary>
            <param name="condition"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetExistSMTLine(IMES.DataModel.SMTLineDef)" -->
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddSMTLine(IMES.DataModel.SMTLineDef)">
            <summary>
            保存code对应数据到数据库（需要底层处理时加上cdt和udt）
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ChangeSMTLine(IMES.DataModel.SMTLineDef,IMES.DataModel.SMTLineDef)">
            <summary>
            更新对应的数据，连Line也可更新，调此接口前已经确定newItem.Line不存在且oldItem.Line存在
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetLineList">
            <summary>
            select Remark,Line from Dept order by Section,substring(Line,4,1), substring(Line,3,1)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetSectionList(IMES.DataModel.DeptInfo)">
            <summary>
            1、Get [Section] Data：
            参考方法：
            select distinct(Section) from Dept where Dept=[Dept]
            union 
            select 'SMT1A'
            union
            select 'SMT1B'
            Note：
            注意：Union和Union ALL 的区别
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetSectionList(IMES.DataModel.DeptInfo,IMES.DataModel.DeptInfo)">
            <summary>
            2、Get [Line] List
            参考方法：
            select * from Dept 
                   where Dept = [Dept]
                   and Section like '[Section]%'
            order by Dept, Section, Line, FISLine
            </summary>
            <param name="eqCondition"></param>
            <param name="likeCondition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetDeptInfoList">
            <summary>
            实现sql：select * from Dept order by Section, substring(Line,4,1), substring(Line,3,1)
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetDeptInfoList(IMES.DataModel.DeptInfo)">
            <summary>
            3、获取表数据
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteDeptInfo(IMES.DataModel.DeptInfo)">
            <summary>
            4、删除记录
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddDeptInfo(IMES.DataModel.DeptInfo)">
            <summary>
            5、创建记录
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdateDeptInfo(IMES.DataModel.DeptInfo,IMES.DataModel.DeptInfo)">
            <summary>
            6、更新记录
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetDeptList">
            <summary>
            select distinct(Dept) from Dept 
            union 
            select 'SMT'
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.AddFamilyMbInfo(IMES.DataModel.FamilyMbInfo)">
            <summary>
            Family_MB增
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.DeleteFamilyMbInfo(IMES.DataModel.FamilyMbInfo)">
            <summary>
            Family_MB删
            </summary>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ModifyFamilyMbInfo(IMES.DataModel.FamilyMbInfo,IMES.DataModel.FamilyMbInfo)">
            <summary>
            Family_MB改
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetFamilyMbInfoList(IMES.DataModel.FamilyMbInfo)">
            <summary>
            Family_MB查
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetFamilyListFromFamilyMbByLike(System.String)">
            <summary>
            Family_MB查
            select distinct Family from Family_MB where Family like @family + '%' order by Family
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetFamilyListFromFamilyMb">
            <summary>
            Family_MB查
            select distinct Family from Family_MB order by Family
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetSMTTimeInfoList(System.DateTime)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetSMTLineInfoListByLineList(System.Collections.Generic.IList{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.CreateAlarmWithSpecifiedDefectForSA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.UpdateForCreateAlarmWithDefectForSA(IMES.DataModel.AlarmSettingInfo,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.CreateAlarmWithExcludedDefectForSA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.CreateAlarmWithAllDefectForSA(IMES.DataModel.AlarmSettingInfo)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.CreateAlarmWithYieldForSA(IMES.DataModel.AlarmSettingInfo)" -->
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.UpdatePcb(IMES.DataModel.PcbEntityInfo,IMES.DataModel.PcbEntityInfo)">
            <summary>
            PCB（PCBNo=@NewMBSN, Editor,Udt; Codition: PCBNo=@MBSN）
            </summary>
            <param name="setValue"></param>
            <param name="condition"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetPCBWithAlarm(IMES.DataModel.AlarmInfo)" -->
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbInfoByCondition(IMES.FisObject.PCA.MB.MBInfo)">
            <summary>
            PCBInfo.InfoValue; Condition: InfoType = 'MBCT2'
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.PCA.MB.IMBRepository.GetPcbNoFromPcbRepairAndPcbRepairDefectInfo(System.String,System.String)" -->
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBRepairLogList(System.String)">
            <summary>
            根据MB的Id获得Repair列表
            </summary>
            <param name="MBId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.GetMBInfo(System.String)">
            <summary>
            根据MB的Id获得MB信息
            </summary>
            <param name="MBId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.InsertFruDetInfo(IMES.DataModel.FruDetInfo)">
            <summary>
            Add FruDet
            </summary>
            <param name="newFruDet"></param>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ReplaceMBSnDefered(IMES.Infrastructure.UnitOfWork.IUnitOfWork,System.String,System.String)">
            <summary>
            Replace Old MB Data with New MB Sno, defered version
            </summary>
            <param name="uow">UnitOfWork</param>
            <param name="oldSn">oldSn</param>
            <param name="newSn">newSn</param>
            <remarks>
            将下列各表中的Old MB Sno 对应记录的PCBNo 栏位Update 为New MB Sno
            IMES_PCA..MODismantleLog
            IMES_PCA..PCB
            IMES_PCA..PCBInfo
            IMES_PCA..PCBLog
            IMES_PCA..PCBRepair
            IMES_PCA..PCBStatus
            IMES_PCA..PCBTestLog
            IMES_PCA..PCB_Part
            IMES_PCA..SnoLog3D
            IMES_PCA..TransferToFISList
            </remarks>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.ExistsPCBInfoAndLogStation(System.String,System.String,System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            select top 1 a.PCBNo, a.Status 
                                                            from PCBLog a, 
                                                                 PCBInfo b,
                                                                 @StationList c 
                                                            where a.PCBNo = b.PCBNo and 
                                                                 b.InfoType=@InfoType and 
                                                                 b.InfoValue=@InfoValue and 
                                                                  a.Station =c.data   and
                                                                  a.Status =@Status
            </summary>
            <param name="infoType"></param>
            <param name="infoValue"></param>
            <param name="stationList"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.PCA.MB.IMBRepository.RemovePCBInfosByType(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            delete PCBInfo where PCBNo=@pcbNo and InfoType in @itemtypes
            </summary>
            <param name="proid"></param>
            <param name="itemTypes"></param>
        </member>
        <member name="T:IMES.FisObject.PCA.EcrVersion.EcrVersion">
            <summary>
            ECRVersion实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.PCA.EcrVersion.EcrVersion.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Family">
            <summary>
            Family
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.MBCode">
            <summary>
            MBCode
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.ECR">
            <summary>
            ECR
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.IECVer">
            <summary>
            IECVer
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Remark">
            <summary>
            Remark
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.PCA.EcrVersion.EcrVersion.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="T:IMES.FisObject.PAK.Pallet.PalletLog">
            <summary>
            PalletLog业务对象
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Id">
            <summary>
            Log的ID
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.PalletNo">
            <summary>
            Pallet序号
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Station">
            <summary>
            经过的Station
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Line">
            <summary>
            所在的Line
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Pallet.PalletLog.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonQCLog.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.PAK.Carton.CartonQCLog.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Repair.ReturnRepair">
            <summary>
            成退ReturnRepair实体
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Repair.ReturnRepair.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.ReturnRepair.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.ReturnRepair.PCBRepairID">
            <summary>
            PCBRepairID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.ReturnRepair.ProductRepairID">
            <summary>
            ProductRepairID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.ReturnRepair.ProductRepairDefectID">
            <summary>
            ProductRepairDefectID
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Repair.ReturnRepair.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.PrintLog.IPrintLogRepository">
            <summary>
            PrintLog对象Repository接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.GetPrintLogListByRange(System.String)">
            <summary>
            在PrintLog中查找
            ProdId在BegNo和EndNo中范围内，且MO满足1的条件
            </summary>
            <param name="prodId"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.GetPrintLogListByCondition(IMES.FisObject.Common.PrintLog.PrintLog)">
            <summary>
            condition哪个字段赋值就有哪个条件,自由使用各个条件,条件间是AND关系.
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.CheckExistPrintLogByLabelNameAndDescr(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="descr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.GetPrintLogListByRange(System.String,System.String)">
            <summary>
            select * from IMES2012_GetData..PrintLog where @mbSno between BegNo and EndNo and Name=@Tp'
            </summary>
            <param name="mbSno"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.InsertPrintListInfo(IMES.DataModel.PrintListInfo)">
            <summary>
            往PrintList表插入记录 
            </summary>
            <param name="item"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.CheckPrintLogListByRange(System.String,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.CheckPrintLogListByRange(System.String,System.String,System.String)" -->
        <member name="M:IMES.FisObject.Common.PrintLog.IPrintLogRepository.CheckPrintLogListByRange(System.String,System.String,System.String,System.String)">
            <summary>
            SELECT top 1 ID  FROM PrintLog WHERE BegNo=@begSno AND EndNo=@endSno AND Name=@Name and LabelTemplate=@LabelTemplate
            </summary>
            <param name="begSno"></param>
            <param name="endSno"></param>
            <param name="name"></param>
            <param name="labelTemplate"></param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.Region">
            <summary>
            出货目的地区
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Region.region">
            <summary>
            目的地区
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Region.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Region.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Region.Udt">
            <summary>
            Udt
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.Region.Cdt">
            <summary>
            Cdt
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartStrategyFactory">
            <summary>
            构造PartStrategy对象的工厂类
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartStrategyFactory._strategies">
            <summary>
            key: FisObjectType.Name, Value: Repository Object
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartStrategyFactory.GetPartStrategy(System.String,System.String)">
            <summary>
             给据customer和parttype获取PartStrategy对象
            </summary>
            <param name="partType">partType</param>
            <param name="customer">customer</param>
            <returns></returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.IMatchRule">
            <summary>
            匹配规则接口
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.IMatchRule.Match(System.String,System.Object,System.Boolean@)">
            <summary>
            尝试将指定匹配目标与指定part在当前匹配规则下进行匹配
            </summary>
            <param name="target">匹配目标</param>
            <param name="part">指定part</param>
            <param name="containCheckBit">匹配目标是否带校验位</param>
            <returns>匹配结果</returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.CommonMatchRule">
            <summary>
             一般匹配规则，定义各种匹配规则的公有实现，一个匹配规则由多个匹配元素组成
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.CommonMatchRule.#ctor(System.Collections.Generic.IList{IMES.FisObject.Common.Part.PartMatchRuleElement})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.CommonMatchRule.Match(System.String,System.Object,System.Boolean@)">
            <summary>
            尝试将指定匹配目标与指定part在当前匹配规则下进行匹配
            </summary>
            <param name="target">匹配目标</param>
            <param name="part">指定part</param>
            <param name="containCheckBit">匹配目标是否带校验位</param>
            <returns>匹配结果</returns>
        </member>
        <member name="P:IMES.FisObject.Common.Part.CommonMatchRule.MatchRules">
            <summary>
             匹配规则的组成元素
            </summary>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartMatchRuleElement">
            <summary>
            匹配规则元素
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.PartCheckID">
            <summary>
            所属的PartCheck
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.RegExp">
            <summary>
            正则表达式匹配规则
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.PnExp">
            <summary>
            使用Pn与匹配目标关系定义的匹配规则
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.PartPropertyExp">
            <summary>
            使用Part属性与匹配目标之间关心定义的匹配规则
            </summary>
        </member>
        <member name="F:IMES.FisObject.Common.Part.PartMatchRuleElement.ContainCheckBit">
            <summary>
            该匹配规则是否假定匹配目标带校验位
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartMatchRuleElement.Match(System.String,System.Object)">
            <summary>
            尝试将匹配目标与指定Part在当前匹配规则元素下进行匹配
            </summary>
            <param name="target">匹配目标</param>
            <param name="part">指定Part</param>
            <returns>匹配结果</returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartPropertyMatchPattern">
            <summary>
            PartPropertyExp与PnExp的匹配方法实现
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartPropertyMatchPattern.IsMatch(System.String,IMES.FisObject.Common.Part.IPart,System.String)">
            <summary>
            PartPropertyExp与PnExp的匹配方法实现
            e.g.
             PN(1,8)=CODE(2,9);PN(10,10)=CODE(15,15)
             PN=CODE
             PN=CODE(1,6)
            e.g. 
            GCode(1,8)=CODE(2,9);
            GCode(10,10)=CODE(15,15);
            GCode=CODE
            </summary>
            <param name="input">匹配目标</param>
            <param name="pattern">匹配规则表达式</param>
            <returns>匹配结果</returns>
        </member>
        <member name="T:IMES.FisObject.Common.Part.PartCheck">
            <summary>
            系统中可用的通用PartCheck类型
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Part.PartCheck.#ctor(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,IMES.FisObject.Common.Part.IMatchRule)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.ID">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.Customer">
            <summary>
            Customer
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.PartType">
            <summary>
            PartType
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.ValueType">
            <summary>
            PartCheck对应的Part属性类型
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.NeedSave">
            <summary>
            是否需要保存绑定数据
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.NeedCheck">
            <summary>
            是否需要进行PartCheck
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.Editor">
            <summary>
            数据维护人员工号
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.Udt">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.MatchRule">
            <summary>
            匹配规则
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Part.PartCheck.Key">
            <summary>
            对象标示key, 在同类型FisObject范围内唯一
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxNumber(System.String,System.String,System.String)">
            <summary>
            根据Type,Customer, 前缀来查找NumControl里的最大值.
            </summary>
            <param name="type"></param>
            <param name="preStr"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxNumber(System.String,System.String)">
            <summary>
            根据Type， 前缀来查找NumControl里的最大值.
            </summary>
            <param name="type"></param>
            <param name="preStr"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxUCCIDNumber(System.String)">
            <summary>
            select max(convert(int,Value)) from NumControl where NoType='UCCID'
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.SaveMaxNumber(IMES.FisObject.Common.NumControl.NumControl,System.Boolean,System.String)">
            <summary>
            保存NumControl, 新增或修改.
            </summary>
            <param name="item"></param>
            <param name="insertOrUpdate"></param>
            <param name="preStr"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxMACRange(System.String,System.String,System.String@)">
            <summary>
            获得指定状态,111 Part Code的地址范围及其使用到的位置.
            </summary>
            <param name="_111PartCode"></param>
            <param name="rangeStatus"></param>
            <param name="maxNumber"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetAvailableRange(System.String,System.String)">
            <summary>
            获得指定状态,111 Part Code的可用的地址范围
            </summary>
            <param name="_111PartCode"></param>
            <param name="rangeStatus"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.SetMACRangeStatus(System.Int32,System.String)">
            <summary>
            更新地址范围的状态.
            </summary>
            <param name="macRangeId"></param>
            <param name="rangeStatus"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.SaveMaxMAC(IMES.FisObject.Common.NumControl.NumControl)">
            <summary>
            保存最大的MAC地址.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetNumControlByNoTypeAndValue(System.String,System.String)">
            <summary>
            根据Notype和Value取得NumControl的记录数据
            </summary>
            <param name="noType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetAssetRangeInfo(System.String)">
            <summary>
            A.	得到IE维护的Asset SN可用范围：AssetRange表里的得到Begin和End，按照Code=@cust作查询
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.SaveMaxAssetNumber(IMES.FisObject.Common.NumControl.NumControl,System.Boolean)">
            <summary>
            B.	生成序号：当没有找到该CUST已用过的最大号时，使用定义范围的最小号，否则作+1处理。字符包括”0123456789”
            </summary>
            <param name="item"></param>
            <param name="insertOrUpdate"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMACRange(System.String,System.String[])">
            <summary>
            select top 1 * from MACRange where Code = @code and Status IN (‘R’,’A’) order by Cdt
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxValue(System.String,System.String)">
            <summary>
            select top 1 * from NumControl where NoName=@NoName and NoType=@NoType order by Value desc
            </summary>
            <param name="noType"></param>
            <param name="noName"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMaxValue(System.String,System.String,System.String)">
            <summary>
            select top 1 * from NumControl where NoName=@NoName and NoType=@NoType and Customer=@Customer order by Value desc
            </summary>
            <param name="noType"></param>
            <param name="noName"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMACRangeList">
            <summary>
             取得MACRange List列表（按“Code”列的字母序排序+Cdt排序）
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMACRange(System.Int32)">
            <summary>
            取得一条MACRang的记录数据
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.AddMACRange(IMES.FisObject.Common.NumControl.MACRange)">
            <summary>
            保存一条MACRang的记录数据(Add)
            </summary>
            <param name="Object"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.UpdateMACRange(IMES.FisObject.Common.NumControl.MACRange)">
            <summary>
            保存一条MACRang的记录数据(update)
            </summary>
            <param name="Object"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.DeleteMACRange(System.Int32)">
            <summary>
            删除一条MACRang数据
            </summary>
            <param name="?"></param>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMACRangeTotalByCode(System.String)">
            <summary>
            取得code下的Mac总数
            指定Code对应的所有MAC Range的CodeEndNo-BeginNo+1的合计值
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetMACRangeTotalUsedByCode(System.String)">
            <summary>
            取得code下的MacRange使用的Mac总数
            指定Code对应的所有Status为Close的MAC Range的CodeEndNo-BeginNo+1的合计值加上NumControl表中对应该
            Code的Value减去该Code对应的Status为Active的MAC Range的BeginNo再加1
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.NumControl.INumControlRepository.GetHDCPQuery">
            <summary>
            SELECT COUNT(*) FROM HDCPKey WHERE Status = 'R'
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMES.FisObject.Common.Material.MaterialBoxAttr.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBoxAttr.Editor">
            <summary>
            Editor
            </summary>
        </member>
        <member name="P:IMES.FisObject.Common.Material.MaterialBoxAttr.Cdt">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="M:IMES.FisObject.Common.Location.FloorAreaLoc.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
    </members>
</doc>
