<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="eng_lblAoiNo" xml:space="preserve">
    <value>AOI No:</value>
  </data>
  <data name="eng_lblECR" xml:space="preserve">
    <value>ECR:</value>
  </data>
  <data name="eng_colDefectCode" xml:space="preserve">
    <value>Defect Code</value>
  </data>
  <data name="eng_colDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="eng_pnlInputDefectList" xml:space="preserve">
    <value>Defect List:</value>
  </data>
  <data name="eng_msgDuplicateData" xml:space="preserve">
    <value>Duplicate Data!!</value>
  </data>
  <data name="eng_msgInputValidDefect" xml:space="preserve">
    <value>Please input the valid Defect!!</value>
  </data>
  <data name="eng_lblSupportDefectList" xml:space="preserve">
    <value>OQC Support Defect List:</value>
  </data>
  <data name="cn_msgInputDefect" xml:space="preserve">
    <value>本站只能刷入不良品，请输入不良代码!!</value>
  </data>
  <data name="eng_msgInputDefect" xml:space="preserve">
    <value>Please input Defect!!</value>
  </data>
  <data name="cn_msgDuplicateData" xml:space="preserve">
    <value>该Defect已经存在!!</value>
  </data>
  <data name="eng_msgPrestationError" xml:space="preserve">
    <value>The prestation is not OQC,EOQC or SKIP, cannot save!!</value>
  </data>
  <data name="cn_colDefectCode" xml:space="preserve">
    <value>不良Code</value>
  </data>
  <data name="cn_colDescription" xml:space="preserve">
    <value>不良描述</value>
  </data>
  <data name="cn_pnlInputDefectList" xml:space="preserve">
    <value>不良列表:</value>
  </data>
  <data name="cn_lblAoiNo" xml:space="preserve">
    <value>AOI No:</value>
  </data>
  <data name="cn_lblECR" xml:space="preserve">
    <value>ECR:</value>
  </data>
  <data name="cn_lblSupportDefectList" xml:space="preserve">
    <value>系统支持的OQC Defect:</value>
  </data>
  <data name="cn_msgInputValidDefect" xml:space="preserve">
    <value>请输入合法的Defect!!</value>
  </data>
  <data name="cn_msgPrestationError" xml:space="preserve">
    <value>前一站不是OQC,EOQC或者免检, 不能保存!!</value>
  </data>
  <data name="cn_mesNoSelectPdLine" xml:space="preserve">
    <value>请选择PdLine!</value>
  </data>
  <data name="eng_mesNoSelectPdLine" xml:space="preserve">
    <value>Please select PdLine!</value>
  </data>
  <data name="cn_chk9999" xml:space="preserve">
    <value>Don't scan '9999'</value>
  </data>
  <data name="cn_lblMBSno" xml:space="preserve">
    <value>MBSno:</value>
  </data>
  <data name="cn_pnlProductInformation" xml:space="preserve">
    <value>Product Information:</value>
  </data>
  <data name="eng_chk9999" xml:space="preserve">
    <value>Don't scan '9999'</value>
  </data>
  <data name="eng_lblMBSno" xml:space="preserve">
    <value>MBSno:</value>
  </data>
  <data name="eng_pnlProductInformation" xml:space="preserve">
    <value>Product Information:</value>
  </data>
  <data name="cn_msgPcidCheck" xml:space="preserve">
    <value>Please scan PCID Label</value>
  </data>
  <data name="cn_msgWwanCheck" xml:space="preserve">
    <value>Please scan WWAN Label</value>
  </data>
  <data name="eng_msgPcidCheck" xml:space="preserve">
    <value>Please scan PCID Label</value>
  </data>
  <data name="eng_msgWwanCheck" xml:space="preserve">
    <value>Please scan WWAN Label</value>
  </data>
  <data name="cn_lblInputAoi" xml:space="preserve">
    <value>Input AOI</value>
  </data>
  <data name="eng_lblInputAoi" xml:space="preserve">
    <value>Input AOI</value>
  </data>
  <data name="cn_msgInformation" xml:space="preserve">
    <value>若该板子已经修复完成，则刷入代码9999，刷出修护区；若板子还存在不良，请刷入DefectCode；若板子报废，请刷入6666</value>
  </data>
  <data name="cn_msgOutputRepair" xml:space="preserve">
    <value>成功刷出修护区</value>
  </data>
  <data name="cn_msgReturnRepair" xml:space="preserve">
    <value>请去修护区重新修复该MB</value>
  </data>
  <data name="eng_msgInformation" xml:space="preserve">
    <value>If the MB has repair finish, then scan 9999; If the MB has defect, please scan DefectCode; If the MB scrap, please scan 6666</value>
  </data>
  <data name="eng_msgOutputRepair" xml:space="preserve">
    <value>Output the repair area</value>
  </data>
  <data name="eng_msgReturnRepair" xml:space="preserve">
    <value>Please return to repair area to repair the MB</value>
  </data>
  <data name="cn_btnClearQty" xml:space="preserve">
    <value>Clear Qty</value>
  </data>
  <data name="cn_btnPrintSetting" xml:space="preserve">
    <value>Print Setting</value>
  </data>
  <data name="cn_lblDataCode" xml:space="preserve">
    <value>DCode:</value>
  </data>
  <data name="cn_lblPdline" xml:space="preserve">
    <value>PdLine:</value>
  </data>
  <data name="cn_lblQty" xml:space="preserve">
    <value>OK Qty:</value>
  </data>
  <data name="cn_mesInputError" xml:space="preserve">
    <value>刷入的Code错误！</value>
  </data>
  <data name="cn_mesNoInputAOINo" xml:space="preserve">
    <value>请输入AOI No！</value>
  </data>
  <data name="cn_mesNoInputMBSno" xml:space="preserve">
    <value>请输入MB Sno！</value>
  </data>
  <data name="cn_mesNoSelectDateCode" xml:space="preserve">
    <value>请选择 DCode！</value>
  </data>
  <data name="cn_mesNoSelPdLine" xml:space="preserve">
    <value>请选择 PdLine！</value>
  </data>
  <data name="cn_msgInputAQI" xml:space="preserve">
    <value>确定要刷入AOI No吗？</value>
  </data>
  <data name="eng_btnClearQty" xml:space="preserve">
    <value>Clear Qty</value>
  </data>
  <data name="eng_btnPrintSetting" xml:space="preserve">
    <value>Print Setting</value>
  </data>
  <data name="eng_lblDataCode" xml:space="preserve">
    <value>DCode:</value>
  </data>
  <data name="eng_lblPdline" xml:space="preserve">
    <value>PdLine:</value>
  </data>
  <data name="eng_lblQty" xml:space="preserve">
    <value>OK Qty:</value>
  </data>
  <data name="eng_mesInputError" xml:space="preserve">
    <value>scan the Code error!</value>
  </data>
  <data name="eng_mesNoInputAOINo" xml:space="preserve">
    <value>please input AOI No!</value>
  </data>
  <data name="eng_mesNoInputECR" xml:space="preserve">
    <value>please input ECR!</value>
  </data>
  <data name="eng_mesNoInputMBSno" xml:space="preserve">
    <value>please input MB Sno!</value>
  </data>
  <data name="eng_mesNoSelectDateCode" xml:space="preserve">
    <value>Please select DCode!</value>
  </data>
  <data name="eng_mesNoSelPdLine" xml:space="preserve">
    <value>Please select PdLine!</value>
  </data>
  <data name="eng_msgInputAQI" xml:space="preserve">
    <value>Do you really want to scan the AOI No?</value>
  </data>
  <data name="cn_ChkRCTO" xml:space="preserve">
    <value>RCTO</value>
  </data>
  <data name="eng_ChkRCTO" xml:space="preserve">
    <value>RCTO</value>
  </data>
  <data name="cn_mesNoInputECR" xml:space="preserve">
    <value>请输入ECR！</value>
  </data>
  <data name="cn_lblBCCode" xml:space="preserve">
    <value>B/C:</value>
  </data>
  <data name="eng_lblBCCode" xml:space="preserve">
    <value>B/C:</value>
  </data>
  <data name="cn_mesBCCodeNoMatch" xml:space="preserve">
    <value>B/C Code 與 MB Code 不符!</value>
  </data>
  <data name="cn_mesNoInputB/C" xml:space="preserve">
    <value>请输入B/C！</value>
  </data>
  <data name="eng_mesBCCodeNoMatch" xml:space="preserve">
    <value>B/C Code and MB Code No Match!</value>
  </data>
  <data name="eng_mesNoInputB/C" xml:space="preserve">
    <value>please input B/C!</value>
  </data>
  <data name="cn_msgInputPilotMo" xml:space="preserve">
    <value>确定要刷入Pilot Mo吗？</value>
  </data>
  <data name="eng_msgInputPilotMo" xml:space="preserve">
    <value>Do you really want to scan the Pilot Mo?</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
</root>